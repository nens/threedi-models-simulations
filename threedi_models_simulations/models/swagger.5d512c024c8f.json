{
    "swagger": "2.0",
    "info": {
        "title": "3Di API",
        "description": "3Di simulation API (latest stable version: v3) \n Framework release: 3.4.71 \n 3Di core release: 3.6.10 \ndeployed on:  09:22AM (UTC) on September 01, 2025",
        "termsOfService": "",
        "contact": {
            "email": "info@nelen-schuurmans.nl"
        },
        "license": {
            "name": "BSD License"
        },
        "version": "v3"
    },
    "host": null,
    "schemes": [
        "https"
    ],
    "basePath": "/",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic",
            "description": "This scheme is for Personal API Keys. Use the key as password. The username must be '__key__' (the word 'key' enclosed in double underscores)."
        },
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header",
            "description": "This scheme is for tokens generated by 3Di. A token can be retrieved from auth/tokens."
        },
        "OAuth2": {
            "type": "oauth2",
            "name": "Authorization",
            "flow": "accessCode",
            "authorizationUrl": "https://auth.lizard.net/oauth2/authorize",
            "tokenUrl": "https://auth.lizard.net/oauth2/token",
            "description": "This scheme is for OAuth2 Bearer tokens. By default, a public client_id is set. Optionally supply another client id / secret (for testing)."
        }
    },
    "security": [
        {
            "Basic": []
        },
        {
            "Bearer": []
        },
        {
            "OAuth2": []
        }
    ],
    "paths": {
        "/v3-beta/auth/users/": {
            "post": {
                "operationId": "auth_users_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AddUser"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": []
        },
        "/v3-beta/auth/users/{user_pk}/personalapikeys/": {
            "get": {
                "operationId": "auth_users_personalapikeys_list",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PersonalAPIKey"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "auth_users_personalapikeys_create",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKeyWithSecret"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "user_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/auth/users/{user_pk}/personalapikeys/{prefix}/": {
            "get": {
                "operationId": "auth_users_personalapikeys_read",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "auth_users_personalapikeys_delete",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "prefix",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/auth/users/{user_pk}/personalapikeys/{prefix}/revoke/": {
            "post": {
                "operationId": "auth_users_personalapikeys_revoke",
                "description": "Revoke an API key and return the status.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "prefix",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/personalapikeys/": {
            "get": {
                "operationId": "personalapikeys_list",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PersonalAPIKey"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "personalapikeys_create",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKeyWithSecret"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": []
        },
        "/v3-beta/personalapikeys/{prefix}/": {
            "get": {
                "operationId": "personalapikeys_read",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "personalapikeys_delete",
                "description": "Personal API keys are used for authentication without password.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "prefix",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/personalapikeys/{prefix}/revoke/": {
            "post": {
                "operationId": "personalapikeys_revoke",
                "description": "Revoke an API key and return the status.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PersonalAPIKey"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "prefix",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulation-templates/{id}/copy-to-threedimodel/": {
            "post": {
                "operationId": "simulation-templates_copy_to_threedimodel",
                "summary": "Copy simulation template to a threedimodel.",
                "description": "{\n    \"threedimodel\": ThreediModel id\n    \"name\": name for the new template\n    \"tags\": extra tags, added to existing simulation template tags\n    \"clone_events\": clone events like rain/sources & sinks etc\n    \"clone_initials\": clone initial waterlevels & concentrations\n    \"clone_settings\": clone simulation settings, like physical settings etc\n}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    },
                    "400": {
                        "description": "validation errors"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/events/obstacle-edits/": {
            "get": {
                "operationId": "simulations_events_obstacle-edits_list",
                "description": "A simple ViewSet for viewing obstacle edits",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ObstacleEdit"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "simulations_events_obstacle-edits_create",
                "description": "Create an obstacle edit",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/events/obstacle-edits/{id}/": {
            "get": {
                "operationId": "simulations_events_obstacle-edits_read",
                "description": "A simple ViewSet for viewing obstacle edits",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "simulations_events_obstacle-edits_update",
                "description": "A simple ViewSet for viewing obstacle edits",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "simulations_events_obstacle-edits_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ObstacleEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "simulations_events_obstacle-edits_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this obstacle edit.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/events/obstacle-edits/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_obstacle-edits_processed",
                "description": "A simple ViewSet for viewing obstacle edits",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this obstacle edit.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/events/obstacle-edits/{id}/register_related_rasters/": {
            "get": {
                "operationId": "simulations_events_obstacle-edits_register_related_rasters",
                "summary": "Register all related rasters in the results-api and return\nread_bbox urls of the registered rasters",
                "description": "Skips registering of related rasters when the simulation is not in the\nstate 'starting' or 'initialized'. In this case the urls will be empty",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RasterEditUrls"
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this obstacle edit.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/1d_substance_concentrations/": {
            "get": {
                "operationId": "simulations_initial_1d_substance_concentrations_list",
                "description": "Initial 1D substance concentration",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OneDSubstanceConcentration"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "simulations_initial_1d_substance_concentrations_create",
                "description": "Start the simulation with a 1D (water quality) concentrations from a file. Applies the\ngiven values to the predefined nodes subset \"1D\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/1d_substance_concentrations/{id}/": {
            "get": {
                "operationId": "simulations_initial_1d_substance_concentrations_read",
                "description": "Initial 1D substance concentration",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "simulations_initial_1d_substance_concentrations_update",
                "description": "Initial 1D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_1d_substance_concentrations_partial_update",
                "description": "Initial 1D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_1d_substance_concentrations_delete",
                "description": "Initial 1D substance concentration",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this one d substance concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/2d_substance_concentrations/": {
            "get": {
                "operationId": "simulations_initial_2d_substance_concentrations_list",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TwoDSubstanceConcentration"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "simulations_initial_2d_substance_concentrations_create",
                "description": "Start the simulation with 2D (water quality) concentrations derived from the raster by\nusing the aggregation method. Applies the resulting levels\nto the predefined nodes subset \"2D_OPEN_WATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/2d_substance_concentrations/{id}/": {
            "get": {
                "operationId": "simulations_initial_2d_substance_concentrations_read",
                "description": "Initial 2D substance concentration",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "simulations_initial_2d_substance_concentrations_update",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_2d_substance_concentrations_partial_update",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_2d_substance_concentrations_delete",
                "description": "Initial 2D substance concentration",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this two d substance concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/groundwater_substance_concentrations/": {
            "get": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_list",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_create",
                "description": "Start the simulation with groundwater (water quality) concentrations derived\nfrom the raster by using the aggregation method. Applies the resulting levels\nto the predefined nodes subset \"2D_GROUND_WATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/initial/groundwater_substance_concentrations/{id}/": {
            "get": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_read",
                "description": "Initial 2D substance concentration",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_update",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_partial_update",
                "description": "Initial 2D substance concentration",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_groundwater_substance_concentrations_delete",
                "description": "Initial 2D substance concentration",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ground water substance concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/substances/": {
            "get": {
                "operationId": "simulations_substances_list",
                "description": "Water quality substances",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Substance"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "simulations_substances_create",
                "description": "Water quality substances",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/simulations/{simulation_pk}/substances/{id}/": {
            "get": {
                "operationId": "simulations_substances_read",
                "description": "Water quality substances",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "simulations_substances_update",
                "description": "Water quality substances",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "simulations_substances_partial_update",
                "description": "Water quality substances",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "simulations_substances_delete",
                "description": "Water quality substances",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this substance.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/status/": {
            "get": {
                "operationId": "status_list",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": []
        },
        "/v3-beta/status/current-version/": {
            "get": {
                "operationId": "status_current_version",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentVersion"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": []
        },
        "/v3-beta/threedimodels/{threedimodel_pk}/initial_concentrations/": {
            "get": {
                "operationId": "threedimodels_initial_concentrations_list",
                "description": "## Description\nInitial substance concentrations on threedimodels can be used in a simulation to\nspecify the initial substance concentration on the 1D and/or 2D domain.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InitialConcentration"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "post": {
                "operationId": "threedimodels_initial_concentrations_create",
                "summary": "Add new initial concentrations",
                "description": "### Adding (extra) 1D initial concentrations\nExtra 1D initial concentrations can be added by posting:\n\n{\"dimension\": \"one_d\"}\n\nUsing the 'id' value from the response, a JSON file needs to be uploaded via the\nPUT_URL retrieved from `initial_concentrations/{id}/upload/` in the following\nJSON format:\n\nPython code:\n\n    import json\n    file_contents = json.dumps({\n        \"node_ids\": [node_id_1, node_id2, ....],\n        \"values\" : [value_for_node_id_1, value_for_node_id_2, ...]\n    })\n\n    # Notes:\n    # - Omitted values are considered dry.\n    # - `node_ids` need to be sorted and unique\n    # - Make sure that the positions of the node_id's and values match.\n\n### Adding (extra) 2D initial substance concentrations\n2D initial concentrations can be added by uploading an\n'initial_concentration_file' Geotiff raster via `rasters/{id}/upload/`\n. This automatically triggers the creation of a 2D initial\nconcentration. The source raster is linked as 'source_raster'. The values in the\n `source_raster` are aggregated per node using max, min and mean operators. The\nresulting values are stored in a file linked under `file`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/threedimodels/{threedimodel_pk}/initial_concentrations/{id}/": {
            "get": {
                "operationId": "threedimodels_initial_concentrations_read",
                "description": "## Description\nInitial substance concentrations on threedimodels can be used in a simulation to\nspecify the initial substance concentration on the 1D and/or 2D domain.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "put": {
                "operationId": "threedimodels_initial_concentrations_update",
                "description": "## Description\nInitial substance concentrations on threedimodels can be used in a simulation to\nspecify the initial substance concentration on the 1D and/or 2D domain.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "patch": {
                "operationId": "threedimodels_initial_concentrations_partial_update",
                "description": "## Description\nInitial substance concentrations on threedimodels can be used in a simulation to\nspecify the initial substance concentration on the 1D and/or 2D domain.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialConcentration"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "delete": {
                "operationId": "threedimodels_initial_concentrations_delete",
                "description": "Delete initial substance concentration",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/threedimodels/{threedimodel_pk}/initial_concentrations/{id}/download/": {
            "get": {
                "operationId": "threedimodels_initial_concentrations_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/threedimodels/{threedimodel_pk}/initial_concentrations/{id}/processed/": {
            "put": {
                "operationId": "threedimodels_initial_concentrations_processed",
                "description": "## Description\nInitial substance concentrations on threedimodels can be used in a simulation to\nspecify the initial substance concentration on the 1D and/or 2D domain.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3-beta/threedimodels/{threedimodel_pk}/initial_concentrations/{id}/upload/": {
            "post": {
                "operationId": "threedimodels_initial_concentrations_upload",
                "description": "Endpoint for uploading an initial substance concentration file, see the POST\nendpoint for documentation about the file format.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3-beta"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial concentration.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/auth/profile/": {
            "get": {
                "operationId": "auth_profile_list",
                "description": "Read-only API endpoint for viewing user details for current user",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/auth/refresh-token/": {
            "post": {
                "operationId": "auth_refresh-token_create",
                "summary": "Refresh API authentication token by refresh_token.",
                "description": "Post \"refresh\" token as \"refresh\".\n\nThe return \"access\" token needs to be sent as HTTP authentication header\nwith every request with 'Bearer ' prefix (case-sensitive).",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Refresh"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/auth/token/": {
            "post": {
                "operationId": "auth_token_create",
                "summary": "Retrieve tokens for API authentication.",
                "description": "There are two ways for retrieving a tokens. The preferred way is attaching\na Personal API Key to the request and leave the request body empty. For\nbackwards compatibility, you can also supply your username and password\nin the request body directly.\n\nThe response will contain an \"access\" and \"refresh\" JWT token.\n\nThe \"access\" token needs to be sent as HTTP authentication header\nwith every request with a 'Bearer ' prefix (case-sensitive).\n\nNote that the \"access\" token expires after some time.\n\nThe \"refresh\" token can be used to get a new access token\nvia the \"refresh\" endpoint.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Authenticate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Tokens"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/auth/users/": {
            "get": {
                "operationId": "auth_users_list",
                "summary": "Read-only API endpoint for viewing user details.",
                "description": "- superusers and staff users might view all users\n- user with a manager role might view all users for the\n  organisations they have the manager role for\n- regular users might view their user details",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__iexact",
                        "in": "query",
                        "description": "username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__contains",
                        "in": "query",
                        "description": "username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__icontains",
                        "in": "query",
                        "description": "username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__in",
                        "in": "query",
                        "description": "username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__startswith",
                        "in": "query",
                        "description": "username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__istartswith",
                        "in": "query",
                        "description": "username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__endswith",
                        "in": "query",
                        "description": "username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__regex",
                        "in": "query",
                        "description": "username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__iexact",
                        "in": "query",
                        "description": "email__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__contains",
                        "in": "query",
                        "description": "email__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__icontains",
                        "in": "query",
                        "description": "email__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__in",
                        "in": "query",
                        "description": "email__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__startswith",
                        "in": "query",
                        "description": "email__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__istartswith",
                        "in": "query",
                        "description": "email__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__endswith",
                        "in": "query",
                        "description": "email__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__regex",
                        "in": "query",
                        "description": "email__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote__external_user_id",
                        "in": "query",
                        "description": "remote__external_user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/auth/users/{id}/": {
            "get": {
                "operationId": "auth_users_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/auth/users/{id}/tokens/": {
            "get": {
                "operationId": "auth_users_tokens",
                "description": "",
                "parameters": [
                    {
                        "name": "required_scopes",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1
                        },
                        "default": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserTokens"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/contracts/": {
            "get": {
                "operationId": "contracts_list",
                "summary": "Overview of organisations that have a valid 3Di contract.",
                "description": "List all organisations that already have used some fraction\nof their calculation quota (for the current year - the `hours_used`\nproperty is based on the current calender year)\n```\n?hours_used__gt=0\n```",
                "parameters": [
                    {
                        "name": "organisation__id",
                        "in": "query",
                        "description": "organisation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__gt",
                        "in": "query",
                        "description": "organisation__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__gte",
                        "in": "query",
                        "description": "organisation__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__lt",
                        "in": "query",
                        "description": "organisation__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__lte",
                        "in": "query",
                        "description": "organisation__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__isnull",
                        "in": "query",
                        "description": "organisation__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name",
                        "in": "query",
                        "description": "organisation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__iexact",
                        "in": "query",
                        "description": "organisation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__contains",
                        "in": "query",
                        "description": "organisation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__icontains",
                        "in": "query",
                        "description": "organisation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__in",
                        "in": "query",
                        "description": "organisation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__startswith",
                        "in": "query",
                        "description": "organisation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__istartswith",
                        "in": "query",
                        "description": "organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__endswith",
                        "in": "query",
                        "description": "organisation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__regex",
                        "in": "query",
                        "description": "organisation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id",
                        "in": "query",
                        "description": "organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__iexact",
                        "in": "query",
                        "description": "organisation__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__contains",
                        "in": "query",
                        "description": "organisation__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__icontains",
                        "in": "query",
                        "description": "organisation__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__in",
                        "in": "query",
                        "description": "organisation__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__startswith",
                        "in": "query",
                        "description": "organisation__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__istartswith",
                        "in": "query",
                        "description": "organisation__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__endswith",
                        "in": "query",
                        "description": "organisation__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__regex",
                        "in": "query",
                        "description": "organisation__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hours_used__gt",
                        "in": "query",
                        "description": "hours_used__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hours_used__lt",
                        "in": "query",
                        "description": "hours_used__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Contract"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "contracts_create",
                "description": "API endpoint for interacting with contracts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/contracts/{id}/": {
            "get": {
                "operationId": "contracts_read",
                "description": "API endpoint for interacting with contracts.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "contracts_update",
                "description": "API endpoint for interacting with contracts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "contracts_partial_update",
                "description": "API endpoint for interacting with contracts.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Contract"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "contracts_delete",
                "description": "API endpoint for interacting with contracts.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this contract.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/files/": {
            "get": {
                "operationId": "files_list",
                "description": "A simple ViewSet for viewing files",
                "parameters": [
                    {
                        "name": "filename",
                        "in": "query",
                        "description": "filename",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filename__icontains",
                        "in": "query",
                        "description": "filename__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "etag",
                        "in": "query",
                        "description": "etag",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date",
                        "in": "query",
                        "description": "expiry_date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date__lte",
                        "in": "query",
                        "description": "expiry_date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date__lt",
                        "in": "query",
                        "description": "expiry_date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date__gte",
                        "in": "query",
                        "description": "expiry_date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "expiry_date__gt",
                        "in": "query",
                        "description": "expiry_date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "state",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "created",
                            "uploaded",
                            "processed",
                            "error",
                            "removed"
                        ]
                    },
                    {
                        "name": "state__in",
                        "in": "query",
                        "description": "state__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "timeseries",
                            "rastertimeseries",
                            "savedstate",
                            "results",
                            "rasters",
                            "gridadmin",
                            "geopackage",
                            "geojson",
                            "initialwaterlevel",
                            "initial_substance_concentration",
                            "bulklateral",
                            "bulkcontrol",
                            "bulk_boundaryconditions",
                            "sqlite",
                            "tables"
                        ]
                    },
                    {
                        "name": "type__in",
                        "in": "query",
                        "description": "type__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "meta",
                        "in": "query",
                        "description": "meta",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/File"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/files/{id}/": {
            "get": {
                "operationId": "files_read",
                "description": "A simple ViewSet for viewing files",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "files_update",
                "description": "A simple ViewSet for viewing files",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "files_partial_update",
                "description": "A simple ViewSet for viewing files",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "files_delete",
                "description": "A simple ViewSet for viewing files",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/files/{id}/destroy_file/": {
            "delete": {
                "operationId": "files_destroy_file",
                "description": "A simple ViewSet for viewing files",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/File"
                        }
                    },
                    "405": {
                        "description": "types that are allowed to be destroyed: ['timeseries', 'rastertimeseries', 'savedstate', 'results', 'bulklateral', 'bulkcontrol']"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/files/{id}/download/": {
            "get": {
                "operationId": "files_download",
                "description": "A simple ViewSet for viewing files",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/files/{id}/processed/": {
            "put": {
                "operationId": "files_processed",
                "summary": "Endpoint to which the upload-processor can enrich file objects\n(and their related objects) with metadata.",
                "description": "For example the geotransform of raster files.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Upload is already processed"
                    },
                    "404": {
                        "description": "upload not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/inpy-versions/": {
            "get": {
                "operationId": "inpy-versions_list",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [
                    {
                        "name": "threedi_version",
                        "in": "query",
                        "description": "threedi_version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__iexact",
                        "in": "query",
                        "description": "threedi_version__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__contains",
                        "in": "query",
                        "description": "threedi_version__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__icontains",
                        "in": "query",
                        "description": "threedi_version__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__in",
                        "in": "query",
                        "description": "threedi_version__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__startswith",
                        "in": "query",
                        "description": "threedi_version__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__istartswith",
                        "in": "query",
                        "description": "threedi_version__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__endswith",
                        "in": "query",
                        "description": "threedi_version__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedi_version__regex",
                        "in": "query",
                        "description": "threedi_version__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version",
                        "in": "query",
                        "description": "threedicore_version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__iexact",
                        "in": "query",
                        "description": "threedicore_version__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__contains",
                        "in": "query",
                        "description": "threedicore_version__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__icontains",
                        "in": "query",
                        "description": "threedicore_version__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__in",
                        "in": "query",
                        "description": "threedicore_version__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__startswith",
                        "in": "query",
                        "description": "threedicore_version__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__istartswith",
                        "in": "query",
                        "description": "threedicore_version__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__endswith",
                        "in": "query",
                        "description": "threedicore_version__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedicore_version__regex",
                        "in": "query",
                        "description": "threedicore_version__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__iexact",
                        "in": "query",
                        "description": "slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__contains",
                        "in": "query",
                        "description": "slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__icontains",
                        "in": "query",
                        "description": "slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__in",
                        "in": "query",
                        "description": "slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__startswith",
                        "in": "query",
                        "description": "slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__istartswith",
                        "in": "query",
                        "description": "slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__endswith",
                        "in": "query",
                        "description": "slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__regex",
                        "in": "query",
                        "description": "slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InpyVersion"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "inpy-versions_create",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/inpy-versions/{id}/": {
            "get": {
                "operationId": "inpy-versions_read",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "inpy-versions_update",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "inpy-versions_partial_update",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InpyVersion"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "inpy-versions_delete",
                "description": "Inpy was the service for preparing user-supplied schematisations into 3Di\nmodels (threedimodels) usable by the 3Di calculation core.\n\nCurrently, this route is pending deprecation: most newly generated\n3Di models will carry an empty inpy_version.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this inpy version.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/organisation-settings/": {
            "get": {
                "operationId": "organisation-settings_list",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/settings"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "organisation-settings_create",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/organisation-settings/{id}/": {
            "get": {
                "operationId": "organisation-settings_read",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "organisation-settings_update",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "organisation-settings_partial_update",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/settings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "organisation-settings_delete",
                "description": "API endpoint for interacting with organisation settings.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this organisation settings.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/organisations/": {
            "get": {
                "operationId": "organisations_list",
                "description": "Read-only API endpoint for interacting with organisations.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id",
                        "in": "query",
                        "description": "unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__iexact",
                        "in": "query",
                        "description": "unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__contains",
                        "in": "query",
                        "description": "unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__icontains",
                        "in": "query",
                        "description": "unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__in",
                        "in": "query",
                        "description": "unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__startswith",
                        "in": "query",
                        "description": "unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__istartswith",
                        "in": "query",
                        "description": "unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__endswith",
                        "in": "query",
                        "description": "unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "unique_id__regex",
                        "in": "query",
                        "description": "unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "valid_contracts_only",
                        "in": "query",
                        "description": "valid_contracts_only",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "logged_in_user_has_role",
                        "in": "query",
                        "description": "logged_in_user_has_role",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "contract__scope__in",
                        "in": "query",
                        "description": "contract__scope__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Organisation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/organisations/{unique_id}/": {
            "get": {
                "operationId": "organisations_read",
                "description": "Read-only API endpoint for interacting with organisations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Organisation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "unique_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/organisations/{unique_id}/permissions/": {
            "get": {
                "operationId": "organisations_permissions",
                "description": "Read-only API endpoint for interacting with organisations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganisationRole"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "unique_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/organisations/{unique_id}/users/": {
            "get": {
                "operationId": "organisations_users_list",
                "description": "Endpoint for interacting with users in an organisation.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "query",
                        "description": "username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__iexact",
                        "in": "query",
                        "description": "username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__contains",
                        "in": "query",
                        "description": "username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__icontains",
                        "in": "query",
                        "description": "username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__in",
                        "in": "query",
                        "description": "username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__startswith",
                        "in": "query",
                        "description": "username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__istartswith",
                        "in": "query",
                        "description": "username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__endswith",
                        "in": "query",
                        "description": "username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__regex",
                        "in": "query",
                        "description": "username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "email",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__iexact",
                        "in": "query",
                        "description": "email__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__contains",
                        "in": "query",
                        "description": "email__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__icontains",
                        "in": "query",
                        "description": "email__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__in",
                        "in": "query",
                        "description": "email__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__startswith",
                        "in": "query",
                        "description": "email__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__istartswith",
                        "in": "query",
                        "description": "email__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__endswith",
                        "in": "query",
                        "description": "email__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email__regex",
                        "in": "query",
                        "description": "email__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "remote__external_user_id",
                        "in": "query",
                        "description": "remote__external_user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganisationUser"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "unique_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/organisations/{unique_id}/users/{id}/": {
            "get": {
                "operationId": "organisations_users_read",
                "description": "Endpoint for interacting with users in an organisation.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganisationUser"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "organisations_users_partial_update",
                "description": "Patch the roles of a user in this organisation.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganisationUserRolePatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganisationUser"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "unique_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/permissions/": {
            "get": {
                "operationId": "permissions_list",
                "description": "Permissions management endpoints.",
                "parameters": [
                    {
                        "name": "user__username",
                        "in": "query",
                        "description": "user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__iexact",
                        "in": "query",
                        "description": "user__username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__contains",
                        "in": "query",
                        "description": "user__username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__icontains",
                        "in": "query",
                        "description": "user__username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__in",
                        "in": "query",
                        "description": "user__username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__startswith",
                        "in": "query",
                        "description": "user__username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__istartswith",
                        "in": "query",
                        "description": "user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__endswith",
                        "in": "query",
                        "description": "user__username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__regex",
                        "in": "query",
                        "description": "user__username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name",
                        "in": "query",
                        "description": "role__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__iexact",
                        "in": "query",
                        "description": "role__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__contains",
                        "in": "query",
                        "description": "role__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__icontains",
                        "in": "query",
                        "description": "role__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__in",
                        "in": "query",
                        "description": "role__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__startswith",
                        "in": "query",
                        "description": "role__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__istartswith",
                        "in": "query",
                        "description": "role__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__endswith",
                        "in": "query",
                        "description": "role__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "role__name__regex",
                        "in": "query",
                        "description": "role__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name",
                        "in": "query",
                        "description": "organisation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__iexact",
                        "in": "query",
                        "description": "organisation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__contains",
                        "in": "query",
                        "description": "organisation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__icontains",
                        "in": "query",
                        "description": "organisation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__in",
                        "in": "query",
                        "description": "organisation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__startswith",
                        "in": "query",
                        "description": "organisation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__istartswith",
                        "in": "query",
                        "description": "organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__endswith",
                        "in": "query",
                        "description": "organisation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__regex",
                        "in": "query",
                        "description": "organisation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id",
                        "in": "query",
                        "description": "organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__id",
                        "in": "query",
                        "description": "user__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__remote__external_user_id",
                        "in": "query",
                        "description": "user__remote__external_user_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrganisationRole"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "permissions_create",
                "summary": "create a role for an existing user in an existing organisation",
                "description": "Example payload:\n\n    {\n      \"user\": \"chuck.norris\",  # user name\n      \"role\": \"simulation_runner\",  # role name\n      \"organisation\": \"48dac75bef8a42ebbb52e8f89bbdb9f2\"  # unique id\n    }",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OrganisationRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganisationRole"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/permissions/{id}/": {
            "get": {
                "operationId": "permissions_read",
                "description": "Permissions management endpoints.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OrganisationRole"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "permissions_delete",
                "description": "Permissions management endpoints.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user organisation role.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/repositories/": {
            "get": {
                "operationId": "repositories_list",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__iexact",
                        "in": "query",
                        "description": "slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__contains",
                        "in": "query",
                        "description": "slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__icontains",
                        "in": "query",
                        "description": "slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__in",
                        "in": "query",
                        "description": "slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__startswith",
                        "in": "query",
                        "description": "slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__istartswith",
                        "in": "query",
                        "description": "slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__endswith",
                        "in": "query",
                        "description": "slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__regex",
                        "in": "query",
                        "description": "slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id",
                        "in": "query",
                        "description": "organisation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__gt",
                        "in": "query",
                        "description": "organisation__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__gte",
                        "in": "query",
                        "description": "organisation__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__lt",
                        "in": "query",
                        "description": "organisation__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__lte",
                        "in": "query",
                        "description": "organisation__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__id__isnull",
                        "in": "query",
                        "description": "organisation__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name",
                        "in": "query",
                        "description": "organisation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__iexact",
                        "in": "query",
                        "description": "organisation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__contains",
                        "in": "query",
                        "description": "organisation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__icontains",
                        "in": "query",
                        "description": "organisation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__in",
                        "in": "query",
                        "description": "organisation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__startswith",
                        "in": "query",
                        "description": "organisation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__istartswith",
                        "in": "query",
                        "description": "organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__endswith",
                        "in": "query",
                        "description": "organisation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__name__regex",
                        "in": "query",
                        "description": "organisation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id",
                        "in": "query",
                        "description": "organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__iexact",
                        "in": "query",
                        "description": "organisation__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__contains",
                        "in": "query",
                        "description": "organisation__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__icontains",
                        "in": "query",
                        "description": "organisation__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__in",
                        "in": "query",
                        "description": "organisation__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__startswith",
                        "in": "query",
                        "description": "organisation__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__istartswith",
                        "in": "query",
                        "description": "organisation__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__endswith",
                        "in": "query",
                        "description": "organisation__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id__regex",
                        "in": "query",
                        "description": "organisation__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Repository"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "repositories_create",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/repositories/{id}/": {
            "get": {
                "operationId": "repositories_read",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "repositories_update",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "repositories_partial_update",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Repository"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "repositories_delete",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this repository.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/repositories/{id}/revisions/": {
            "get": {
                "operationId": "repositories_revisions",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Revision"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this repository.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/repositories/{id}/threedimodels/": {
            "get": {
                "operationId": "repositories_threedimodels",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThreediModel"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this repository.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/revisions/": {
            "get": {
                "operationId": "revisions_list",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number__gt",
                        "in": "query",
                        "description": "number__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number__gte",
                        "in": "query",
                        "description": "number__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number__lt",
                        "in": "query",
                        "description": "number__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number__lte",
                        "in": "query",
                        "description": "number__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "number__isnull",
                        "in": "query",
                        "description": "number__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash",
                        "in": "query",
                        "description": "hash",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__iexact",
                        "in": "query",
                        "description": "hash__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__contains",
                        "in": "query",
                        "description": "hash__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__icontains",
                        "in": "query",
                        "description": "hash__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__in",
                        "in": "query",
                        "description": "hash__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__startswith",
                        "in": "query",
                        "description": "hash__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__istartswith",
                        "in": "query",
                        "description": "hash__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__endswith",
                        "in": "query",
                        "description": "hash__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "hash__regex",
                        "in": "query",
                        "description": "hash__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id",
                        "in": "query",
                        "description": "repository__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id__gt",
                        "in": "query",
                        "description": "repository__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id__gte",
                        "in": "query",
                        "description": "repository__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id__lt",
                        "in": "query",
                        "description": "repository__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id__lte",
                        "in": "query",
                        "description": "repository__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__id__isnull",
                        "in": "query",
                        "description": "repository__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug",
                        "in": "query",
                        "description": "repository__slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__iexact",
                        "in": "query",
                        "description": "repository__slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__contains",
                        "in": "query",
                        "description": "repository__slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__icontains",
                        "in": "query",
                        "description": "repository__slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__in",
                        "in": "query",
                        "description": "repository__slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__startswith",
                        "in": "query",
                        "description": "repository__slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__istartswith",
                        "in": "query",
                        "description": "repository__slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__endswith",
                        "in": "query",
                        "description": "repository__slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__slug__regex",
                        "in": "query",
                        "description": "repository__slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name",
                        "in": "query",
                        "description": "repository__organisation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__iexact",
                        "in": "query",
                        "description": "repository__organisation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__contains",
                        "in": "query",
                        "description": "repository__organisation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__icontains",
                        "in": "query",
                        "description": "repository__organisation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__in",
                        "in": "query",
                        "description": "repository__organisation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__startswith",
                        "in": "query",
                        "description": "repository__organisation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__istartswith",
                        "in": "query",
                        "description": "repository__organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__endswith",
                        "in": "query",
                        "description": "repository__organisation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__name__regex",
                        "in": "query",
                        "description": "repository__organisation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id",
                        "in": "query",
                        "description": "repository__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__iexact",
                        "in": "query",
                        "description": "repository__organisation__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__contains",
                        "in": "query",
                        "description": "repository__organisation__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__icontains",
                        "in": "query",
                        "description": "repository__organisation__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__in",
                        "in": "query",
                        "description": "repository__organisation__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__startswith",
                        "in": "query",
                        "description": "repository__organisation__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__istartswith",
                        "in": "query",
                        "description": "repository__organisation__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__endswith",
                        "in": "query",
                        "description": "repository__organisation__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "repository__organisation__unique_id__regex",
                        "in": "query",
                        "description": "repository__organisation__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_pinned",
                        "in": "query",
                        "description": "is_pinned",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Revision"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "revisions_create",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/revisions/{id}/": {
            "get": {
                "operationId": "revisions_read",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "revisions_update",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "revisions_partial_update",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Revision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "revisions_delete",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/revisions/{id}/threedimodels/": {
            "get": {
                "operationId": "revisions_threedimodels",
                "description": "A simple ViewSet for viewing modelmeta",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThreediModel"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/roles/": {
            "get": {
                "operationId": "roles_list",
                "description": "Read-only API endpoint for viewing roles",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Role"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/roles/{id}/": {
            "get": {
                "operationId": "roles_read",
                "description": "Read-only API endpoint for viewing roles",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Role"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this role.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/schematisations/": {
            "get": {
                "operationId": "schematisations_list",
                "description": "Manage schematisations",
                "parameters": [
                    {
                        "name": "created__range",
                        "in": "query",
                        "description": "created__range",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week",
                        "in": "query",
                        "description": "created__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week_day",
                        "in": "query",
                        "description": "created__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__quarter",
                        "in": "query",
                        "description": "created__quarter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__time",
                        "in": "query",
                        "description": "created__time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__hour",
                        "in": "query",
                        "description": "created__hour",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__minute",
                        "in": "query",
                        "description": "created__minute",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__second",
                        "in": "query",
                        "description": "created__second",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__isnull",
                        "in": "query",
                        "description": "created__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__range",
                        "in": "query",
                        "description": "last_updated__range",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__date",
                        "in": "query",
                        "description": "last_updated__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__date__gt",
                        "in": "query",
                        "description": "last_updated__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__date__gte",
                        "in": "query",
                        "description": "last_updated__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__date__lt",
                        "in": "query",
                        "description": "last_updated__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__date__lte",
                        "in": "query",
                        "description": "last_updated__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__year",
                        "in": "query",
                        "description": "last_updated__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__year__gt",
                        "in": "query",
                        "description": "last_updated__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__year__gte",
                        "in": "query",
                        "description": "last_updated__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__year__lt",
                        "in": "query",
                        "description": "last_updated__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__year__lte",
                        "in": "query",
                        "description": "last_updated__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__month",
                        "in": "query",
                        "description": "last_updated__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__month__lte",
                        "in": "query",
                        "description": "last_updated__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__day",
                        "in": "query",
                        "description": "last_updated__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__day__lt",
                        "in": "query",
                        "description": "last_updated__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__week",
                        "in": "query",
                        "description": "last_updated__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__week_day",
                        "in": "query",
                        "description": "last_updated__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__quarter",
                        "in": "query",
                        "description": "last_updated__quarter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__time",
                        "in": "query",
                        "description": "last_updated__time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__hour",
                        "in": "query",
                        "description": "last_updated__hour",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__minute",
                        "in": "query",
                        "description": "last_updated__minute",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__second",
                        "in": "query",
                        "description": "last_updated__second",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_updated__isnull",
                        "in": "query",
                        "description": "last_updated__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username",
                        "in": "query",
                        "description": "created_by__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__iexact",
                        "in": "query",
                        "description": "created_by__username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__contains",
                        "in": "query",
                        "description": "created_by__username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__icontains",
                        "in": "query",
                        "description": "created_by__username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__in",
                        "in": "query",
                        "description": "created_by__username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__startswith",
                        "in": "query",
                        "description": "created_by__username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__istartswith",
                        "in": "query",
                        "description": "created_by__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__endswith",
                        "in": "query",
                        "description": "created_by__username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created_by__username__regex",
                        "in": "query",
                        "description": "created_by__username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__iexact",
                        "in": "query",
                        "description": "slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__contains",
                        "in": "query",
                        "description": "slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__icontains",
                        "in": "query",
                        "description": "slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__in",
                        "in": "query",
                        "description": "slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__startswith",
                        "in": "query",
                        "description": "slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__istartswith",
                        "in": "query",
                        "description": "slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__endswith",
                        "in": "query",
                        "description": "slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__regex",
                        "in": "query",
                        "description": "slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name",
                        "in": "query",
                        "description": "owner__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__iexact",
                        "in": "query",
                        "description": "owner__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__contains",
                        "in": "query",
                        "description": "owner__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__icontains",
                        "in": "query",
                        "description": "owner__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__in",
                        "in": "query",
                        "description": "owner__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__startswith",
                        "in": "query",
                        "description": "owner__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__istartswith",
                        "in": "query",
                        "description": "owner__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__endswith",
                        "in": "query",
                        "description": "owner__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__name__regex",
                        "in": "query",
                        "description": "owner__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id",
                        "in": "query",
                        "description": "owner__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__iexact",
                        "in": "query",
                        "description": "owner__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__contains",
                        "in": "query",
                        "description": "owner__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__icontains",
                        "in": "query",
                        "description": "owner__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__in",
                        "in": "query",
                        "description": "owner__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__startswith",
                        "in": "query",
                        "description": "owner__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__istartswith",
                        "in": "query",
                        "description": "owner__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__endswith",
                        "in": "query",
                        "description": "owner__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "owner__unique_id__regex",
                        "in": "query",
                        "description": "owner__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags__in",
                        "in": "query",
                        "description": "tags__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "archived",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Schematisation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "schematisations_create",
                "description": "Manage schematisations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/schematisations/{id}/": {
            "get": {
                "operationId": "schematisations_read",
                "description": "Manage schematisations",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "schematisations_update",
                "description": "Manage schematisations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "schematisations_partial_update",
                "description": "Manage schematisations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Schematisation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "schematisations_delete",
                "description": "Archive schematisation.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this schematisation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/schematisations/{id}/latest-revision/": {
            "get": {
                "operationId": "schematisations_latest_revision",
                "summary": "Get the latest committed revision.",
                "description": "For retrieving all revisions use: `/schematisations/{id}/revisions`",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SchematisationRevision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this schematisation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/": {
            "get": {
                "operationId": "schematisations_revisions_list",
                "description": "Manage revisions of schematisations.",
                "parameters": [
                    {
                        "name": "number",
                        "in": "query",
                        "description": "number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message",
                        "in": "query",
                        "description": "commit_message",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__iexact",
                        "in": "query",
                        "description": "commit_message__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__contains",
                        "in": "query",
                        "description": "commit_message__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__icontains",
                        "in": "query",
                        "description": "commit_message__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__in",
                        "in": "query",
                        "description": "commit_message__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__startswith",
                        "in": "query",
                        "description": "commit_message__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__istartswith",
                        "in": "query",
                        "description": "commit_message__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__endswith",
                        "in": "query",
                        "description": "commit_message__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_message__regex",
                        "in": "query",
                        "description": "commit_message__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__id",
                        "in": "query",
                        "description": "schematisation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug",
                        "in": "query",
                        "description": "schematisation__slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__iexact",
                        "in": "query",
                        "description": "schematisation__slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__contains",
                        "in": "query",
                        "description": "schematisation__slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__icontains",
                        "in": "query",
                        "description": "schematisation__slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__in",
                        "in": "query",
                        "description": "schematisation__slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__startswith",
                        "in": "query",
                        "description": "schematisation__slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__istartswith",
                        "in": "query",
                        "description": "schematisation__slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__endswith",
                        "in": "query",
                        "description": "schematisation__slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__slug__regex",
                        "in": "query",
                        "description": "schematisation__slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name",
                        "in": "query",
                        "description": "schematisation__owner__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__iexact",
                        "in": "query",
                        "description": "schematisation__owner__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__contains",
                        "in": "query",
                        "description": "schematisation__owner__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__icontains",
                        "in": "query",
                        "description": "schematisation__owner__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__in",
                        "in": "query",
                        "description": "schematisation__owner__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__startswith",
                        "in": "query",
                        "description": "schematisation__owner__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__istartswith",
                        "in": "query",
                        "description": "schematisation__owner__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__endswith",
                        "in": "query",
                        "description": "schematisation__owner__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__name__regex",
                        "in": "query",
                        "description": "schematisation__owner__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id",
                        "in": "query",
                        "description": "schematisation__owner__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__iexact",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__contains",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__icontains",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__in",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__startswith",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__istartswith",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__endswith",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "schematisation__owner__unique_id__regex",
                        "in": "query",
                        "description": "schematisation__owner__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username",
                        "in": "query",
                        "description": "commit_user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__iexact",
                        "in": "query",
                        "description": "commit_user__username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__contains",
                        "in": "query",
                        "description": "commit_user__username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__icontains",
                        "in": "query",
                        "description": "commit_user__username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__in",
                        "in": "query",
                        "description": "commit_user__username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__startswith",
                        "in": "query",
                        "description": "commit_user__username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__istartswith",
                        "in": "query",
                        "description": "commit_user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__endswith",
                        "in": "query",
                        "description": "commit_user__username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_user__username__regex",
                        "in": "query",
                        "description": "commit_user__username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date",
                        "in": "query",
                        "description": "commit_date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__gt",
                        "in": "query",
                        "description": "commit_date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__gte",
                        "in": "query",
                        "description": "commit_date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__lt",
                        "in": "query",
                        "description": "commit_date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__lte",
                        "in": "query",
                        "description": "commit_date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__date",
                        "in": "query",
                        "description": "commit_date__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__date__gt",
                        "in": "query",
                        "description": "commit_date__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__date__gte",
                        "in": "query",
                        "description": "commit_date__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__date__lt",
                        "in": "query",
                        "description": "commit_date__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__date__lte",
                        "in": "query",
                        "description": "commit_date__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__year",
                        "in": "query",
                        "description": "commit_date__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__year__gt",
                        "in": "query",
                        "description": "commit_date__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__year__gte",
                        "in": "query",
                        "description": "commit_date__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__year__lt",
                        "in": "query",
                        "description": "commit_date__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__year__lte",
                        "in": "query",
                        "description": "commit_date__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__month",
                        "in": "query",
                        "description": "commit_date__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__month__lte",
                        "in": "query",
                        "description": "commit_date__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__day",
                        "in": "query",
                        "description": "commit_date__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__day__lt",
                        "in": "query",
                        "description": "commit_date__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__week",
                        "in": "query",
                        "description": "commit_date__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "commit_date__week_day",
                        "in": "query",
                        "description": "commit_date__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "committed",
                        "in": "query",
                        "description": "committed",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "archived",
                        "in": "query",
                        "description": "archived",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_valid",
                        "in": "query",
                        "description": "is_valid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "has_threedimodel",
                        "in": "query",
                        "description": "has_threedimodel",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SchematisationRevision"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "schematisations_revisions_create",
                "summary": "Create a new revision",
                "description": "Creates a clone of the last committed revision (if present)\nby default except when empty=true is passed in the data.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateRevision"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SchematisationRevision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/": {
            "get": {
                "operationId": "schematisations_revisions_read",
                "description": "Manage revisions of schematisations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SchematisationRevision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "schematisations_revisions_partial_update",
                "description": "Manage revisions of schematisations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateRevision"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateRevision"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "schematisations_revisions_delete",
                "description": "Provide the revision id to delete the revision",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DestroyRevision"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/check/": {
            "post": {
                "operationId": "schematisations_revisions_check",
                "description": "Manage revisions of schematisations.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    },
                    "409": {
                        "description": "Conflict with other task already pending"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/commit/": {
            "post": {
                "operationId": "schematisations_revisions_commit",
                "summary": "Commit the revision",
                "description": "The `commit_message` can be used to describe the changes.\n\nThe `force_as` parameter allows to override the default behaviour\nof committing the revision with the already assigned revision number.\n\nIn case another user has already committed a revision with the same\nnumber, an HTTP 409 status code is returned.\n\nIn this case you can either:\n1) Save the revision with a higher revision number using\n   `force_as` = `new_revision`, effectively overwriting changes\n   from the other user.\n2) Save the revision under a new schematisation using\n   `force_as` = `new_schematisation` and specifying\n   a `schematisation_name`.\n\nIf you want to merge your changes with the changes from the\nother user, you need to download his/hers revision locally and merge\nit yourselves.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Commit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SchematisationRevision"
                        }
                    },
                    "409": {
                        "description": "Conflict with other revision already committed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/create-threedimodel/": {
            "post": {
                "operationId": "schematisations_revisions_create_threedimodel",
                "description": "Manage revisions of schematisations.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateThreedimodel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/sqlite/delete/": {
            "delete": {
                "operationId": "schematisations_revisions_sqlite_delete",
                "description": "Manage revisions of schematisations.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "sqlite not found"
                    },
                    "400": {
                        "description": "Not allowed after commit"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/sqlite/download/": {
            "get": {
                "operationId": "schematisations_revisions_sqlite_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/sqlite/upload/": {
            "post": {
                "operationId": "schematisations_revisions_sqlite_upload",
                "summary": "Endpoint for uploading the sqlite file.",
                "description": "The file should preferably be zipped (deflate).\n\nReplaces the present sqlite file if there already exists one.\n\nOptional md5sum can be added to detect if the file already\nhas been uploaded and perform de-duplication.\n(md5sum of the compressed sqlite file)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SqliteFileUpload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    },
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    },
                    "400": {
                        "description": "Any validation errors"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{id}/threedimodels/": {
            "get": {
                "operationId": "schematisations_revisions_threedimodels",
                "description": "Manage revisions of schematisations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThreediModel"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/rasters/": {
            "get": {
                "operationId": "schematisations_revisions_rasters_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RevisionRaster"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "schematisations_revisions_rasters_create",
                "summary": "Endpoint for creating a raster linked to a revision.",
                "description": "Every raster type can be created/uploaded only once.\n\nOptional md5sum can be added to detect if the file already\nhas been uploaded and automatically perform de-duplication.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RasterCreate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/rasters/{id}/": {
            "get": {
                "operationId": "schematisations_revisions_rasters_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "schematisations_revisions_rasters_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "schematisations_revisions_rasters_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "schematisations_revisions_rasters_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/rasters/{id}/download/": {
            "get": {
                "operationId": "schematisations_revisions_rasters_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/rasters/{id}/upload/": {
            "post": {
                "operationId": "schematisations_revisions_rasters_upload",
                "description": "Endpoint for uploading a raster.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/tasks/": {
            "get": {
                "operationId": "schematisations_revisions_tasks_list",
                "description": "View revision tasks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RevisionTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "schematisations_revisions_tasks_create",
                "description": "View revision tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/schematisations/{schematisation_pk}/revisions/{revision_pk}/tasks/{id}/": {
            "get": {
                "operationId": "schematisations_revisions_tasks_read",
                "description": "View revision tasks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "schematisations_revisions_tasks_update",
                "description": "View revision tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "schematisations_revisions_tasks_partial_update",
                "description": "View revision tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RevisionTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "schematisations_revisions_tasks_delete",
                "description": "View revision tasks",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this revision task.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "revision_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "schematisation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulation-templates/": {
            "get": {
                "operationId": "simulation-templates_list",
                "description": "",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "uuid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__iexact",
                        "in": "query",
                        "description": "uuid__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__contains",
                        "in": "query",
                        "description": "uuid__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__icontains",
                        "in": "query",
                        "description": "uuid__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__in",
                        "in": "query",
                        "description": "uuid__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__startswith",
                        "in": "query",
                        "description": "uuid__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__istartswith",
                        "in": "query",
                        "description": "uuid__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__endswith",
                        "in": "query",
                        "description": "uuid__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__regex",
                        "in": "query",
                        "description": "uuid__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id",
                        "in": "query",
                        "description": "simulation__threedimodel__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__range",
                        "in": "query",
                        "description": "simulation__threedimodel__id__range",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Template"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulation-templates_create",
                "summary": "Create a (optionally cloned) simulation template from the given simulation.",
                "description": "A simulation template is actually nothing more than a simulation with a special status.\nIt's immutable after creation and only can be used to create new simulations.\n\nSimulations 'upgraded' to simulations templates can't be directly run. The 'from_template' endpoint\nallows to create a new simulation from a template in a runnable state.\n\nA simulation template can be changed by first creating a simulation from it with 'from_template'.\nChanging that simulation and use this endpoint to 'upgrade' it to a simulation template.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    },
                    "400": {
                        "description": "validation errors"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/simulation-templates/{id}/": {
            "get": {
                "operationId": "simulation-templates_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Template"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulation-templates_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateTemplate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UpdateTemplate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulation-templates_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this template.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/simulations/": {
            "get": {
                "operationId": "simulations_list",
                "summary": "List all simulations resources.\nBy default the results are sorted from newest to oldest.",
                "description": "The reverse this order\n\n```\n    ?created\n```\nIn general it is possible to specify reverse orderings by prefixing\nthe field name with '-', like so:\n\n```\n    ?-id\n```\nOther fields that can be used to order the results are `name` and `id`.\n\nSeveral filter are available, for instance the creation date of\nthe resource. Some usage examples:\n\nTo get all simulation resources that have been created on\nGuido van Rossum's birthday\n\n```\n    ?created__date=1956-01-31\n```\n\nTo get all simulation resources that have been created during the\n1988 UEFA European Football Championship\n```\n   ?created__date__gte=1988-06-10&created__date__lte=1988-06-25\n```\n\nTo get all simulation resources that have been created in the month of\nthe Carnation Revolution\n```\n    ?created__year=1974&created__month=04\n```",
                "parameters": [
                    {
                        "name": "id__contains",
                        "in": "query",
                        "description": "id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid",
                        "in": "query",
                        "description": "uuid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__iexact",
                        "in": "query",
                        "description": "uuid__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__contains",
                        "in": "query",
                        "description": "uuid__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__icontains",
                        "in": "query",
                        "description": "uuid__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__in",
                        "in": "query",
                        "description": "uuid__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__startswith",
                        "in": "query",
                        "description": "uuid__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__istartswith",
                        "in": "query",
                        "description": "uuid__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__endswith",
                        "in": "query",
                        "description": "uuid__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "uuid__regex",
                        "in": "query",
                        "description": "uuid__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started_from",
                        "in": "query",
                        "description": "started_from",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "",
                            "3Di Live",
                            "3Di Modeller Interface"
                        ]
                    },
                    {
                        "name": "user__username",
                        "in": "query",
                        "description": "user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "user__username__istartswith",
                        "in": "query",
                        "description": "user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id",
                        "in": "query",
                        "description": "threedimodel__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__revision__id",
                        "in": "query",
                        "description": "threedimodel__revision__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "organisation__unique_id",
                        "in": "query",
                        "description": "organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "tags__in",
                        "in": "query",
                        "description": "tags__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_template",
                        "in": "query",
                        "description": "is_template",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Simulation"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_create",
                "summary": "Create a simulation resource",
                "description": "There are two options to specify the desired duration for the\nsimulation, either by using the ``end_datetime`` **or** the\n``duration`` parameter.\n\n```\n{\n  \"name\":           # give the simulation a name\n  \"tags\":           # add as many tags as you like: handy to find your simulation back later!\n  \"threedimodel\":   # The model schema to use for the simulation by\n                    referring to the id of the threedimodel resource\n  \"organisation\":   # uuid of the organisation for which the\n                    simulation is run\n  \"start_datetime\": # datetime (in ISO 8601 (UTC) format) for the\n                    simulation start, e.g. \"YYYY-MM-DDThh:mm:ss\"\n  \"end_datetime\":   # datetime (in ISO 8601 (UTC) format) for the\n                    simulation end, e.g. \"YYYY-MM-DDThh:mm:ss\"\n  \"duration\":       # in seconds, can be used instead of end_datetime\n}\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Simulation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Simulation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/simulations/from-template/": {
            "post": {
                "operationId": "simulations_from_template",
                "summary": "Create a (new/cloned) simulation from a simulation template.",
                "description": "There are two options to specify the desired duration for the\nnew simulation, either by using the ``end_datetime`` **or** the\n``duration`` parameter.\n\n{\n  \"template\":                  # source simulation template resource id\n  \"name\":                      # name for the new simulation.\n  \"tags\":                      # extra tags, added to existing simulation template tags.\n  \"organisation\":              # uuid of the organisation for which the\n                                 simulation is run\n  \"start_datetime\":            # datetime (in ISO 8601 (UTC) format) for the\n                                 simulation start, e.g. \"YYYY-MM-DDThh:mm:ss\"\n  \"end_datetime\":              # datetime (in ISO 8601 (UTC) format) for the\n                                 simulation end, e.g. \"YYYY-MM-DDThh:mm:ss\"\n  \"duration\":                  # in seconds, can be used instead of end_datetime\n  \"clone_events\":              # if true, clone events like rain/sources & sinks etc.\n  \"clone_initials\":            # if true, clone initial waterlevels\n  \"clone_settings\":            # if true, clone simulation settings, like physical settings etc.\n  \"threedimodel_id\":           # copy simulation template to threedimodel\n  \"started_from\":              # platform from which the simulation was started\n}",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FromTemplate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Simulation"
                        }
                    },
                    "400": {
                        "description": "validation errors"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/simulations/post_processing/lizard/queue/": {
            "get": {
                "operationId": "simulations_post_processing_lizard_queue_list",
                "description": "Read-only API endpoint for viewing simulations that need to be\npost-processed by Lizard (post-processing status is 'requested').",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostProcessingQueue"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/simulations/{id}/": {
            "get": {
                "operationId": "simulations_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Simulation"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationUpdate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationUpdate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_delete",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/simulations/{id}/clone/": {
            "post": {
                "operationId": "simulations_clone",
                "summary": "Clone the simulation.",
                "description": "Clones the simulation in a runnable state, only events & initials.",
                "parameters": [],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Simulation"
                        }
                    },
                    "400": {
                        "description": "validation errors"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/simulations/{id}/events/": {
            "get": {
                "operationId": "simulations_events",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Event"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/actions/": {
            "post": {
                "operationId": "simulations_actions_create",
                "summary": "Post an action to the simulation to start, pause or end it.",
                "description": "Example usage:\n\nTo initialize a simulation (and pause)\n```\n{\"name\": \"initialize\"}\n```\n\nTo initialize and directly run a simulation\n```\n{\"name\": \"start\"}\n```\nAlso use \"start\" to resume a paused simulation.\n\nIf you want to pause the simulation automatically after a given\nduration use the duration parameter\n```\n{\n  \"name\": \"start\",\n  \"duration\": 2500\n}\n```\n\nTo pause a simulation\n```\n{\"name\": \"pause\"}\n```\nPlease note: The simulation will automatically be shut down after the\ndefault timeout of 300 seconds has been reached. You can customize\nthis value by specifying the timeout parameter\n```\n{\n  \"name\": \"pause\",\n  \"timeout\": 999\n}\n```\n\nTo end a simulation\n```\n{\"name\": \"shutdown\"}\n```\n\nTo queue a simulation\n```\n{\"name\": \"queue\"}\n```\nQueued simulations will be started as soon as a session spot becomes\navailable. If a session spot is directly is available the simulation\nwill also be started immediately. The response body will then contain\n`{\"name\": \"start\"}`\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "202": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "429": {
                        "description": "No available/free sessions"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/actions/reset_pause_timeout/": {
            "post": {
                "operationId": "simulations_actions_reset_pause_timeout",
                "summary": "Reset the pause timeout with the new specified timeout value",
                "description": "You can only reset the pause timeout when the SimulationStatus.name is\n'initialized' and SimulationStatus.paused is True.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Timeout"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Action"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/stable-threshold/": {
            "get": {
                "operationId": "simulations_create-saved-states_stable-threshold_list",
                "description": "Stable threshold SavedState",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/StableThresholdSavedState"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_create-saved-states_stable-threshold_create",
                "summary": "Save the state of the simulation to file when a given (set of)\nvariable(s) becomes stable",
                "description": "Example\n```\n{\n  \"expiry\": \"2020-08-15T13:02:30.317Z\",\n  \"thresholds\": [\n    {\n      \"variable\": \"s1\",\n      \"value\": 0.005\n    }\n  ]\n}\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/stable-threshold/{id}/": {
            "get": {
                "operationId": "simulations_create-saved-states_stable-threshold_read",
                "description": "Stable threshold SavedState",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_create-saved-states_stable-threshold_update",
                "description": "Stable threshold SavedState",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_create-saved-states_stable-threshold_partial_update",
                "description": "When the simulation has started this resource can not be patched.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/StableThresholdSavedState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_create-saved-states_stable-threshold_delete",
                "description": "Stable threshold SavedState",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/stable-threshold/{id}/upload/": {
            "post": {
                "operationId": "simulations_create-saved-states_stable-threshold_upload",
                "description": "Stable threshold SavedState",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    },
                    "404": {
                        "description": "Simulation not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/timed/": {
            "get": {
                "operationId": "simulations_create-saved-states_timed_list",
                "description": "Timed SavedState",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimedSavedStateUpdate"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_create-saved-states_timed_create",
                "summary": "Save the state at a given time of the simulation to file",
                "description": "```\n    {\n      \"name\":   # custom name for the saved state (optional)\n      \"tags\":   # add tags to the resource. Either space or comma\n                separated (optional)\n      \"expiry\": # datetime (in ISO 8601 (UTC) format) until the saved\n                state file will be kept\n      \"time\":   # the state at this given time of the simulation will\n                 be saved to file\n    }\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/timed/{id}/": {
            "get": {
                "operationId": "simulations_create-saved-states_timed_read",
                "description": "Timed SavedState",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_create-saved-states_timed_update",
                "description": "Timed SavedState",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_create-saved-states_timed_partial_update",
                "description": "Timed SavedState",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedSavedStateUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_create-saved-states_timed_delete",
                "description": "Timed SavedState",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/create-saved-states/timed/{id}/upload/": {
            "post": {
                "operationId": "simulations_create-saved-states_timed_upload",
                "description": "Timed SavedState",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    },
                    "404": {
                        "description": "Simulation not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/boundaryconditions/file/": {
            "get": {
                "operationId": "simulations_events_boundaryconditions_file_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FileBoundaryCondition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_boundaryconditions_file_create",
                "summary": "Endpoint for uploading a boundary-conditions file.",
                "description": "The format of the filename should be <filename>.<extension>, e.g.\n\n`boundary_conditions_bergermeer.json`\n\nEvery leading and trailing spaces will be removed. Other spaces are\nconverted to underscores and anything that is not an alphanumeric, dash,\nunderscore, or dot will be removed as well.\n\nThe response provides a put_url which allows you to upload a file containing one\nor more boundary-conditions.\n\nThe uploaded file should be a JSON-file containing an array of\nboundary-conditions timeseries.\n\nThe file must contain a timeseries for each boundary condition in the\nthreedimodel. This is validated after upload.\n\nBoundary-conditions need to be added before initializing/starting\nthe simulation and cannot be changed once the simulation is\ninitialized.\n\nExample\n-------\n\n**Notes**\nThe ordering of the boundaries does not matter.\n\n```\n[\n    {\n        \"id\": 1,   # sqlite boundary_1d table id\n        \"type\": \"1D\",  # \"1D\" for 1d boundaries\n        \"interpolate\": false,\n        \"values\": [\n            [0, 0.5],\n            [500, 0,8],\n            [1000, 0]\n        ]\n    },\n    {\n        \"id\": 2,  # sqlite boundary_2d table id\n        \"type\": \"2D\", # \"2D\" for 2d boundaries\n        \"interpolate\": false,\n        \"values\": [\n            [0, 0,3],\n            [400, 0.1]\n        ]\n    },\n    {\n        \"id\": 3,\n        \"type\": \"2D\",\n        \"interpolate\": false,\n        \"values\": [\n            [0, -2.4],\n            [1300, 0,3],\n            [3000, 1.2],\n            [3600, 0]\n        ]\n    }\n]\n```\n\nExample with (water quality) substances. **Note**, the substance concentrations\ntimesteps need to exactly match the boundary values timesteps\n(0, 500, 1000 in example below).\n```\n[\n    {\n        \"id\": 1,   # sqlite boundary_1d table id\n        \"type\": \"1D\",  # \"1D\" for 1d boundaries\n        \"interpolate\": false,\n        \"values\": [\n            [0, 0.5],\n            [500, 0,8],\n            [1000, 0]\n        ]\n        \"substances\": [\n            {\n                \"substance\": 1,\n                \"interpolate\": false,\n                \"concentrations\": [\n                    [0, 0.1],\n                    [500, 0.2],\n                    [1000, 0]\n                ]\n            }\n        ]\n    }\n]\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/boundaryconditions/file/{id}/": {
            "get": {
                "operationId": "simulations_events_boundaryconditions_file_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileBoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_boundaryconditions_file_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileBoundaryCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileBoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_boundaryconditions_file_partial_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileBoundaryCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileBoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_boundaryconditions_file_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk boundary condition.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/boundaryconditions/file/{id}/download/": {
            "get": {
                "operationId": "simulations_events_boundaryconditions_file_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk boundary condition.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/boundaryconditions/file/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_boundaryconditions_file_processed",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk boundary condition.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/breaches/": {
            "get": {
                "operationId": "simulations_events_breaches_list",
                "description": "A simple ViewSet for viewing Breaches",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Breach"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_breaches_create",
                "description": "Create a breach during a given simulation. The `potential_breach`\nparameter refers to the id of a potential location associated with the\nthreedimodel. A list of these locations can be retrieved at the uri\n`/threedimodels/{id}/potentialbreaches/`\n\nThe `duration_till_max_depth` parameter describes the time it takes until\nthe deepest point of the breach is reached. [seconds]\n\n`maximum_breach_depth` specifies the maximum depth of the breach\nrelative to the top of the levee [meters]\n\n`initial_width` of the breach [meters]\n\n`discharge_coefficient_positive` and `discharge_coefficient_negative`\nare dimensionless parameters to deal with behaviour of energy loss\naround a breach.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/breaches/{id}/": {
            "get": {
                "operationId": "simulations_events_breaches_read",
                "description": "A simple ViewSet for viewing Breaches",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_breaches_update",
                "description": "A simple ViewSet for viewing Breaches",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_breaches_partial_update",
                "description": "Please note: **Breach resources are not allowed to be patched after the\nsimulation has started**",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Breach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_breaches_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this breach.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/constant/": {
            "get": {
                "operationId": "simulations_events_lateral_constant_list",
                "description": "A simple ViewSet for viewing ConstantLateral",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantLateral"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_lateral_constant_create",
                "description": "A simple ViewSet for viewing ConstantLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_lateral_constant_read",
                "description": "A simple ViewSet for viewing ConstantLateral",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_lateral_constant_update",
                "description": "A simple ViewSet for viewing ConstantLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_lateral_constant_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_lateral_constant_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/constant/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_lateral_constant_processed",
                "description": "A simple ViewSet for viewing ConstantLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Event is already processed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/file/": {
            "get": {
                "operationId": "simulations_events_lateral_file_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FileLateral"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_lateral_file_create",
                "summary": "Endpoint for uploading a file with one or more laterals.",
                "description": "The format of the filename should be <filename>.<extension>, e.g.\n\n`laterals_bergermeer.json`\n\nEvery leading and trailing spaces will be removed. Other spaces are\nconverted to underscores and anything that is not an alphanumeric, dash,\nunderscore, or dot will be removed as well.\n\nThe response provides a put_url which allows you to upload a file containing one\nor more laterals. These laterals should either be a constant- or a\ntimeseries-lateral, or a combination of both. See their respective endpoint for\nthe required fields of these laterals.\n\nThe uploaded file should be a JSON-file containing an array of laterals. Example\nof the content of such a file:\n```\n[\n  {\n    \"offset\": 100,\n    \"value\": 0.05,\n    \"duration\": 300,\n    \"units\": \"m3/s\",\n    \"connection_node\": 5\n  },\n  {\n    \"offset\": 180,\n    \"interpolate\": false,\n    \"values\": [\n      [0.0, 0.0002],\n      [900.0, 0.0],\n      [1200.0, 0.0001],\n      [1620.0, 0.0]\n    ],\n    \"units\": \"m3/s\",\n    \"connection_node\": 4\n  },\n  {\n    \"offset\": 0,\n    \"value\": 0.03,\n    \"duration\": 500,\n    \"units\": \"m3/s\",\n    \"point\": {\n      \"type\": \"Point\",\n      \"coordinates\": [4.70184629, 52.62586862]   #  longitude, latitude\n    }\n  }\n]\n```\n\nThe `offset` of this file-lateral-event will be applied to each individual\nlateral offset in the uploaded file\n\nIf the `periodic` field is set to `daily` the values given are used for every hour of\nevery day in the simulation. Exactly 25 (0-24) timeseries per entry are required like such:\n      \"values\": [\n        [0.0, 0.0002],\n        [3600, 0.01],\n        .....\n        <SNIP>\n        .....\n        [82800, 0.15]  # 3600.0 * 23\n        [86400, 0.0]   # 3600.0 * 24\n      ]\n\nOnly laterals with 'values' are allowed in this case.\n\nThe **hour** (not minutes or seconds) of the simulation `start_datetime` (UTC) is taken into consideration for the first timeseries value to use.\nPeriodic laterals are intended for dry weather flow.\n\nExample with (water quality) substances. **Note**: the substance concentrations\ntimesteps need to exactly match the lateral values timesteps\n(0, 300 in example below).\n```\n[\n  {\n    \"offset\": 100,\n    \"values\": [[0, 0.05], [300, 0]],\n    \"units\": \"m3/s\",\n    \"connection_node\": 5,\n    \"substances\": [\n        {\"substance\": 1, \"concentrations\": [[0, 0.1], [300, 0]]}\n    ]\n  }\n]\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadEventFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadEventFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/file/{id}/": {
            "get": {
                "operationId": "simulations_events_lateral_file_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_lateral_file_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_lateral_file_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_lateral_file_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/file/{id}/download/": {
            "get": {
                "operationId": "simulations_events_lateral_file_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/file/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_lateral_file_processed",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/timeseries/": {
            "get": {
                "operationId": "simulations_events_lateral_timeseries_list",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesLateral"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_lateral_timeseries_create",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_lateral_timeseries_read",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_lateral_timeseries_update",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_lateral_timeseries_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLateral"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_lateral_timeseries_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/lateral/timeseries/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_lateral_timeseries_processed",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Event is already processed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lateral.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/constant/": {
            "get": {
                "operationId": "simulations_events_leakage_constant_list",
                "description": "A simple ViewSet for viewing ConstantLeakage",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantLeakage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_leakage_constant_create",
                "description": "A simple ViewSet for viewing ConstantLeakage",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_leakage_constant_read",
                "description": "A simple ViewSet for viewing ConstantLeakage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_leakage_constant_update",
                "description": "A simple ViewSet for viewing ConstantLeakage",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_leakage_constant_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLeakage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_leakage_constant_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries leakage.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/rasters/netcdf/": {
            "get": {
                "operationId": "simulations_events_leakage_rasters_netcdf_list",
                "description": "NetCDF 4 raster leakage",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFRasterLeakage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_leakage_rasters_netcdf_create",
                "description": "NetCDF 4 raster leakage",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/rasters/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_leakage_rasters_netcdf_read",
                "description": "NetCDF 4 raster leakage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_leakage_rasters_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file raster leakage.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/timeseries/": {
            "get": {
                "operationId": "simulations_events_leakage_timeseries_list",
                "description": "A simple ViewSet for viewing TimeseriesLeakage",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesLeakage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_leakage_timeseries_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/timeseries/netcdf/": {
            "get": {
                "operationId": "simulations_events_leakage_timeseries_netcdf_list",
                "description": "NetCDF 4 timeseries leakage",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFTimeseriesLeakage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_leakage_timeseries_netcdf_create",
                "description": "NetCDF 4 timeseries leakage",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/timeseries/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_leakage_timeseries_netcdf_read",
                "description": "NetCDF 4 timeseries leakage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_leakage_timeseries_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file timeseries leakage.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/leakage/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_leakage_timeseries_read",
                "description": "A simple ViewSet for viewing TimeseriesLeakage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_leakage_timeseries_update",
                "description": "A simple ViewSet for viewing TimeseriesLeakage",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_leakage_timeseries_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLeakage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_leakage_timeseries_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries leakage.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/constant/": {
            "get": {
                "operationId": "simulations_events_rain_constant_list",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_constant_create",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_constant_read",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_constant_update",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_constant_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_constant_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/local/constant/": {
            "get": {
                "operationId": "simulations_events_rain_local_constant_list",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantLocalRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_local_constant_create",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/local/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_local_constant_read",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_local_constant_update",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_local_constant_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantLocalRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_local_constant_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this local rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/local/timeseries/": {
            "get": {
                "operationId": "simulations_events_rain_local_timeseries_list",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesLocalRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_local_timeseries_create",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/local/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_local_timeseries_read",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_local_timeseries_update",
                "description": "A simple ViewSet for viewing TimeseriesLateral",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_local_timeseries_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesLocalRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_local_timeseries_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this local rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/rasters/lizard/": {
            "get": {
                "operationId": "simulations_events_rain_rasters_lizard_list",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LizardRasterRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_rasters_lizard_create",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/rasters/lizard/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_rasters_lizard_read",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_rasters_lizard_update",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_rasters_lizard_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_rasters_lizard_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lizard raster rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/rasters/netcdf/": {
            "get": {
                "operationId": "simulations_events_rain_rasters_netcdf_list",
                "description": "NetCDF 4 raster rain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFRasterRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_rasters_netcdf_create",
                "description": "NetCDF 4 raster rain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/rasters/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_rasters_netcdf_read",
                "description": "NetCDF 4 raster rain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_rasters_netcdf_update",
                "description": "NetCDF 4 raster rain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_rasters_netcdf_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_rasters_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file raster rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_list",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_timeseries_create",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/lizard/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_lizard_list",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LizardTimeseriesRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_timeseries_lizard_create",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/lizard/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_lizard_read",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_timeseries_lizard_update",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_timeseries_lizard_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_timeseries_lizard_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lizard timeseries rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/netcdf/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_netcdf_list",
                "description": "NetCDF 4 timeseries rain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFTimeseriesRain"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_rain_timeseries_netcdf_create",
                "description": "NetCDF 4 timeseries rain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_netcdf_read",
                "description": "NetCDF 4 timeseries rain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_timeseries_netcdf_update",
                "description": "NetCDF 4 timeseries rain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_timeseries_netcdf_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_timeseries_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file timeseries rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/rain/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_rain_timeseries_read",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_rain_timeseries_update",
                "description": "A simple ViewSet for viewing TimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_rain_timeseries_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesRain"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_rain_timeseries_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries rain.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/raster-edits/": {
            "get": {
                "operationId": "simulations_events_raster-edits_list",
                "description": "A simple ViewSet for viewing raster edits",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/RasterEdit"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_raster-edits_create",
                "description": "A simple ViewSet for viewing raster edits",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/raster-edits/{id}/": {
            "get": {
                "operationId": "simulations_events_raster-edits_read",
                "description": "A simple ViewSet for viewing raster edits",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_raster-edits_update",
                "description": "A simple ViewSet for viewing raster edits",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_raster-edits_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RasterEdit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_raster-edits_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this raster edit.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/raster-edits/{id}/register_related_rasters/": {
            "get": {
                "operationId": "simulations_events_raster-edits_register_related_rasters",
                "summary": "Register all related rasters in the results-api and return\nread_bbox urls of the registered rasters",
                "description": "Skips registering of related rasters when the simulation is not in the\nstate 'starting' or 'initialized'. In this case the urls will be empty",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RasterEditUrls"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this raster edit.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/constant/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_constant_list",
                "description": "A simple ViewSet for viewing ConstantSourcesSinks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_constant_create",
                "description": "A simple ViewSet for viewing ConstantSourcesSinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_constant_read",
                "description": "A simple ViewSet for viewing ConstantSourcesSinks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_sources-sinks_constant_update",
                "description": "A simple ViewSet for viewing ConstantSourcesSinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_sources-sinks_constant_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_constant_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/rasters/lizard/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_list",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LizardRasterSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_create",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/rasters/lizard/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_read",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_update",
                "description": "A simple ViewSet for viewing lizardRasterRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardRasterSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_rasters_lizard_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lizard raster sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/rasters/netcdf/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_list",
                "description": "NetCDF 4 raster sources & sinks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFRasterSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_create",
                "description": "NetCDF 4 raster sources & sinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/rasters/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_read",
                "description": "NetCDF 4 raster sources & sinks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_update",
                "description": "NetCDF 4 raster sources & sinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NetCDFRasterSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_rasters_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file raster sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_list",
                "description": "A simple ViewSet for viewing TimeseriesSourcesSinks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_timeseries_create",
                "description": "Example payload:\n```\n    {\n      \"offset\": 0,\n      \"values\": [\n        [\n          0,\n          0.0005\n        ],\n        [\n          300,\n          0.0002\n        ]\n      ],\n      \"units\": \"m/s\"\n    }\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/lizard/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_list",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_create",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/lizard/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_read",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_update",
                "description": "A simple ViewSet for viewing LizardTimeseriesRain",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_timeseries_lizard_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this lizard timeseries sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/netcdf/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_netcdf_list",
                "description": "NetCDF 4 timeseries sources & sinks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/NetCDFTimeseriesSourcesSinks"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_sources-sinks_timeseries_netcdf_create",
                "description": "NetCDF 4 timeseries sources & sinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadWithSubstances"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/netcdf/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_netcdf_read",
                "description": "NetCDF 4 timeseries sources & sinks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/NetCDFTimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_timeseries_netcdf_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this file timeseries sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/sources-sinks/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_sources-sinks_timeseries_read",
                "description": "A simple ViewSet for viewing TimeseriesSourcesSinks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_sources-sinks_timeseries_update",
                "description": "A simple ViewSet for viewing TimeseriesSourcesSinks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_sources-sinks_timeseries_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesSourcesSinks"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_sources-sinks_timeseries_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timeseries sources sinks.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/file/": {
            "get": {
                "operationId": "simulations_events_structure-control_file_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/FileStructureControl"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_structure-control_file_create",
                "summary": "Endpoint for uploading a file with one or more structure controls.",
                "description": "The supplied filename should be include the extension, for example \"bergermeer_controls.json\".\n\n`bergermeer_controls.json`\n\nThe response provides a put_url which may be used to upload a file containing one\nor more controls. These controls are divided in memory, table and timed\nstructure controls. See the respective endpoints for\nthe required fields of these controls.\n\nThe uploaded file should be a JSON-file containing an array of controls per control type. Example\nof the content of such a file:\n```\n{\n    \"timed\": [\n        {\n            \"offset\": 0,\n            \"duration\": 100,\n            \"value\": [\n                0.4, 0.8\n            ],\n            \"type\": \"set_discharge_coefficients\",\n            \"structure_id\": 21,\n            \"structure_type\": \"v2_weir\"\n        }\n    ],\n    \"memory\": [\n        {\n            \"offset\": 0,\n            \"duration\": 3600,\n            \"measure_specification\": {\n                \"name\": \"Measurement location\",\n                \"locations\": [\n                    {\n                        \"weight\": \"1.00\",\n                        \"content_type\": \"v2_connection_node\",\n                        \"content_pk\": 356,\n                    }\n                ],\n                \"variable\": \"s1\",\n                \"operator\": \"<\"\n            },\n            \"structure_id\": 10250,\n            \"structure_type\": \"v2_weir\",\n            \"type\": \"set_crest_level\",\n            \"value\": [\n                9.05\n            ],\n            \"upper_threshold\": 0.3,\n            \"lower_threshold\": 0.1,\n            \"is_active\": false,\n            \"is_inverse\": false\n        }\n    ],\n    \"table\": [\n        {\n            \"offset\": 0,\n            \"duration\": 3600,\n            \"measure_specification\": {\n                \"name\": \"Measurement location\",\n                \"locations\": [\n                    {\n                        \"weight\": \"1.00\",\n                        \"content_type\": \"v2_connection_node\",\n                        \"content_pk\": 356,\n                    }\n                ],\n                \"variable\": \"s1\",\n                \"operator\": \"<\"\n            },\n            \"structure_id\": 10249,\n            \"structure_type\": \"v2_weir\",\n            \"type\": \"set_crest_level\",\n            \"values\": [\n                [\n                    9.05,\n                    -1.45\n                ],\n            ]\n        }\n    ]\n}\n```\n\nIf there are only controls of one category, the other arrays can be omitted, like for example:\n```\n{\n    \"timed\": [\n        {\n            \"offset\": 0,\n            \"duration\": 100,\n            \"value\": [\n                0.4, 0.8\n            ],\n            \"type\": \"set_discharge_coefficients\",\n            \"structure_id\": 21,\n            \"structure_type\": \"v2_weir\"\n        }\n    ]\n}\n```\n\nThe `offset` supplied in the request body will be applied on top of each individual\nstructure control offset in the uploaded file.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UploadEventFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UploadEventFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/file/{id}/": {
            "get": {
                "operationId": "simulations_events_structure-control_file_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_structure-control_file_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/FileStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_structure-control_file_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FileStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_structure-control_file_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/file/{id}/download/": {
            "get": {
                "operationId": "simulations_events_structure-control_file_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/file/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_structure-control_file_processed",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this bulk control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/memory/": {
            "get": {
                "operationId": "simulations_events_structure-control_memory_list",
                "description": "ViewSet for viewing MemoryStructureControls",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/MemoryStructureControl"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_structure-control_memory_create",
                "description": "See tables structure endpoint for more information.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/memory/{id}/": {
            "get": {
                "operationId": "simulations_events_structure-control_memory_read",
                "description": "ViewSet for viewing MemoryStructureControls",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_structure-control_memory_update",
                "description": "ViewSet for viewing MemoryStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_structure-control_memory_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MemoryStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_structure-control_memory_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this memory structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/memory/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_structure-control_memory_processed",
                "description": "ViewSet for viewing MemoryStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeasureLocationGridEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Event is already processed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this memory structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/table/": {
            "get": {
                "operationId": "simulations_events_structure-control_table_list",
                "description": "ViewSet for viewing TableStructureControls",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TableStructureControl"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_structure-control_table_create",
                "description": "A table structure control can used to apply a certain action, e.g\nincrease the pump capacity of a pump station, based on the measured\nvalues of one or more locations.\n\n**type**\n\n*for weirs and orifices*\n\n- set_crest_level\n- set_discharge_coefficients\n\n*for culverts, channels and pipes*\n\n- set_discharge_coefficients\n\n*for pumps*\n\n- set_pump_capacity (m3/s)\n\n**values**\n\nThe action table consists of one or more value pairs (threshold, action_value)\n\nTo close/open or partially close/open a structure using the `set_discharge_coefficients` type\nthe values must contain **three** values. For example `[[1.2, 0.5, 0.7]]`,  where\n    1.2 is the threshold value\n    0.5 the action value for the left flow direction\n    0.7 action value for the right flow direction\n\nPlease note: action values for `set_discharge_coefficients` type must be > 0.\n\nFor ALL operators threshold values must be ascending,\n\nIn most cases the measure location will be of type `v2_connection_node`.\nFor this location type only the variables `s1` and `vol1` apply. If your\nmeasure location, however, is of any other type the variable must either\nbe `q` or `u1`.\n\nNote that the `v2_` prefixes are no longer used in the schematisations,\nbut are required in the API.\n\nFor both the target structure as well as for the measure location it is\nallowed to use a grid id as input directly. In this case we will check\nif the structure type associated with the given id matches with the grid\nadministration data.\n\nNonetheless, we encourage you to use the structure id (that is the id of the\nstructure in the model sqlite database) as input data. We will look up the\ncorresponding grid id for you. If the validation holds, the state of the\nresource will be updated from `processing` to `valid`. Using the structure id\nwill enable you to re-use the structure control resource after a model revision\nas a grid id will most likely change with every new grid generation.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/table/{id}/": {
            "get": {
                "operationId": "simulations_events_structure-control_table_read",
                "description": "ViewSet for viewing TableStructureControls",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_structure-control_table_update",
                "description": "ViewSet for viewing TableStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_structure-control_table_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TableStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_structure-control_table_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this table structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/table/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_structure-control_table_processed",
                "description": "ViewSet for viewing TableStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/MeasureLocationGridEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Event is already processed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this table structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/timed/": {
            "get": {
                "operationId": "simulations_events_structure-control_timed_list",
                "description": "A simple ViewSet for viewing TimedStructureControls",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimedStructureControl"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_structure-control_timed_create",
                "description": "A timed structure control allows for actively altering parameters of\nstructures at a given point in time of the simulation for a given\nperiod of time.\nThe ``type`` parameter specifies which action should be applied to\nthe structure. Not all valid action types can be applied to every\nstructure. An overview of valid combinations:\n\n   set_discharge_coefficients: v2_orifice, v2_weir, v2_pipe,\n                               v2_channel, v2_culvert\n   set_crest_level: v2_orifice, v2_weir\n   set_pump_capacity: v2_pumpstation\n\nThe value parameter must contain 1 value, except for the\n``set_discharge_coefficients``action that expects a value for\nboth flow directions.\n\nExample payload:\n\n```\n    {\n      \"offset\": 0,\n      \"duration\": 100,\n      \"value\": [\n        0.4, 0.8\n      ],\n      \"type\": \"set_discharge_coefficients\",\n      \"structure_id\": 21,\n      \"structure_type\": \"v2_weir\"\n    }\n```\n\n**v2_channel and v2_pipe are for internal use only. They expect a\ngrid_id instead of a structure_id!**",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/timed/{id}/": {
            "get": {
                "operationId": "simulations_events_structure-control_timed_read",
                "description": "A simple ViewSet for viewing TimedStructureControls",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_structure-control_timed_update",
                "description": "A simple ViewSet for viewing TimedStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_structure-control_timed_partial_update",
                "description": "when the simulation has started only the duration parameter might\nbe patched",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimedStructureControl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully patched the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_structure-control_timed_delete",
                "description": "destroy resource only if the event has not yet been applied to\nthe associated simulation",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Successfully deleted the resource"
                    },
                    "409": {
                        "description": "Conflict with the current simulation status"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timed structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/structure-control/timed/{id}/processed/": {
            "put": {
                "operationId": "simulations_events_structure-control_timed_processed",
                "description": "A simple ViewSet for viewing TimedStructureControls",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GridEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Event is already processed"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this timed structure control.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/wind/constant/": {
            "get": {
                "operationId": "simulations_events_wind_constant_list",
                "description": "A simple ViewSet for viewing Wind.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ConstantWind"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_wind_constant_create",
                "description": "A constant wind event allows for wind forcing at a given point in\ntime of the simulation for a given period of time.\nNo distinction is made (yet) between the 1D and 2D model domain.\n\nThe ``units`` parameter is the wind speed unit ('m/s' or 'km/h').\n\nThe ``direction_value`` parameter is the wind direction in\ndegrees (0-360) from the north - meteorological standard.\nThus, a direction_value of 180 represents a south wind (which\ncomes from the south and blows your hat towards the north.\n\nThe ``speed_value`` parameter as well as the ``direction_value``\nmust contain 1 value. Behind the the scenes these are converted\ninto nested array [time, speed_value, direction_value].\nThis means that this payload (example):\n\n```\n{\n    \"offset\": 100,\n    \"duration\": 400,\n    \"units\": \"m/s\",\n    \"speed_value\": 80,\n    \"direction_value\": 220\n}\n```\n\nbecomes an Timeseries object with values:\n\n```\n{\n    \"values\": [\n        [ 0, 80, 220],    # time, speed, direction\n        [ 400, 0, 0]      # time, speed, direction\n    ],\n}\n```\n\nNote that the (dimensionless) ``drag-coefficient`` is not part\nof a simulation event, but part of simulation initial condition.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/wind/constant/{id}/": {
            "get": {
                "operationId": "simulations_events_wind_constant_read",
                "description": "A simple ViewSet for viewing Wind.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_wind_constant_update",
                "description": "A simple ViewSet for viewing Wind.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_wind_constant_partial_update",
                "description": "A simple ViewSet for viewing Wind.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ConstantWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_wind_constant_delete",
                "description": "A simple ViewSet for viewing Wind.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this wind.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/wind/timeseries/": {
            "get": {
                "operationId": "simulations_events_wind_timeseries_list",
                "description": "A simple ViewSet for viewig Wind.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TimeseriesWind"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_events_wind_timeseries_create",
                "description": "Same as constant wind event but now without separate fields\nfor ``speed_value`` and ``direction_value``.\nInstead - to avoid time-mapping issues - the field ``values``\nholds the speed and direction values:\n```\n[\n    [time, speed1, direction1],\n    [time, speed2, direction2],\n]\n```\n\nexample payload:\n```\n{\n    \"offset\": 2,\n    \"values\": [\n        [0, 40, 180],\n        [60, 35, 181]\n    ],\n    \"units\": \"m/s\",\n}\n```\n\nbecomes an Timeseries object with values:\n```\n{\n    \"values\": [\n        [ 0, 40, 180 ],\n        [60, 35, 181 ]\n    ]\n}\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/events/wind/timeseries/{id}/": {
            "get": {
                "operationId": "simulations_events_wind_timeseries_read",
                "description": "A simple ViewSet for viewig Wind.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_events_wind_timeseries_update",
                "description": "A simple ViewSet for viewig Wind.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_events_wind_timeseries_partial_update",
                "description": "A simple ViewSet for viewig Wind.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TimeseriesWind"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_events_wind_timeseries_delete",
                "description": "A simple ViewSet for viewig Wind.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this wind.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/constant/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_constant_list",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OneDWaterLevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_1d_water_level_constant_create",
                "description": "Start the simulation with a global 1D water level",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/constant/{id}/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_constant_read",
                "description": "Initial 1D water levels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_1d_water_level_constant_update",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_1d_water_level_constant_partial_update",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_1d_water_level_constant_delete",
                "description": "Initial 1D water levels",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this one d water level.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/file/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_file_list",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OneDWaterLevelFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_1d_water_level_file_create",
                "description": "Start the simulation with a 1D water levels from a file. Applies the\ngiven values to the predefined nodes subset \"1D\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/file/{id}/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_file_read",
                "description": "Initial 1D water levels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_1d_water_level_file_update",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_1d_water_level_file_partial_update",
                "description": "Initial 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_1d_water_level_file_delete",
                "description": "Initial 1D water levels",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this one d water level file.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/predefined/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_predefined_list",
                "description": "initial predefined 1D water levels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OneDWaterLevelPredefined"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_1d_water_level_predefined_create",
                "summary": "This endpoint is pending deprecation.",
                "description": "For threedimodels that came from a repository on models.lizard.net:\nStart the simulation with predefined 1D water levels. That is,\nuse the initial water levels that have been specified in the\n``connection_nodes`` schema.\n\nFor threedimodels that came from a schematisation in this API, there\nmight be a threedimodels/{}/initial_waterlevels 1D resource. If such\na resource exists, there will also be a /file initial condition\ncreated. The /predefined resource will still be created but is\nignored by the simulation.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/1d_water_level/predefined/{id}/": {
            "get": {
                "operationId": "simulations_initial_1d_water_level_predefined_read",
                "description": "initial predefined 1D water levels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_1d_water_level_predefined_update",
                "description": "initial predefined 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_1d_water_level_predefined_partial_update",
                "description": "initial predefined 1D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/OneDWaterLevelPredefined"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_1d_water_level_predefined_delete",
                "description": "initial predefined 1D water levels",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this one d water level predefined.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/2d_water_level/constant/": {
            "get": {
                "operationId": "simulations_initial_2d_water_level_constant_list",
                "description": "Initial 2D water levels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TwoDWaterLevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_2d_water_level_constant_create",
                "description": "Start the simulation with a global 2D water level. Applies the\ngiven value to the predefined nodes subset \"2D_OPEN_WATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/2d_water_level/constant/{id}/": {
            "get": {
                "operationId": "simulations_initial_2d_water_level_constant_read",
                "description": "Initial 2D water levels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_2d_water_level_constant_update",
                "description": "Initial 2D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_2d_water_level_constant_partial_update",
                "description": "Initial 2D water levels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_2d_water_level_constant_delete",
                "description": "Initial 2D water levels",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this two d water level.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/2d_water_level/raster/": {
            "get": {
                "operationId": "simulations_initial_2d_water_level_raster_list",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/TwoDWaterRaster"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_2d_water_level_raster_create",
                "description": "Start the simulation with 2D water levels derived from the raster by\nusing the aggregation method. Applies the resulting levels\nto the predefined nodes subset \"2D_OPEN_WATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/2d_water_level/raster/{id}/": {
            "get": {
                "operationId": "simulations_initial_2d_water_level_raster_read",
                "description": "Initial 2D water raster",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_2d_water_level_raster_update",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_2d_water_level_raster_partial_update",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TwoDWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_2d_water_level_raster_delete",
                "description": "Initial 2D water raster",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this two d water raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/groundwater_level/constant/": {
            "get": {
                "operationId": "simulations_initial_groundwater_level_constant_list",
                "description": "Initial groundwater levels.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GroundWaterLevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_groundwater_level_constant_create",
                "description": "Start the simulation with a global 2D groundwater level. Applies the\ngiven value to the predefined nodes subset \"2D_GROUNDWATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/groundwater_level/constant/{id}/": {
            "get": {
                "operationId": "simulations_initial_groundwater_level_constant_read",
                "description": "Initial groundwater levels.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_groundwater_level_constant_update",
                "description": "Initial groundwater levels.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_groundwater_level_constant_partial_update",
                "description": "Initial groundwater levels.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterLevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_groundwater_level_constant_delete",
                "description": "Initial groundwater levels.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ground water level.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/groundwater_level/raster/": {
            "get": {
                "operationId": "simulations_initial_groundwater_level_raster_list",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/GroundWaterRaster"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_groundwater_level_raster_create",
                "description": "Start the simulation with groundwaterlevels derived from the raster by\nusing the aggregation method. Applies the\ngiven value to the predefined nodes subset \"2D_GROUNDWATER\"\nas described in the [threedigrid documentation] [ref]\n\n[ref]: https://threedigrid.readthedocs.io/en/latest/api.html#subsets",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/groundwater_level/raster/{id}/": {
            "get": {
                "operationId": "simulations_initial_groundwater_level_raster_read",
                "description": "Initial 2D water raster",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_groundwater_level_raster_update",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_groundwater_level_raster_partial_update",
                "description": "Initial 2D water raster",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GroundWaterRaster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_groundwater_level_raster_delete",
                "description": "Initial 2D water raster",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this ground water raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/saved_state/": {
            "get": {
                "operationId": "simulations_initial_saved_state_list",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InitialSavedState"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_saved_state_create",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/saved_state/{id}/": {
            "get": {
                "operationId": "simulations_initial_saved_state_read",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_saved_state_update",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_saved_state_partial_update",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_saved_state_delete",
                "description": "A simple ViewSet for initial SavedState's",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/wind_drag-coefficient/": {
            "get": {
                "operationId": "simulations_initial_wind_drag-coefficient_list",
                "description": "A simple ViewSet for initial Wind drag coefficient",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WindDragCoefficient"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_initial_wind_drag-coefficient_create",
                "description": "Start the simulation with a global wind drag-coefficient. This\n(dimensionless) ``drag-coefficient`` translates the wind speed\non a 10 m elevation to the speed on the ground (default=0.005).\nCurrently the drag-coefficient works as a global factor for\nthe entire model: 1D lines and 2D lines if exists",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/initial/wind_drag-coefficient/{id}/": {
            "get": {
                "operationId": "simulations_initial_wind_drag-coefficient_read",
                "description": "A simple ViewSet for initial Wind drag coefficient",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_initial_wind_drag-coefficient_update",
                "description": "A simple ViewSet for initial Wind drag coefficient",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_initial_wind_drag-coefficient_partial_update",
                "description": "A simple ViewSet for initial Wind drag coefficient",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WindDragCoefficient"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_initial_wind_drag-coefficient_delete",
                "description": "A simple ViewSet for initial Wind drag coefficient",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this wind drag coefficient.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/progress/": {
            "get": {
                "operationId": "simulations_progress_list",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Progress"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/files/": {
            "get": {
                "operationId": "simulations_results_files_list",
                "description": "Retrieve simulation results",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ResultFile"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_results_files_create",
                "description": "Retrieve simulation results",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/files/{id}/": {
            "get": {
                "operationId": "simulations_results_files_read",
                "description": "Retrieve simulation results",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_results_files_update",
                "description": "Retrieve simulation results",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_results_files_partial_update",
                "description": "Retrieve simulation results",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ResultFile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_results_files_delete",
                "description": "Retrieve simulation results",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this result file.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/files/{id}/download/": {
            "get": {
                "operationId": "simulations_results_files_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this result file.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/files/{id}/upload/": {
            "post": {
                "operationId": "simulations_results_files_upload",
                "description": "Endpoint for uploading a result file",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    },
                    "404": {
                        "description": "Simulation not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this result file.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/arrival/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_arrival_list",
                "description": "A Custom ViewSet for creating, listing or deleting an\nArrivalTimePostProcessing resource. It includes a custom destroy\naction (with detail=False) as a BasicPostProcessing object can\nhave only one ArrivalTimePostProcessing object. An\nArrivalTimePostProcessing resource is created with an empty POST.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have an ArrivalTimePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "resource arrival time not found"
                    },
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ArrivalTimePostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_results_post_processing_lizard_arrival_create",
                "description": "A Custom ViewSet for creating, listing or deleting an\nArrivalTimePostProcessing resource. It includes a custom destroy\naction (with detail=False) as a BasicPostProcessing object can\nhave only one ArrivalTimePostProcessing object. An\nArrivalTimePostProcessing resource is created with an empty POST.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have an ArrivalTimePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ArrivalTimePostProcessing"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ArrivalTimePostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/arrival/delete/": {
            "delete": {
                "operationId": "simulations_results_post_processing_lizard_arrival_delete",
                "description": "A Custom ViewSet for creating, listing or deleting an\nArrivalTimePostProcessing resource. It includes a custom destroy\naction (with detail=False) as a BasicPostProcessing object can\nhave only one ArrivalTimePostProcessing object. An\nArrivalTimePostProcessing resource is created with an empty POST.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have an ArrivalTimePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.",
                "parameters": [],
                "responses": {
                    "404": {
                        "description": "resource arrival_time not found"
                    },
                    "400": {
                        "description": "not allowed, Lizard already started post-processing"
                    },
                    "204": {
                        "description": "deleted resource arrival_time"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/basic/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_basic_list",
                "description": "A Custom ViewSet for creating, listing or deleting\na BasicPostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a BasicPostProcessing resource.\n- Lizard may not already have been triggered to processing this simulation.\n- The Simulation must hold a 'dem_raw_file' in case parameter 'process_basic_results' is True.\n\nThe ``scenario_name`` parameter is optional (max 50 chars). If not\nprovided it becomes an empty string.\n\nTHe ``result_uuid`` can be defined for e.g. operational models. Defaults to\nan uuid4 if not provided.\n\nIf ``process_basic_results`` (boolean) is False then:\n- It is not possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- Only raw_results (.nc, .log, etc) are uploaded to Lizard.\n\nIf ``process_basic_results`` (boolean) is True then:\n- It is possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- raw_results are uploaded to Lizard and additional WMS layers are available on Lizard.\n\nPayload example\n```\n{\n    \"scenario_name\": \"my_scenario_name\",\n    \"process_basic_results\": True,\n}\n```",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "resource basic postprocessing not found"
                    },
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BasicPostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_results_post_processing_lizard_basic_create",
                "description": "A Custom ViewSet for creating, listing or deleting\na BasicPostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a BasicPostProcessing resource.\n- Lizard may not already have been triggered to processing this simulation.\n- The Simulation must hold a 'dem_raw_file' in case parameter 'process_basic_results' is True.\n\nThe ``scenario_name`` parameter is optional (max 50 chars). If not\nprovided it becomes an empty string.\n\nTHe ``result_uuid`` can be defined for e.g. operational models. Defaults to\nan uuid4 if not provided.\n\nIf ``process_basic_results`` (boolean) is False then:\n- It is not possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- Only raw_results (.nc, .log, etc) are uploaded to Lizard.\n\nIf ``process_basic_results`` (boolean) is True then:\n- It is possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- raw_results are uploaded to Lizard and additional WMS layers are available on Lizard.\n\nPayload example\n```\n{\n    \"scenario_name\": \"my_scenario_name\",\n    \"process_basic_results\": True,\n}\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BasicPostProcessing"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BasicPostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/basic/delete/": {
            "delete": {
                "operationId": "simulations_results_post_processing_lizard_basic_delete",
                "description": "A Custom ViewSet for creating, listing or deleting\na BasicPostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a BasicPostProcessing resource.\n- Lizard may not already have been triggered to processing this simulation.\n- The Simulation must hold a 'dem_raw_file' in case parameter 'process_basic_results' is True.\n\nThe ``scenario_name`` parameter is optional (max 50 chars). If not\nprovided it becomes an empty string.\n\nTHe ``result_uuid`` can be defined for e.g. operational models. Defaults to\nan uuid4 if not provided.\n\nIf ``process_basic_results`` (boolean) is False then:\n- It is not possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- Only raw_results (.nc, .log, etc) are uploaded to Lizard.\n\nIf ``process_basic_results`` (boolean) is True then:\n- It is possible to have ArrivalTimePostProcessing and DamagePostProcessing.\n- raw_results are uploaded to Lizard and additional WMS layers are available on Lizard.\n\nPayload example\n```\n{\n    \"scenario_name\": \"my_scenario_name\",\n    \"process_basic_results\": True,\n}\n```",
                "parameters": [],
                "responses": {
                    "404": {
                        "description": "resource basic_post_processing not found"
                    },
                    "400": {
                        "description": "not allowed, Lizard already started post-processing"
                    },
                    "204": {
                        "description": "deleted resource basic_post_processing"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/damage/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_damage_list",
                "description": "A Custom ViewSet for creating, listing or deleting\na DamagePostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a DamagePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.\n\nThe ``cost_type`` parameter choices are: 'min', 'avg', 'max'.\n\nThe ``flood_month`` parameter choices are: 'jan', 'feb', etc\n\nThe ``inundation_period`` parameter is ime in hours (float),\nmin_value=1.0\n\nThe ``repair_time_infrastructure`` parameter is time in\nhours (integer), min_value=1, max_value=240\n\nThe ``repair_time_buildings`` parameter is time in hours (integer),\nmin_value=1, max_value=240\n\nPayload example\n```\n{\n    \"cost_type\": \"min\",\n    \"flood_month\": \"jan\",\n    \"inundation_period\": 12.0,\n    \"repair_time_infrastructure\": 120,\n    \"repair_time_buildings\": 240\n}\n```",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "resource damage_estimation not found"
                    },
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DamagePostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_results_post_processing_lizard_damage_create",
                "description": "A Custom ViewSet for creating, listing or deleting\na DamagePostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a DamagePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.\n\nThe ``cost_type`` parameter choices are: 'min', 'avg', 'max'.\n\nThe ``flood_month`` parameter choices are: 'jan', 'feb', etc\n\nThe ``inundation_period`` parameter is ime in hours (float),\nmin_value=1.0\n\nThe ``repair_time_infrastructure`` parameter is time in\nhours (integer), min_value=1, max_value=240\n\nThe ``repair_time_buildings`` parameter is time in hours (integer),\nmin_value=1, max_value=240\n\nPayload example\n```\n{\n    \"cost_type\": \"min\",\n    \"flood_month\": \"jan\",\n    \"inundation_period\": 12.0,\n    \"repair_time_infrastructure\": 120,\n    \"repair_time_buildings\": 240\n}\n```",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DamagePostProcessing"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/DamagePostProcessing"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/damage/delete/": {
            "delete": {
                "operationId": "simulations_results_post_processing_lizard_damage_delete",
                "description": "A Custom ViewSet for creating, listing or deleting\na DamagePostProcessing resource. It includes a custom\ndestroy action (with detail=False) as a BasicPostProcessing\nobject can have only one DamagePostProcessing object.\n\nThree conditions are validated when creating an resource:\n- The simulation may not already have a DamagePostProcessing resource.\n- The simulation must have a BasicPostProcessing resource with 'process_basic_results'=True.\n- Lizard may not already have been triggered to processing this simulation.\n\nThe ``cost_type`` parameter choices are: 'min', 'avg', 'max'.\n\nThe ``flood_month`` parameter choices are: 'jan', 'feb', etc\n\nThe ``inundation_period`` parameter is ime in hours (float),\nmin_value=1.0\n\nThe ``repair_time_infrastructure`` parameter is time in\nhours (integer), min_value=1, max_value=240\n\nThe ``repair_time_buildings`` parameter is time in hours (integer),\nmin_value=1, max_value=240\n\nPayload example\n```\n{\n    \"cost_type\": \"min\",\n    \"flood_month\": \"jan\",\n    \"inundation_period\": 12.0,\n    \"repair_time_infrastructure\": 120,\n    \"repair_time_buildings\": 240\n}\n```",
                "parameters": [],
                "responses": {
                    "404": {
                        "description": "resource damage_estimation not found"
                    },
                    "401": {
                        "description": "not allowed, Lizard already started post-processing"
                    },
                    "204": {
                        "description": "deleted resource damage_estimation"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/overview/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_overview_list",
                "description": "Custom list that provides overview of post-processing configuration.\nBelow a format specification is provided. All keys always exists,\nregardless post-processing config:\n\n```\n{\n  \"username\": str,\n  \"external_user_id\": Optional[str],\n  \"metadata_version\": float,\n  \"start_time_sim\": datetime (UTC),\n  \"end_time_sim\": datetime (UTC),\n  \"results\": {\n    \"basic\": bool,\n    \"damage_estimation\": bool,\n    \"arrival_time\": bool\n  },\n  \"settings\": {\n    \"damage_estimation\": {\n        \"damage_table\": str,\n        \"elevation_raster_uuid\": str,\n        \"landcover_raster_uuid\": str,\n        \"road_rail_raster_uuid\": str,\n        \"cost_type\": int,\n        \"flood_month\": int,\n        \"inundation_period\": int,\n        \"repair_time_infrastructure\": int,\n        \"repair_time_buildings\": int\n        },\n  },\n  \"model_name\": str, (=threedimodel_slug)\n  \"simulation_name\": str, (=simulation_slug)\n  \"scenario_name\": str,\n  \"model_id\": int,\n  \"model_revision_id\": str,\n  \"email\": str,\n  \"result_uuid\": str,\n  \"organisation_uuid\": str,\n  \"simulation\": int\n}\n```",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostProcessingOverview"
                        }
                    },
                    "404": {
                        "description": "No basic post-processing resource found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/start/": {
            "post": {
                "operationId": "simulations_results_post_processing_lizard_start_create",
                "description": "Empty post to start Lizard post-processing for one Simulation result.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStart"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/start/retry/": {
            "post": {
                "operationId": "simulations_results_post_processing_lizard_start_retry",
                "summary": "Retry the Lizard post-processing",
                "description": "Will only re-trigger the post-processing if the post-processing status is in\n`archiving_failed`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStart"
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/status/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_status_list",
                "description": "Show the latest post-processing status of one simulation.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "404": {
                        "description": "resource post_processing_status not found"
                    },
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_results_post_processing_lizard_status_create",
                "description": "Endpoint to keep track of post-processing status (done by Lizard)\nper Simulation result. Status is updated internal by 3Di, and once\nprocessing starts it is updated by Lizard backend.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStatus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PostProcessingStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/status/delete/": {
            "delete": {
                "operationId": "simulations_results_post_processing_lizard_status_delete",
                "description": "Endpoint to keep track of post-processing status (done by Lizard)\nper Simulation result. Status is updated internal by 3Di, and once\nprocessing starts it is updated by Lizard backend.",
                "parameters": [],
                "responses": {
                    "404": {
                        "description": "resource post_processing_status not found"
                    },
                    "204": {
                        "description": "post_processing_status deleted"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/results/post_processing/lizard/status/history/": {
            "get": {
                "operationId": "simulations_results_post_processing_lizard_status_history_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostProcessingStatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/aggregation/": {
            "get": {
                "operationId": "simulations_settings_aggregation_list",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AggregationSettings"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_settings_aggregation_create",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/aggregation/{id}/": {
            "get": {
                "operationId": "simulations_settings_aggregation_read",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_aggregation_update",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_aggregation_partial_update",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/AggregationSettings"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_aggregation_delete",
                "summary": "Simulation aggregation settings.",
                "description": "For a consistent water balance often the results of various snap shots -\nas provided by the results_3di.nc file - are not enough. Especially in case\nof an time step setting that is larger than the computational time step.\nFor this purpose, an aggregated results file is available called\naggregate_results_3di.nc. The structure of the file is very similar to the\nother result file. Each Mesh variable (s1, u1, etc.) described in the results\nsection can be aggregated.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this aggregation settings.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/customized_result_areas/": {
            "get": {
                "operationId": "simulations_settings_customized_result_areas_list",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/CustomizedResultArea"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_settings_customized_result_areas_create",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/customized_result_areas/{id}/": {
            "get": {
                "operationId": "simulations_settings_customized_result_areas_read",
                "description": "Water quality customized result area",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_customized_result_areas_update",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_customized_result_areas_partial_update",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_customized_result_areas_delete",
                "description": "Water quality customized result area",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this customized result area.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/numerical/": {
            "post": {
                "operationId": "simulations_settings_numerical_create",
                "description": "create a numerical settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NumericalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_numerical_update",
                "description": "update the numerical settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NumericalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_numerical_partial_update",
                "description": "update the numerical settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NumericalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_numerical_delete",
                "description": "delete the numerical settings resource",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/output_settings/": {
            "post": {
                "operationId": "simulations_settings_output_settings_create",
                "description": "create a output settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_output_settings_update",
                "description": "update the output settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_output_settings_partial_update",
                "description": "update the output settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_output_settings_delete",
                "description": "delete the output settings resource",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/overview/": {
            "get": {
                "operationId": "simulations_settings_overview",
                "description": "Overview of the the simulation settings.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimulationSettingsOverview"
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/physical/": {
            "post": {
                "operationId": "simulations_settings_physical_create",
                "description": "Create a general settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PhysicalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_physical_update",
                "description": "Update the general settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PhysicalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_physical_partial_update",
                "description": "Update the general settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PhysicalSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_physical_delete",
                "description": "Delete the general settings resource.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/time_step/": {
            "post": {
                "operationId": "simulations_settings_time_step_create",
                "description": "create a time step settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeStepSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_time_step_update",
                "description": "update the time step settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeStepSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_time_step_partial_update",
                "description": "update the time step settings resource",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TimeStepSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_time_step_delete",
                "description": "delete the time step settings resource",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/water_quality/": {
            "post": {
                "operationId": "simulations_settings_water_quality_create",
                "description": "Create a water quality settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualitySettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_water_quality_update",
                "description": "Update the water quality settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualitySettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_water_quality_partial_update",
                "description": "Update the water quality settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualitySettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_water_quality_delete",
                "description": "Delete the water quality settings resource.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/water_quality_customized_result_areas/": {
            "get": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_list",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_create",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/water_quality_customized_result_areas/{id}/": {
            "get": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_read",
                "description": "Water quality customized result area",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_update",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_partial_update",
                "description": "Water quality customized result area",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_water_quality_customized_result_areas_delete",
                "description": "Water quality customized result area",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this water quality customized result area.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/settings/water_quality_output_settings/": {
            "post": {
                "operationId": "simulations_settings_water_quality_output_settings_create",
                "description": "Create a water quality output settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityOutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "simulations_settings_water_quality_output_settings_update",
                "description": "Update the water quality output settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityOutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_settings_water_quality_output_settings_partial_update",
                "description": "Update the water quality output settings resource.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterQualityOutputSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_settings_water_quality_output_settings_delete",
                "description": "Delete the water quality output settings resource.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "409": {
                        "description": "Conflict with current state"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/status/": {
            "get": {
                "operationId": "simulations_status_list",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/CurrentStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "simulations_status_create",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/status/history/": {
            "get": {
                "operationId": "simulations_status_history_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SimulationStatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/status/history/{id}/": {
            "get": {
                "operationId": "simulations_status_history_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation status.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/status/patch/": {
            "patch": {
                "operationId": "simulations_status_patch",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/status/{id}/": {
            "put": {
                "operationId": "simulations_status_update",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "simulations_status_partial_update",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "simulations_status_delete",
                "description": "A simple ViewSet for viewing simulations",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation status.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/breach_graph/": {
            "post": {
                "operationId": "simulations_visualisations_breach_graph_create",
                "summary": "Get a websocket URL returning breaches (graph) data",
                "description": "The websocket-url in the response returns binary data\nmessages consisting of timestamp, breach_width,\nbreach_depth, q (discharge), au (wet cross-sectional area)\nas float32 data.\n\nThe values are alternated like:\n[timestamp, breach_width, breach_depth, q, au ...\n timestamp_N, breach_width_N, breach_depth_N, q_N, au_N]",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BreachGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BreachGraph"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/pump_discharge_graph/": {
            "post": {
                "operationId": "simulations_visualisations_pump_discharge_graph_create",
                "summary": "Get a websocket URL returning pump discharge (graph) data",
                "description": "The websocket-url in the response returns binary data\nmessages consisting of timestamp, q_pump (discharge)\nfloat32 data. The values are alternated like:\n[timestamp, q_pump, timestamp_2, q_pump_2... timestamp_N, q_pump_N]",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PumpDischargeGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PumpDischargeGraph"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/rain_graph/": {
            "post": {
                "operationId": "simulations_visualisations_rain_graph_create",
                "summary": "Get a websocket URL returning node rain (graph) data.",
                "description": "The websocket-url in the response returns binary data\nmessages consisting of timestamp and rain float32 data.\nThe values are alternated like:\n[timestamp, rain, timestamp_2, rain_2... timestamp_N, rain_N]",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RainGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RainGraph"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/water_flow_graph/": {
            "post": {
                "operationId": "simulations_visualisations_water_flow_graph_create",
                "summary": "Get a websocket URL returning line flow (graph) data.",
                "description": "The websocket-url in the response returns binary data\nmessages consisting of timestamp, u1 (velocity), q (discharge)\nfloat32 data. The values are alternated like:\n[timestamp, u1, q, timestamp_2, u1_2, q_2... timestamp_N, u1_N, q_N]",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterFlowGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterGraph"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/water_level_graph/": {
            "post": {
                "operationId": "simulations_visualisations_water_level_graph_create",
                "summary": "Get a websocket URL returning node waterlevel (graph) data.",
                "description": "The websocket-url in the response returns binary data\nmessages consisting of timestamp and waterlevel float32 data.\nThe values are alternated like:\n[timestamp, s1, timestamp_2, s1_2... timestamp_N, s1_N]",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterLevelGraphRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterGraph"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/water_level_profile/": {
            "post": {
                "operationId": "simulations_visualisations_water_level_profile_create",
                "summary": "Get a websocket URL returning waterlevel profile data.",
                "description": "The websocket returns binary data messages consisting of\ntimestep and waterlevel float32 values in one message like:\ntimestep, waterlevel, waterlevel, waterlevel, waterlevel\n\nGroundwater waterlevel values are automatically added\n(after open water) if groundwater is present. The returned\nwaterlevel values have length 'points_limit' * 2 in this case.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/WaterLevelProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/WaterLevelProfile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/waterdepth/": {
            "get": {
                "operationId": "simulations_visualisations_waterdepth_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Waterdepth"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/{layer}/profile/": {
            "get": {
                "operationId": "simulations_visualisations_profile_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "layer",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/visualisations/{layer}/tms/": {
            "get": {
                "operationId": "simulations_visualisations_tms_list",
                "description": "",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TMS"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "layer",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/simulations/{simulation_pk}/websockets/": {
            "get": {
                "operationId": "simulations_websockets_list",
                "description": "List active websocket connections for a given simulation",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SimulationChannel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "simulation_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/statuses/": {
            "get": {
                "operationId": "statuses_list",
                "summary": "Show the latest status off all simulations.",
                "description": "List all simulations that ever have finished successfully\n\n```\n?name=finished\n```\n\nList all simulations that have finished successfully during the week\nof the 1988 UEFA European Football Championship\n```\n?name=finished&created__date__gte=1988-06-10&created__date__lte=1988-06-25\n```\n\nThe `created` field is of type date-time in ISO 8601 (UTC) format. To\nget all crashed simulations since St Nicolas 2018\n\n```\n?name=crashed&created__gte=2018-12-05T00:00:00Z\n```",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "created",
                            "starting",
                            "initialized",
                            "queued",
                            "ended",
                            "postprocessing",
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name",
                        "in": "query",
                        "description": "simulation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__iexact",
                        "in": "query",
                        "description": "simulation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__contains",
                        "in": "query",
                        "description": "simulation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__icontains",
                        "in": "query",
                        "description": "simulation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__in",
                        "in": "query",
                        "description": "simulation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__startswith",
                        "in": "query",
                        "description": "simulation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__istartswith",
                        "in": "query",
                        "description": "simulation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__endswith",
                        "in": "query",
                        "description": "simulation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__regex",
                        "in": "query",
                        "description": "simulation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__compute_cluster__name",
                        "in": "query",
                        "description": "simulation__compute_cluster__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug",
                        "in": "query",
                        "description": "simulation__threedimodel__slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__iexact",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__contains",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__icontains",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__in",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__startswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__istartswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__endswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__regex",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": "created",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__gt",
                        "in": "query",
                        "description": "created__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__gte",
                        "in": "query",
                        "description": "created__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__lt",
                        "in": "query",
                        "description": "created__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__lte",
                        "in": "query",
                        "description": "created__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week",
                        "in": "query",
                        "description": "created__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week_day",
                        "in": "query",
                        "description": "created__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__gt",
                        "in": "query",
                        "description": "id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__gte",
                        "in": "query",
                        "description": "id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__lt",
                        "in": "query",
                        "description": "id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__lte",
                        "in": "query",
                        "description": "id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__isnull",
                        "in": "query",
                        "description": "id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code",
                        "in": "query",
                        "description": "exit_code",
                        "required": false,
                        "type": "string",
                        "enum": [
                            1110,
                            1210,
                            1240,
                            4161,
                            4262,
                            4263,
                            4264,
                            4265,
                            4120,
                            4220,
                            4150,
                            4280,
                            4240,
                            4270,
                            4230,
                            4231,
                            4232,
                            2150,
                            2110,
                            2210,
                            2120,
                            2220,
                            2230,
                            2240
                        ]
                    },
                    {
                        "name": "exit_code__gt",
                        "in": "query",
                        "description": "exit_code__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__gte",
                        "in": "query",
                        "description": "exit_code__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__lt",
                        "in": "query",
                        "description": "exit_code__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__lte",
                        "in": "query",
                        "description": "exit_code__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__isnull",
                        "in": "query",
                        "description": "exit_code__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation_id__in",
                        "in": "query",
                        "description": "simulation_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username",
                        "in": "query",
                        "description": "simulation__user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__type__live",
                        "in": "query",
                        "description": "simulation__type__live",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__tags__contains",
                        "in": "query",
                        "description": "simulation_tags_contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__name__istartswith",
                        "in": "query",
                        "description": "simulation__organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__unique_id",
                        "in": "query",
                        "description": "simulation__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SimulationStatus"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/statuses/statistics/": {
            "get": {
                "operationId": "statuses_statistics",
                "summary": "Count of (latest/final) simulation statuses. Combine with filters to\nget your weekly/monthly etc statistics",
                "description": "For example, to get a count of finished simulations in 2020\n\n```\n?name=finished&created__year=2020",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "created",
                            "starting",
                            "initialized",
                            "queued",
                            "ended",
                            "postprocessing",
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name",
                        "in": "query",
                        "description": "simulation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__iexact",
                        "in": "query",
                        "description": "simulation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__contains",
                        "in": "query",
                        "description": "simulation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__icontains",
                        "in": "query",
                        "description": "simulation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__in",
                        "in": "query",
                        "description": "simulation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__startswith",
                        "in": "query",
                        "description": "simulation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__istartswith",
                        "in": "query",
                        "description": "simulation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__endswith",
                        "in": "query",
                        "description": "simulation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__regex",
                        "in": "query",
                        "description": "simulation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__compute_cluster__name",
                        "in": "query",
                        "description": "simulation__compute_cluster__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug",
                        "in": "query",
                        "description": "simulation__threedimodel__slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__iexact",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__contains",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__icontains",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__in",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__startswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__istartswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__endswith",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__slug__regex",
                        "in": "query",
                        "description": "simulation__threedimodel__slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created",
                        "in": "query",
                        "description": "created",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__gt",
                        "in": "query",
                        "description": "created__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__gte",
                        "in": "query",
                        "description": "created__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__lt",
                        "in": "query",
                        "description": "created__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__lte",
                        "in": "query",
                        "description": "created__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week",
                        "in": "query",
                        "description": "created__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week_day",
                        "in": "query",
                        "description": "created__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__gt",
                        "in": "query",
                        "description": "id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__gte",
                        "in": "query",
                        "description": "id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__lt",
                        "in": "query",
                        "description": "id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__lte",
                        "in": "query",
                        "description": "id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__isnull",
                        "in": "query",
                        "description": "id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code",
                        "in": "query",
                        "description": "exit_code",
                        "required": false,
                        "type": "string",
                        "enum": [
                            1110,
                            1210,
                            1240,
                            4161,
                            4262,
                            4263,
                            4264,
                            4265,
                            4120,
                            4220,
                            4150,
                            4280,
                            4240,
                            4270,
                            4230,
                            4231,
                            4232,
                            2150,
                            2110,
                            2210,
                            2120,
                            2220,
                            2230,
                            2240
                        ]
                    },
                    {
                        "name": "exit_code__gt",
                        "in": "query",
                        "description": "exit_code__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__gte",
                        "in": "query",
                        "description": "exit_code__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__lt",
                        "in": "query",
                        "description": "exit_code__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__lte",
                        "in": "query",
                        "description": "exit_code__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "exit_code__isnull",
                        "in": "query",
                        "description": "exit_code__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation_id__in",
                        "in": "query",
                        "description": "simulation_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username",
                        "in": "query",
                        "description": "simulation__user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__type__live",
                        "in": "query",
                        "description": "simulation__type__live",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__tags__contains",
                        "in": "query",
                        "description": "simulation_tags_contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__name__istartswith",
                        "in": "query",
                        "description": "simulation__organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__unique_id",
                        "in": "query",
                        "description": "simulation__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SimulationStatusStatistics"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/statuses/{id}/": {
            "get": {
                "operationId": "statuses_read",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SimulationStatus"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this simulation status.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/": {
            "get": {
                "operationId": "threedimodels_list",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug",
                        "in": "query",
                        "description": "slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__iexact",
                        "in": "query",
                        "description": "slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__contains",
                        "in": "query",
                        "description": "slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__icontains",
                        "in": "query",
                        "description": "slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__in",
                        "in": "query",
                        "description": "slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__startswith",
                        "in": "query",
                        "description": "slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__istartswith",
                        "in": "query",
                        "description": "slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__endswith",
                        "in": "query",
                        "description": "slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "slug__regex",
                        "in": "query",
                        "description": "slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "epsg",
                        "in": "query",
                        "description": "epsg",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_valid",
                        "in": "query",
                        "description": "is_valid",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug",
                        "in": "query",
                        "description": "inpy_version__slug",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__iexact",
                        "in": "query",
                        "description": "inpy_version__slug__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__contains",
                        "in": "query",
                        "description": "inpy_version__slug__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__icontains",
                        "in": "query",
                        "description": "inpy_version__slug__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__in",
                        "in": "query",
                        "description": "inpy_version__slug__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__startswith",
                        "in": "query",
                        "description": "inpy_version__slug__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__istartswith",
                        "in": "query",
                        "description": "inpy_version__slug__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__endswith",
                        "in": "query",
                        "description": "inpy_version__slug__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__slug__regex",
                        "in": "query",
                        "description": "inpy_version__slug__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version",
                        "in": "query",
                        "description": "inpy_version__threedi_version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__iexact",
                        "in": "query",
                        "description": "inpy_version__threedi_version__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__contains",
                        "in": "query",
                        "description": "inpy_version__threedi_version__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__icontains",
                        "in": "query",
                        "description": "inpy_version__threedi_version__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__in",
                        "in": "query",
                        "description": "inpy_version__threedi_version__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__startswith",
                        "in": "query",
                        "description": "inpy_version__threedi_version__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__istartswith",
                        "in": "query",
                        "description": "inpy_version__threedi_version__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__endswith",
                        "in": "query",
                        "description": "inpy_version__threedi_version__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedi_version__regex",
                        "in": "query",
                        "description": "inpy_version__threedi_version__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version",
                        "in": "query",
                        "description": "inpy_version__threedicore_version",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__iexact",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__contains",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__icontains",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__in",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__startswith",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__istartswith",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__endswith",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__threedicore_version__regex",
                        "in": "query",
                        "description": "inpy_version__threedicore_version__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__commit_user__username",
                        "in": "query",
                        "description": "revision__commit_user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__commit_user__username__istartswith",
                        "in": "query",
                        "description": "revision__commit_user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__id",
                        "in": "query",
                        "description": "revision__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number",
                        "in": "query",
                        "description": "revision__number",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number__gt",
                        "in": "query",
                        "description": "revision__number__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number__gte",
                        "in": "query",
                        "description": "revision__number__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number__lt",
                        "in": "query",
                        "description": "revision__number__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number__lte",
                        "in": "query",
                        "description": "revision__number__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__number__isnull",
                        "in": "query",
                        "description": "revision__number__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash",
                        "in": "query",
                        "description": "revision__hash",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__iexact",
                        "in": "query",
                        "description": "revision__hash__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__contains",
                        "in": "query",
                        "description": "revision__hash__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__icontains",
                        "in": "query",
                        "description": "revision__hash__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__in",
                        "in": "query",
                        "description": "revision__hash__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__startswith",
                        "in": "query",
                        "description": "revision__hash__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__istartswith",
                        "in": "query",
                        "description": "revision__hash__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__endswith",
                        "in": "query",
                        "description": "revision__hash__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__hash__regex",
                        "in": "query",
                        "description": "revision__hash__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__isnull",
                        "in": "query",
                        "description": "revision__schematisation__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name",
                        "in": "query",
                        "description": "revision__schematisation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__iexact",
                        "in": "query",
                        "description": "revision__schematisation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__contains",
                        "in": "query",
                        "description": "revision__schematisation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__icontains",
                        "in": "query",
                        "description": "revision__schematisation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__in",
                        "in": "query",
                        "description": "revision__schematisation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__startswith",
                        "in": "query",
                        "description": "revision__schematisation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__istartswith",
                        "in": "query",
                        "description": "revision__schematisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__endswith",
                        "in": "query",
                        "description": "revision__schematisation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__name__regex",
                        "in": "query",
                        "description": "revision__schematisation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__iexact",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__contains",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__icontains",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__in",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__startswith",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__istartswith",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__endswith",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__repository__organisation__unique_id__regex",
                        "in": "query",
                        "description": "revision__repository__organisation__unique_id__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__owner__unique_id",
                        "in": "query",
                        "description": "revision__schematisation__owner__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__id",
                        "in": "query",
                        "description": "revision__schematisation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__range",
                        "in": "query",
                        "description": "created__range",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date",
                        "in": "query",
                        "description": "created__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gt",
                        "in": "query",
                        "description": "created__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__gte",
                        "in": "query",
                        "description": "created__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lt",
                        "in": "query",
                        "description": "created__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__date__lte",
                        "in": "query",
                        "description": "created__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year",
                        "in": "query",
                        "description": "created__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gt",
                        "in": "query",
                        "description": "created__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__gte",
                        "in": "query",
                        "description": "created__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lt",
                        "in": "query",
                        "description": "created__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__year__lte",
                        "in": "query",
                        "description": "created__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month",
                        "in": "query",
                        "description": "created__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__month__lte",
                        "in": "query",
                        "description": "created__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day",
                        "in": "query",
                        "description": "created__day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__day__lt",
                        "in": "query",
                        "description": "created__day__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week",
                        "in": "query",
                        "description": "created__week",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__week_day",
                        "in": "query",
                        "description": "created__week_day",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__quarter",
                        "in": "query",
                        "description": "created__quarter",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__time",
                        "in": "query",
                        "description": "created__time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__hour",
                        "in": "query",
                        "description": "created__hour",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__minute",
                        "in": "query",
                        "description": "created__minute",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__second",
                        "in": "query",
                        "description": "created__second",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "created__isnull",
                        "in": "query",
                        "description": "created__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__is_pinned",
                        "in": "query",
                        "description": "revision__is_pinned",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "revision__schematisation__tags__in",
                        "in": "query",
                        "description": "revision__schematisation__tags__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "disabled",
                        "in": "query",
                        "description": "disabled",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inp_success",
                        "in": "query",
                        "description": "inp_success",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "inpy_version__active",
                        "in": "query",
                        "description": "inpy_version__active",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_generating",
                        "in": "query",
                        "description": "is_generating",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreediModel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_create",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/threedimodels/{id}/": {
            "get": {
                "operationId": "threedimodels_read",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "threedimodels_update",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "threedimodels_partial_update",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_delete",
                "summary": "Soft-delete the threedimodel (sets disabled to True)",
                "description": "If the model is already disabled and the user is a superuser, delete\nthe threedimodel.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/all/download/": {
            "get": {
                "operationId": "threedimodels_geojson_download",
                "description": "Endpoint for downloading geojson file.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/all/upload/": {
            "post": {
                "operationId": "threedimodels_geojson_upload",
                "description": "Endpoint for uploading the geojson file\nReplaces the geojson file if there already exists one.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/breaches/download/": {
            "get": {
                "operationId": "threedimodels_geojson_breaches_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/breaches/upload/": {
            "post": {
                "operationId": "threedimodels_breaches_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/cells/download/": {
            "get": {
                "operationId": "threedimodels_geojson_cells_download",
                "description": "Note that this is the subset of 2d open_water cells",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/cells/upload/": {
            "post": {
                "operationId": "threedimodels_cells_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/channels/download/": {
            "get": {
                "operationId": "threedimodels_geojson_channels_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/channels/upload/": {
            "post": {
                "operationId": "threedimodels_channels_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/culverts/download/": {
            "get": {
                "operationId": "threedimodels_geojson_culverts_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/culverts/upload/": {
            "post": {
                "operationId": "threedimodels_culverts_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/flowlines/download/": {
            "get": {
                "operationId": "threedimodels_geojson_flowlines_download",
                "description": "Note that this is a subset of all lines",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/flowlines/upload/": {
            "post": {
                "operationId": "threedimodels_flowlines_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/levees/download/": {
            "get": {
                "operationId": "threedimodels_geojson_levees_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/levees/upload/": {
            "post": {
                "operationId": "threedimodels_levees_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/manholes/download/": {
            "get": {
                "operationId": "threedimodels_geojson_manholes_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/manholes/upload/": {
            "post": {
                "operationId": "threedimodels_manholes_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/orifices/download/": {
            "get": {
                "operationId": "threedimodels_geojson_orifices_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/orifices/upload/": {
            "post": {
                "operationId": "threedimodels_orifices_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/pipes/download/": {
            "get": {
                "operationId": "threedimodels_geojson_pipes_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/pipes/upload/": {
            "post": {
                "operationId": "threedimodels_pipes_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/pumps/download/": {
            "get": {
                "operationId": "threedimodels_geojson_pumps_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/pumps/upload/": {
            "post": {
                "operationId": "threedimodels_pumps_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/weirs/download/": {
            "get": {
                "operationId": "threedimodels_geojson_weirs_download",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geojson/weirs/upload/": {
            "post": {
                "operationId": "threedimodels_weirs_geojson_upload",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geopackage/download/": {
            "get": {
                "operationId": "threedimodels_geopackage_download",
                "description": "Endpoint for downloading geopackage file.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/geopackage/upload/": {
            "post": {
                "operationId": "threedimodels_geopackage_upload",
                "summary": "Endpoint for uploading the gridadmin file",
                "description": "Replaces the gridadmin if there already exists one.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/gridadmin/download/": {
            "get": {
                "operationId": "threedimodels_gridadmin_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/gridadmin/upload/": {
            "post": {
                "operationId": "threedimodels_gridadmin_upload",
                "summary": "Endpoint for uploading the gridadmin file",
                "description": "Replaces the gridadmin if there already exists one.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/raster_options/": {
            "get": {
                "operationId": "threedimodels_raster_options",
                "description": "A simple ViewSet for viewing threedimodels",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RasterOptions"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/tables/download/": {
            "get": {
                "operationId": "threedimodels_tables_download",
                "description": "Endpoint for downloading tables files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{id}/tables/upload/": {
            "post": {
                "operationId": "threedimodels_tables_upload",
                "summary": "Endpoint for uploading the tables.h5 file",
                "description": "Replaces the tables file if there already exists one.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/boundaryconditions/": {
            "get": {
                "operationId": "threedimodels_boundaryconditions_list",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/BoundaryCondition"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_boundaryconditions_create",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/boundaryconditions/{id}/": {
            "get": {
                "operationId": "threedimodels_boundaryconditions_read",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "threedimodels_boundaryconditions_update",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "threedimodels_boundaryconditions_partial_update",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/BoundaryCondition"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_boundaryconditions_delete",
                "description": "A simple ViewSet for viewing boundary conditions",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this boundary condition.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/bulk_rasters/": {
            "post": {
                "operationId": "threedimodels_bulk_rasters_create",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Raster"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Raster"
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/initial_waterlevels/": {
            "get": {
                "operationId": "threedimodels_initial_waterlevels_list",
                "description": "## Description\nInitial waterlevels on threedimodels can be used in a simulation to specify the initial\nwaterlevels on the 1D and/or 2D domain.\n\n### Initial waterlevels from schematisation\n1D and 2D initial waterlevels in the schematisation are automatically picked up\nduring the creation of the threedimodel.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/InitialWaterlevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_initial_waterlevels_create",
                "summary": "Add new initial waterlevels",
                "description": "### Adding (extra) 1D initial waterlevels\nExtra 1D initial waterlevels can be added by posting:\n\n{\"dimension\": \"one_d\"}\n\nUsing the 'id' value from the response, a JSON file needs to be uploaded via the PUT_URL retrieved from\n`initial_waterlevels/{id}/upload/` in the following JSON format:\n\nPython code:\n\n    import json\n    file_contents = json.dumps({\n        \"node_ids\": [node_id_1, node_id2, ....],\n        \"values\" : [value_for_node_id_1, value_for_node_id_2, ...]\n    })\n\n    # Notes:\n    # - Omitted values are considered dry.\n    # - `node_ids` need to be sorted and unique\n    # - Make sure that the positions of the node_id's and values match.\n\n### Adding (extra) 2D initial waterlevels\n2D initial waterlevels can be added by uploading an 'initial_waterlevel_file' Geotiff raster via `rasters/{id}/upload/`.\nThis automatically triggers the creation of a 2D initial waterlevel. The source raster is\nlinked as 'source_raster'. The values in the `source_raster` are aggregated per node using\nmax, min and mean operators. The resulting values are stored in a file linked under `file`.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/initial_waterlevels/{id}/": {
            "get": {
                "operationId": "threedimodels_initial_waterlevels_read",
                "description": "## Description\nInitial waterlevels on threedimodels can be used in a simulation to specify the initial\nwaterlevels on the 1D and/or 2D domain.\n\n### Initial waterlevels from schematisation\n1D and 2D initial waterlevels in the schematisation are automatically picked up\nduring the creation of the threedimodel.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "threedimodels_initial_waterlevels_update",
                "description": "## Description\nInitial waterlevels on threedimodels can be used in a simulation to specify the initial\nwaterlevels on the 1D and/or 2D domain.\n\n### Initial waterlevels from schematisation\n1D and 2D initial waterlevels in the schematisation are automatically picked up\nduring the creation of the threedimodel.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "threedimodels_initial_waterlevels_partial_update",
                "description": "## Description\nInitial waterlevels on threedimodels can be used in a simulation to specify the initial\nwaterlevels on the 1D and/or 2D domain.\n\n### Initial waterlevels from schematisation\n1D and 2D initial waterlevels in the schematisation are automatically picked up\nduring the creation of the threedimodel.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/InitialWaterlevel"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_initial_waterlevels_delete",
                "description": "Delete initial waterlevel",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial waterlevel.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/initial_waterlevels/{id}/download/": {
            "get": {
                "operationId": "threedimodels_initial_waterlevels_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial waterlevel.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/initial_waterlevels/{id}/processed/": {
            "put": {
                "operationId": "threedimodels_initial_waterlevels_processed",
                "description": "## Description\nInitial waterlevels on threedimodels can be used in a simulation to specify the initial\nwaterlevels on the 1D and/or 2D domain.\n\n### Initial waterlevels from schematisation\n1D and 2D initial waterlevels in the schematisation are automatically picked up\nduring the creation of the threedimodel.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BaseEventState"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial waterlevel.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/initial_waterlevels/{id}/upload/": {
            "post": {
                "operationId": "threedimodels_initial_waterlevels_upload",
                "description": "Endpoint for uploading an initial waterlevel file, see the POST\nendpoint for documentation about the file format.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this initial waterlevel.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/potentialbreaches/": {
            "get": {
                "operationId": "threedimodels_potentialbreaches_list",
                "summary": "A simple ViewSet for viewing breaches",
                "description": "To get the potential breach from the geojson use the `content_pk` parameter to\nfilter the potential breaches endpoint:\n`/potential_breaches/?connected_pnt_id={content_pk}`",
                "parameters": [
                    {
                        "name": "connected_pnt_id",
                        "in": "query",
                        "description": "connected_pnt_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connected_pnt_id__gt",
                        "in": "query",
                        "description": "connected_pnt_id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connected_pnt_id__gte",
                        "in": "query",
                        "description": "connected_pnt_id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connected_pnt_id__lt",
                        "in": "query",
                        "description": "connected_pnt_id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connected_pnt_id__lte",
                        "in": "query",
                        "description": "connected_pnt_id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "connected_pnt_id__isnull",
                        "in": "query",
                        "description": "connected_pnt_id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id",
                        "in": "query",
                        "description": "threedimodel__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id__gt",
                        "in": "query",
                        "description": "threedimodel__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id__gte",
                        "in": "query",
                        "description": "threedimodel__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id__lt",
                        "in": "query",
                        "description": "threedimodel__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id__lte",
                        "in": "query",
                        "description": "threedimodel__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "threedimodel__id__isnull",
                        "in": "query",
                        "description": "threedimodel__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PotentialBreach"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_potentialbreaches_create",
                "summary": "A simple ViewSet for viewing breaches",
                "description": "To get the potential breach from the geojson use the `content_pk` parameter to\nfilter the potential breaches endpoint:\n`/potential_breaches/?connected_pnt_id={content_pk}`",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PotentialBreach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PotentialBreach"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/potentialbreaches/{id}/": {
            "get": {
                "operationId": "threedimodels_potentialbreaches_read",
                "summary": "A simple ViewSet for viewing breaches",
                "description": "To get the potential breach from the geojson use the `content_pk` parameter to\nfilter the potential breaches endpoint:\n`/potential_breaches/?connected_pnt_id={content_pk}`",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/PotentialBreach"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this potential breach.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/rasters/": {
            "get": {
                "operationId": "threedimodels_rasters_list",
                "description": "View rasters for threedimodel",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "dem_file",
                            "dem_raw_file",
                            "equilibrium_infiltration_rate_file",
                            "frict_coef_file",
                            "initial_groundwater_level_file",
                            "initial_waterlevel_file",
                            "groundwater_hydro_connectivity_file",
                            "groundwater_impervious_layer_level_file",
                            "infiltration_decay_period_file",
                            "initial_infiltration_rate_file",
                            "leakage_file",
                            "phreatic_storage_capacity_file",
                            "hydraulic_conductivity_file",
                            "porosity_file",
                            "infiltration_rate_file",
                            "max_infiltration_capacity_file",
                            "interception_file",
                            "vegetation_height_file",
                            "vegetation_drag_coefficient_file",
                            "vegetation_stem_count_file",
                            "vegetation_stem_diameter_file",
                            "initial_concentration_file",
                            "initial_groundwater_concentration_file"
                        ]
                    },
                    {
                        "name": "type__iexact",
                        "in": "query",
                        "description": "type__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__contains",
                        "in": "query",
                        "description": "type__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__icontains",
                        "in": "query",
                        "description": "type__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__in",
                        "in": "query",
                        "description": "type__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__startswith",
                        "in": "query",
                        "description": "type__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__istartswith",
                        "in": "query",
                        "description": "type__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__endswith",
                        "in": "query",
                        "description": "type__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "type__regex",
                        "in": "query",
                        "description": "type__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__iexact",
                        "in": "query",
                        "description": "name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__contains",
                        "in": "query",
                        "description": "name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__icontains",
                        "in": "query",
                        "description": "name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__in",
                        "in": "query",
                        "description": "name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__startswith",
                        "in": "query",
                        "description": "name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__istartswith",
                        "in": "query",
                        "description": "name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__endswith",
                        "in": "query",
                        "description": "name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__regex",
                        "in": "query",
                        "description": "name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Raster"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_rasters_create",
                "description": "View rasters for threedimodel",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/rasters/{id}/": {
            "get": {
                "operationId": "threedimodels_rasters_read",
                "description": "View rasters for threedimodel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "threedimodels_rasters_update",
                "description": "View rasters for threedimodel",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "threedimodels_rasters_partial_update",
                "description": "View rasters for threedimodel",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Raster"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_rasters_delete",
                "description": "View rasters for threedimodel",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/rasters/{id}/download/": {
            "get": {
                "operationId": "threedimodels_rasters_download",
                "description": "Endpoint for downloading files.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Download"
                        }
                    },
                    "400": {
                        "description": "File is not uploaded yet or has been removed"
                    },
                    "404": {
                        "description": "File not found"
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/rasters/{id}/upload/": {
            "post": {
                "operationId": "threedimodels_rasters_upload",
                "description": "Endpoint for uploading a raster.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Upload"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this raster.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/saved_states/": {
            "get": {
                "operationId": "threedimodels_saved_states_list",
                "description": "View saved states created for this 3Di model",
                "parameters": [
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreediModelSavedState"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/saved_states/{id}/": {
            "get": {
                "operationId": "threedimodels_saved_states_read",
                "description": "View saved states created for this 3Di model",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModelSavedState"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_saved_states_delete",
                "description": "View saved states created for this 3Di model",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this saved state.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/tasks/": {
            "get": {
                "operationId": "threedimodels_tasks_list",
                "description": "View threedimodel tasks",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/ThreediModelTask"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "post": {
                "operationId": "threedimodels_tasks_create",
                "description": "View threedimodel tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/threedimodels/{threedimodel_pk}/tasks/{id}/": {
            "get": {
                "operationId": "threedimodels_tasks_read",
                "description": "View threedimodel tasks",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "put": {
                "operationId": "threedimodels_tasks_update",
                "description": "View threedimodel tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "patch": {
                "operationId": "threedimodels_tasks_partial_update",
                "description": "View threedimodel tasks",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ThreediModelTask"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "delete": {
                "operationId": "threedimodels_tasks_delete",
                "description": "View threedimodel tasks",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this threedi model task.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "threedimodel_pk",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ]
        },
        "/v3/usage/": {
            "get": {
                "operationId": "usage_list",
                "summary": "View to display overview of ran simulations.",
                "description": "Only displays finished/crashed simulations.",
                "parameters": [
                    {
                        "name": "started__gt",
                        "in": "query",
                        "description": "started__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__gte",
                        "in": "query",
                        "description": "started__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__lt",
                        "in": "query",
                        "description": "started__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__lte",
                        "in": "query",
                        "description": "started__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date",
                        "in": "query",
                        "description": "started__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__gt",
                        "in": "query",
                        "description": "started__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__gte",
                        "in": "query",
                        "description": "started__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__lt",
                        "in": "query",
                        "description": "started__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__lte",
                        "in": "query",
                        "description": "started__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year",
                        "in": "query",
                        "description": "started__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__gt",
                        "in": "query",
                        "description": "started__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__gte",
                        "in": "query",
                        "description": "started__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__lt",
                        "in": "query",
                        "description": "started__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__lte",
                        "in": "query",
                        "description": "started__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__month",
                        "in": "query",
                        "description": "started__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__month__lte",
                        "in": "query",
                        "description": "started__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__gt",
                        "in": "query",
                        "description": "finished__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__gte",
                        "in": "query",
                        "description": "finished__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__lt",
                        "in": "query",
                        "description": "finished__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__lte",
                        "in": "query",
                        "description": "finished__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date",
                        "in": "query",
                        "description": "finished__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__gt",
                        "in": "query",
                        "description": "finished__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__gte",
                        "in": "query",
                        "description": "finished__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__lt",
                        "in": "query",
                        "description": "finished__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__lte",
                        "in": "query",
                        "description": "finished__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year",
                        "in": "query",
                        "description": "finished__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__gt",
                        "in": "query",
                        "description": "finished__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__gte",
                        "in": "query",
                        "description": "finished__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__lt",
                        "in": "query",
                        "description": "finished__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__lte",
                        "in": "query",
                        "description": "finished__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__month",
                        "in": "query",
                        "description": "finished__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__month__lte",
                        "in": "query",
                        "description": "finished__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time",
                        "in": "query",
                        "description": "total_time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__gt",
                        "in": "query",
                        "description": "total_time__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__gte",
                        "in": "query",
                        "description": "total_time__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__lt",
                        "in": "query",
                        "description": "total_time__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__lte",
                        "in": "query",
                        "description": "total_time__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__isnull",
                        "in": "query",
                        "description": "total_time__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__id",
                        "in": "query",
                        "description": "simulation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name",
                        "in": "query",
                        "description": "simulation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__iexact",
                        "in": "query",
                        "description": "simulation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__contains",
                        "in": "query",
                        "description": "simulation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__icontains",
                        "in": "query",
                        "description": "simulation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__in",
                        "in": "query",
                        "description": "simulation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__startswith",
                        "in": "query",
                        "description": "simulation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__istartswith",
                        "in": "query",
                        "description": "simulation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__endswith",
                        "in": "query",
                        "description": "simulation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__regex",
                        "in": "query",
                        "description": "simulation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id",
                        "in": "query",
                        "description": "simulation__threedimodel__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__gt",
                        "in": "query",
                        "description": "simulation__threedimodel__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__gte",
                        "in": "query",
                        "description": "simulation__threedimodel__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__lt",
                        "in": "query",
                        "description": "simulation__threedimodel__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__lte",
                        "in": "query",
                        "description": "simulation__threedimodel__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__isnull",
                        "in": "query",
                        "description": "simulation__threedimodel__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name",
                        "in": "query",
                        "description": "simulation__threedimodel__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__iexact",
                        "in": "query",
                        "description": "simulation__threedimodel__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__contains",
                        "in": "query",
                        "description": "simulation__threedimodel__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__icontains",
                        "in": "query",
                        "description": "simulation__threedimodel__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__in",
                        "in": "query",
                        "description": "simulation__threedimodel__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__startswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__istartswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__endswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__regex",
                        "in": "query",
                        "description": "simulation__threedimodel__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username",
                        "in": "query",
                        "description": "simulation__user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__iexact",
                        "in": "query",
                        "description": "simulation__user__username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__contains",
                        "in": "query",
                        "description": "simulation__user__username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__icontains",
                        "in": "query",
                        "description": "simulation__user__username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__in",
                        "in": "query",
                        "description": "simulation__user__username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__startswith",
                        "in": "query",
                        "description": "simulation__user__username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__istartswith",
                        "in": "query",
                        "description": "simulation__user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__endswith",
                        "in": "query",
                        "description": "simulation__user__username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__regex",
                        "in": "query",
                        "description": "simulation__user__username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name",
                        "in": "query",
                        "description": "simulation__active_status__name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "created",
                            "starting",
                            "initialized",
                            "queued",
                            "ended",
                            "postprocessing",
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "simulation__active_status__name__iexact",
                        "in": "query",
                        "description": "simulation__active_status__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__contains",
                        "in": "query",
                        "description": "simulation__active_status__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__icontains",
                        "in": "query",
                        "description": "simulation__active_status__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__in",
                        "in": "query",
                        "description": "simulation__active_status__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__startswith",
                        "in": "query",
                        "description": "simulation__active_status__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__istartswith",
                        "in": "query",
                        "description": "simulation__active_status__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__endswith",
                        "in": "query",
                        "description": "simulation__active_status__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__regex",
                        "in": "query",
                        "description": "simulation__active_status__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__type__live",
                        "in": "query",
                        "description": "simulation__type__live",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__name__istartswith",
                        "in": "query",
                        "description": "simulation__organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__unique_id",
                        "in": "query",
                        "description": "simulation__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__status",
                        "in": "query",
                        "description": "simulation__active_status__name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "simulation__tags__in",
                        "in": "query",
                        "description": "simulation__tags__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Usage"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/usage/statistics/": {
            "get": {
                "operationId": "usage_statistics",
                "summary": "Usage statistics like total session count, average session\nduration and such.",
                "description": "This endpoint comes in handy if you want to aggregate usage\nnumber over a certain period of time, for a given user or organisation.\n\nIt is also possible to limit the result to a certain simulation type,\ne.g. to \"live\" sessions. Use the `simulation__type__live` filter with\neither `true` or `false` as input values.",
                "parameters": [
                    {
                        "name": "started__gt",
                        "in": "query",
                        "description": "started__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__gte",
                        "in": "query",
                        "description": "started__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__lt",
                        "in": "query",
                        "description": "started__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__lte",
                        "in": "query",
                        "description": "started__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date",
                        "in": "query",
                        "description": "started__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__gt",
                        "in": "query",
                        "description": "started__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__gte",
                        "in": "query",
                        "description": "started__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__lt",
                        "in": "query",
                        "description": "started__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__date__lte",
                        "in": "query",
                        "description": "started__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year",
                        "in": "query",
                        "description": "started__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__gt",
                        "in": "query",
                        "description": "started__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__gte",
                        "in": "query",
                        "description": "started__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__lt",
                        "in": "query",
                        "description": "started__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__year__lte",
                        "in": "query",
                        "description": "started__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__month",
                        "in": "query",
                        "description": "started__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "started__month__lte",
                        "in": "query",
                        "description": "started__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__gt",
                        "in": "query",
                        "description": "finished__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__gte",
                        "in": "query",
                        "description": "finished__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__lt",
                        "in": "query",
                        "description": "finished__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__lte",
                        "in": "query",
                        "description": "finished__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date",
                        "in": "query",
                        "description": "finished__date",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__gt",
                        "in": "query",
                        "description": "finished__date__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__gte",
                        "in": "query",
                        "description": "finished__date__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__lt",
                        "in": "query",
                        "description": "finished__date__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__date__lte",
                        "in": "query",
                        "description": "finished__date__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year",
                        "in": "query",
                        "description": "finished__year",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__gt",
                        "in": "query",
                        "description": "finished__year__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__gte",
                        "in": "query",
                        "description": "finished__year__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__lt",
                        "in": "query",
                        "description": "finished__year__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__year__lte",
                        "in": "query",
                        "description": "finished__year__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__month",
                        "in": "query",
                        "description": "finished__month",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "finished__month__lte",
                        "in": "query",
                        "description": "finished__month__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time",
                        "in": "query",
                        "description": "total_time",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__gt",
                        "in": "query",
                        "description": "total_time__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__gte",
                        "in": "query",
                        "description": "total_time__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__lt",
                        "in": "query",
                        "description": "total_time__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__lte",
                        "in": "query",
                        "description": "total_time__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "total_time__isnull",
                        "in": "query",
                        "description": "total_time__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__id",
                        "in": "query",
                        "description": "simulation__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name",
                        "in": "query",
                        "description": "simulation__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__iexact",
                        "in": "query",
                        "description": "simulation__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__contains",
                        "in": "query",
                        "description": "simulation__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__icontains",
                        "in": "query",
                        "description": "simulation__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__in",
                        "in": "query",
                        "description": "simulation__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__startswith",
                        "in": "query",
                        "description": "simulation__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__istartswith",
                        "in": "query",
                        "description": "simulation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__endswith",
                        "in": "query",
                        "description": "simulation__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__name__regex",
                        "in": "query",
                        "description": "simulation__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id",
                        "in": "query",
                        "description": "simulation__threedimodel__id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__gt",
                        "in": "query",
                        "description": "simulation__threedimodel__id__gt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__gte",
                        "in": "query",
                        "description": "simulation__threedimodel__id__gte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__lt",
                        "in": "query",
                        "description": "simulation__threedimodel__id__lt",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__lte",
                        "in": "query",
                        "description": "simulation__threedimodel__id__lte",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__id__isnull",
                        "in": "query",
                        "description": "simulation__threedimodel__id__isnull",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name",
                        "in": "query",
                        "description": "simulation__threedimodel__name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__iexact",
                        "in": "query",
                        "description": "simulation__threedimodel__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__contains",
                        "in": "query",
                        "description": "simulation__threedimodel__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__icontains",
                        "in": "query",
                        "description": "simulation__threedimodel__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__in",
                        "in": "query",
                        "description": "simulation__threedimodel__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__startswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__istartswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__endswith",
                        "in": "query",
                        "description": "simulation__threedimodel__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__threedimodel__name__regex",
                        "in": "query",
                        "description": "simulation__threedimodel__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username",
                        "in": "query",
                        "description": "simulation__user__username",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__iexact",
                        "in": "query",
                        "description": "simulation__user__username__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__contains",
                        "in": "query",
                        "description": "simulation__user__username__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__icontains",
                        "in": "query",
                        "description": "simulation__user__username__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__in",
                        "in": "query",
                        "description": "simulation__user__username__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__startswith",
                        "in": "query",
                        "description": "simulation__user__username__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__istartswith",
                        "in": "query",
                        "description": "simulation__user__username__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__endswith",
                        "in": "query",
                        "description": "simulation__user__username__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__user__username__regex",
                        "in": "query",
                        "description": "simulation__user__username__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name",
                        "in": "query",
                        "description": "simulation__active_status__name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "created",
                            "starting",
                            "initialized",
                            "queued",
                            "ended",
                            "postprocessing",
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "simulation__active_status__name__iexact",
                        "in": "query",
                        "description": "simulation__active_status__name__iexact",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__contains",
                        "in": "query",
                        "description": "simulation__active_status__name__contains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__icontains",
                        "in": "query",
                        "description": "simulation__active_status__name__icontains",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__in",
                        "in": "query",
                        "description": "simulation__active_status__name__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__startswith",
                        "in": "query",
                        "description": "simulation__active_status__name__startswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__istartswith",
                        "in": "query",
                        "description": "simulation__active_status__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__endswith",
                        "in": "query",
                        "description": "simulation__active_status__name__endswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__active_status__name__regex",
                        "in": "query",
                        "description": "simulation__active_status__name__regex",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__type__live",
                        "in": "query",
                        "description": "simulation__type__live",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__name__istartswith",
                        "in": "query",
                        "description": "simulation__organisation__name__istartswith",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__organisation__unique_id",
                        "in": "query",
                        "description": "simulation__organisation__unique_id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "simulation__status",
                        "in": "query",
                        "description": "simulation__active_status__name",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "finished",
                            "crashed"
                        ]
                    },
                    {
                        "name": "simulation__tags__in",
                        "in": "query",
                        "description": "simulation__tags__in",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UsageStatistics"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": []
        },
        "/v3/usage/{id}/": {
            "get": {
                "operationId": "usage_read",
                "summary": "View to display overview of ran simulations.",
                "description": "Only displays finished/crashed simulations.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/Usage"
                        }
                    }
                },
                "tags": [
                    "v3"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this usage.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "AddUser": {
            "required": [
                "username",
                "email",
                "external_user_id"
            ],
            "type": "object",
            "properties": {
                "user_id": {
                    "title": "User id",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                },
                "external_user_id": {
                    "title": "External user id",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "PersonalAPIKey": {
            "required": [
                "scope",
                "name"
            ],
            "type": "object",
            "properties": {
                "prefix": {
                    "title": "Prefix",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "scope": {
                    "title": "Scope",
                    "description": "A space-separated list of scopes (options: basic simulate create lizardrain lizardprocess manageusers managecontracts test livesite waterquality). Alternatively, use '*:readwrite' for all scopes.",
                    "type": "string",
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "description": "A free-form name for the API key. Need not be unique. 50 characters max.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expiry_date": {
                    "title": "Expires",
                    "description": "Once API key expires, clients cannot use it anymore.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "revoked": {
                    "title": "Revoked",
                    "description": "If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)",
                    "type": "boolean"
                },
                "last_used": {
                    "title": "Last used",
                    "description": "Last time the API key was used.",
                    "type": "string",
                    "format": "date",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "PersonalAPIKeyWithSecret": {
            "required": [
                "scope",
                "name"
            ],
            "type": "object",
            "properties": {
                "prefix": {
                    "title": "Prefix",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "scope": {
                    "title": "Scope",
                    "description": "A space-separated list of scopes (options: basic simulate create lizardrain lizardprocess manageusers managecontracts test livesite waterquality). Alternatively, use '*:readwrite' for all scopes.",
                    "type": "string",
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "description": "A free-form name for the API key. Need not be unique. 50 characters max.",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                },
                "expiry_date": {
                    "title": "Expires",
                    "description": "Once API key expires, clients cannot use it anymore.",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "revoked": {
                    "title": "Revoked",
                    "description": "If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)",
                    "type": "boolean"
                },
                "last_used": {
                    "title": "Last used",
                    "description": "Last time the API key was used.",
                    "type": "string",
                    "format": "date",
                    "readOnly": true,
                    "x-nullable": true
                },
                "key": {
                    "title": "Key",
                    "description": "The API key. Please store the key somewhere safe, you will not be able to see it again.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "message": {
                    "title": "Message",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "Simulation": {
            "required": [
                "name",
                "threedimodel",
                "organisation",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "slug": {
                    "title": "Slug",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "readOnly": true,
                    "minLength": 1
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel": {
                    "title": "Threedimodel.id",
                    "type": "string",
                    "format": "uri",
                    "description": "The id of a threedimodel"
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "organisation_name": {
                    "title": "Organisation name",
                    "type": "string",
                    "readOnly": true
                },
                "user": {
                    "title": "User.username",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "readOnly": true,
                    "description": "The username of a user"
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "end_datetime": {
                    "title": "End datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer"
                },
                "duration_humanized": {
                    "title": "Duration humanized",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel_id": {
                    "title": "Threedimodel id",
                    "type": "integer",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "threedicore_version": {
                    "title": "Threedicore version",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "cloned_from": {
                    "title": "Cloned from",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "compute_cluster": {
                    "title": "ComputeCluster.name",
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the compute cluster that runs/has run the simulation."
                },
                "started_from": {
                    "title": "Started from",
                    "type": "string",
                    "enum": [
                        "",
                        "3Di Live",
                        "3Di Modeller Interface"
                    ]
                }
            }
        },
        "Template": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "simulation": {
                    "$ref": "#/definitions/Simulation"
                }
            }
        },
        "ObstacleEdit": {
            "required": [
                "offset",
                "value",
                "linestring"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "value": {
                    "title": "Value",
                    "description": "Absolute or relative height (in meters)  to use for the linestring",
                    "type": "number"
                },
                "linestring": {
                    "title": "Linestring",
                    "type": "object",
                    "description": "Linestring (epsg:4326) specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'linestring' or 'LINESTRING'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of coordinates. (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "BaseEventState": {
            "required": [
                "state",
                "state_detail"
            ],
            "type": "object",
            "properties": {
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ]
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object"
                }
            }
        },
        "RasterEditUrls": {
            "required": [
                "raster_type",
                "url"
            ],
            "type": "object",
            "properties": {
                "raster_type": {
                    "title": "Raster type",
                    "type": "string",
                    "minLength": 1
                },
                "url": {
                    "title": "Url",
                    "type": "string"
                }
            }
        },
        "OneDSubstanceConcentration": {
            "required": [
                "substance",
                "initial_concentration"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "substance": {
                    "title": "Substance",
                    "type": "string",
                    "format": "uri"
                },
                "substance_id": {
                    "title": "Substance id",
                    "type": "integer",
                    "readOnly": true
                },
                "substance_name": {
                    "title": "Substance name",
                    "type": "string",
                    "readOnly": true
                },
                "initial_concentration": {
                    "title": "Initial concentration",
                    "type": "string",
                    "format": "uri"
                },
                "initial_concentration_id": {
                    "title": "Initial concentration id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TwoDSubstanceConcentration": {
            "required": [
                "substance",
                "initial_concentration",
                "aggregation_method"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "substance": {
                    "title": "Substance",
                    "type": "string",
                    "format": "uri"
                },
                "substance_id": {
                    "title": "Substance id",
                    "type": "integer",
                    "readOnly": true
                },
                "substance_name": {
                    "title": "Substance name",
                    "type": "string",
                    "readOnly": true
                },
                "initial_concentration": {
                    "title": "Initial concentration",
                    "type": "string",
                    "format": "uri"
                },
                "initial_concentration_id": {
                    "title": "Initial concentration id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "aggregation_method": {
                    "title": "Aggregation method",
                    "type": "string",
                    "enum": [
                        "mean",
                        "max",
                        "min"
                    ]
                }
            }
        },
        "GroundWaterSubstanceConcentration": {
            "required": [
                "substance",
                "initial_concentration",
                "aggregation_method"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "substance": {
                    "title": "Substance",
                    "type": "string",
                    "format": "uri"
                },
                "substance_id": {
                    "title": "Substance id",
                    "type": "integer",
                    "readOnly": true
                },
                "substance_name": {
                    "title": "Substance name",
                    "type": "string",
                    "readOnly": true
                },
                "initial_concentration": {
                    "title": "Initial concentration",
                    "type": "string",
                    "format": "uri"
                },
                "initial_concentration_id": {
                    "title": "Initial concentration id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "aggregation_method": {
                    "title": "Aggregation method",
                    "type": "string",
                    "enum": [
                        "mean",
                        "max",
                        "min"
                    ]
                }
            }
        },
        "Substance": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "diffusion_coefficient": {
                    "title": "Diffusion coefficient",
                    "description": "The diffusion coefficient (m2/s) for the substance.",
                    "type": "number",
                    "maximum": 1.0,
                    "minimum": 0.0
                },
                "growth_coefficient": {
                    "title": "Growth coefficient",
                    "description": "The growth coefficient for the substance.",
                    "type": "number",
                    "minimum": 0.0
                },
                "decay_coefficient": {
                    "title": "Decay coefficient",
                    "description": "The decay coefficient for the substance.",
                    "type": "number",
                    "minimum": 0.0
                },
                "numerical_diffusion_limiter": {
                    "title": "Numerical diffusion limiter",
                    "description": "The numerical diffusion limiter for the substance. \n Options: \n0 = off\n1 = standard\n",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "units": {
                    "title": "Units",
                    "description": "The units of the substance.",
                    "type": "string",
                    "maxLength": 16
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                }
            }
        },
        "Status": {
            "type": "object",
            "properties": {
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "CurrentVersion": {
            "type": "object",
            "properties": {
                "threedi_version": {
                    "title": "Threedi version",
                    "type": "string",
                    "readOnly": true
                },
                "threedicore_version": {
                    "title": "Threedicore version",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "FileReadOnly": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "created",
                        "uploaded",
                        "processed",
                        "error",
                        "removed"
                    ],
                    "readOnly": true
                },
                "state_description": {
                    "title": "State description",
                    "type": "string",
                    "maxLength": 512,
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "timeseries",
                        "rastertimeseries",
                        "savedstate",
                        "results",
                        "rasters",
                        "gridadmin",
                        "geopackage",
                        "geojson",
                        "initialwaterlevel",
                        "initial_substance_concentration",
                        "bulklateral",
                        "bulkcontrol",
                        "bulk_boundaryconditions",
                        "sqlite",
                        "tables"
                    ],
                    "readOnly": true
                },
                "size": {
                    "title": "Size",
                    "description": "Filesize in bytes",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "etag": {
                    "title": "Etag",
                    "description": "Optional eTag (md5sum)",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "expiry_date": {
                    "title": "Expiry date",
                    "type": "string",
                    "format": "date",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "meta": {
                    "title": "Meta",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "InitialConcentration": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "user_generated": {
                    "title": "User generated",
                    "type": "boolean"
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "source_raster": {
                    "title": "Source raster",
                    "type": "string",
                    "format": "uri"
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "source_raster_id": {
                    "title": "Source raster id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "dimension": {
                    "title": "Dimension",
                    "type": "string",
                    "enum": [
                        "one_d",
                        "two_d"
                    ]
                }
            }
        },
        "Download": {
            "type": "object",
            "properties": {
                "get_url": {
                    "title": "Get url",
                    "type": "string",
                    "readOnly": true
                },
                "is_internal": {
                    "title": "Is internal",
                    "type": "boolean",
                    "default": true
                },
                "etag": {
                    "title": "Etag",
                    "description": "Optional eTag (md5sum)",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1,
                    "x-nullable": true
                },
                "size": {
                    "title": "Size",
                    "description": "Filesize in bytes",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "Upload": {
            "required": [
                "filename"
            ],
            "type": "object",
            "properties": {
                "put_url": {
                    "title": "Put url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "minLength": 1
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "User": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                }
            }
        },
        "Refresh": {
            "required": [
                "refresh"
            ],
            "type": "object",
            "properties": {
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                },
                "access": {
                    "title": "Access",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "Tokens": {
            "type": "object",
            "properties": {
                "access": {
                    "title": "Access",
                    "type": "string",
                    "minLength": 1
                },
                "refresh": {
                    "title": "Refresh",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "Authenticate": {
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "UserTokens": {
            "required": [
                "user",
                "external_user_id"
            ],
            "type": "object",
            "properties": {
                "user": {
                    "title": "User",
                    "type": "integer"
                },
                "external_user_id": {
                    "title": "External user id",
                    "description": "The user ID in the external identity provider, which is present as the 'sub' field in tokens.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_modified": {
                    "title": "Last modified",
                    "description": "The last time this remote user logged in.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "id_token": {
                    "title": "Id token",
                    "description": "The most recent ID token provided by the external identity provider.",
                    "type": "string"
                },
                "access_token": {
                    "title": "Access token",
                    "description": "The most recent access token provided by the external identity provider.",
                    "type": "string"
                },
                "refresh_token": {
                    "title": "Refresh token",
                    "description": "The most recent refresh token provided by the external identity provider.",
                    "type": "string"
                }
            }
        },
        "Contract": {
            "required": [
                "organisation",
                "hours_bought",
                "session_limit",
                "created_by"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "organisation_name": {
                    "title": "Organisation name",
                    "type": "string",
                    "readOnly": true
                },
                "scope": {
                    "title": "Scope",
                    "description": "A space-separated list of scopes (options: basic simulate create lizardrain lizardprocess manageusers managecontracts test livesite waterquality)",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "start_date": {
                    "title": "Start date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "hours_bought": {
                    "title": "Hours bought",
                    "type": "integer"
                },
                "hours_used": {
                    "title": "Hours used",
                    "type": "number",
                    "format": "decimal",
                    "readOnly": true
                },
                "session_limit": {
                    "title": "Session limit",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "current_sessions": {
                    "title": "Current sessions",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel_limit": {
                    "title": "Threedimodel limit",
                    "description": "Maximum amount of ThreediModels per Organisation",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                },
                "created_by": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "lizard_post_processing_organisation_unique_id": {
                    "title": "Lizard post processing organisation unique id",
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                }
            }
        },
        "File": {
            "required": [
                "filename",
                "bucket",
                "type",
                "state"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "storage_name": {
                    "title": "Storage name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "bucket": {
                    "title": "Bucket",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "prefix": {
                    "title": "Prefix",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "etag": {
                    "title": "Etag",
                    "description": "Optional eTag (md5sum)",
                    "type": "string",
                    "maxLength": 256,
                    "x-nullable": true
                },
                "size": {
                    "title": "Size",
                    "description": "Filesize in bytes",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "expiry_date": {
                    "title": "Expiry date",
                    "type": "string",
                    "format": "date"
                },
                "related_object": {
                    "title": "Related object",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "timeseries",
                        "rastertimeseries",
                        "savedstate",
                        "results",
                        "rasters",
                        "gridadmin",
                        "geopackage",
                        "geojson",
                        "initialwaterlevel",
                        "initial_substance_concentration",
                        "bulklateral",
                        "bulkcontrol",
                        "bulk_boundaryconditions",
                        "sqlite",
                        "tables"
                    ]
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "created",
                        "uploaded",
                        "processed",
                        "error",
                        "removed"
                    ]
                },
                "state_description": {
                    "title": "State description",
                    "type": "string",
                    "maxLength": 512,
                    "x-nullable": true
                },
                "meta": {
                    "title": "Meta",
                    "type": "object",
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "FileMeta": {
            "type": "object",
            "properties": {
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                },
                "timestamps": {
                    "description": "seconds in the simulation",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "minimum": 0
                    }
                },
                "offset": {
                    "title": "Offset",
                    "description": "seconds in the simulation",
                    "type": "integer",
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration",
                    "description": "seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer"
                },
                "interval": {
                    "title": "Interval",
                    "type": "integer"
                },
                "error": {
                    "title": "Error",
                    "type": "string",
                    "maxLength": 512,
                    "minLength": 1
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                }
            }
        },
        "InpyVersion": {
            "required": [
                "threedi_version",
                "threedicore_version"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "threedi_version": {
                    "title": "Threedi version",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "threedicore_version": {
                    "title": "Threedicore version",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "slug": {
                    "title": "Slug",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "active": {
                    "title": "Active",
                    "type": "boolean"
                }
            }
        },
        "settings": {
            "required": [
                "organisation"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "organisation_name": {
                    "title": "Organisation name",
                    "type": "string",
                    "readOnly": true
                },
                "historical_rain_radar_uuids": {
                    "description": "List of historical rain radar UUIDs",
                    "type": "array",
                    "items": {
                        "title": "Historical rain radar uuids",
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "forecast_rain_radar_uuids": {
                    "description": "List of forecast rain radar UUIDs",
                    "type": "array",
                    "items": {
                        "title": "Forecast rain radar uuids",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            }
        },
        "OrganisationSettings": {
            "type": "object",
            "properties": {
                "historical_rain_radar_uuids": {
                    "title": "Historical rain radar uuids",
                    "type": "string",
                    "readOnly": true
                },
                "forecast_rain_radar_uuids": {
                    "title": "Forecast rain radar uuids",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Organisation": {
            "required": [
                "unique_id",
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "unique_id": {
                    "title": "Unique id",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "settings": {
                    "$ref": "#/definitions/OrganisationSettings"
                }
            }
        },
        "OrganisationRole": {
            "required": [
                "user",
                "role",
                "organisation"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "user": {
                    "title": "User.username",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "description": "The username of a user"
                },
                "role": {
                    "title": "Role",
                    "type": "string"
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "organisation_name": {
                    "title": "Organisation name",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "OrganisationUser": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "first_name": {
                    "title": "First name",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "Last name",
                    "type": "string",
                    "maxLength": 150
                },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "email": {
                    "title": "Email address",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254
                },
                "roles": {
                    "description": "Return a list of roles of the given user in this organisation.",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1
                    },
                    "readOnly": true
                }
            }
        },
        "OrganisationUserRolePatch": {
            "required": [
                "roles"
            ],
            "type": "object",
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Repository": {
            "required": [
                "slug"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "slug": {
                    "title": "Slug",
                    "description": "do not change",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 255,
                    "minLength": 1
                },
                "revision": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "uniqueItems": true
                }
            }
        },
        "Revision": {
            "required": [
                "repository"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "repository": {
                    "title": "Repository",
                    "type": "string",
                    "format": "uri"
                },
                "number": {
                    "title": "Number",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "hash": {
                    "title": "Hash",
                    "description": "unique identifier for changeset",
                    "type": "string",
                    "maxLength": 200,
                    "x-nullable": true
                },
                "commit_date": {
                    "title": "Commit date",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "user": {
                    "title": "User",
                    "description": "user that committed the changeset for this revision",
                    "type": "string",
                    "maxLength": 128,
                    "x-nullable": true
                },
                "is_pinned": {
                    "title": "Is pinned",
                    "type": "boolean",
                    "x-nullable": true
                }
            }
        },
        "ThreediModel": {
            "required": [
                "revision",
                "slug",
                "inpy_version"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "title": "User.username",
                    "type": "string",
                    "readOnly": true,
                    "description": "The username of a user"
                },
                "threedi_version": {
                    "title": "Threedi version",
                    "description": "The 3Di API version that created this threedimodel.",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1,
                    "x-nullable": true
                },
                "breach_count": {
                    "title": "Breach count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "revision": {
                    "title": "Revision",
                    "type": "string",
                    "format": "uri"
                },
                "revision_id": {
                    "title": "Revision id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "revision_hash": {
                    "title": "Revision hash",
                    "type": "string",
                    "readOnly": true
                },
                "revision_number": {
                    "title": "Revision number",
                    "type": "string",
                    "readOnly": true
                },
                "revision_commit_date": {
                    "title": "Revision commit date",
                    "type": "string",
                    "readOnly": true
                },
                "schematisation_id": {
                    "title": "Schematisation id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "schematisation_name": {
                    "title": "Schematisation name",
                    "type": "string",
                    "readOnly": true
                },
                "repository_slug": {
                    "title": "Repository slug",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "slug": {
                    "title": "Slug",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 512,
                    "minLength": 1
                },
                "disabled": {
                    "title": "Disabled",
                    "description": "Disable the model.",
                    "type": "boolean"
                },
                "is_valid": {
                    "title": "Is valid",
                    "description": "True if the threedimodel was generated without errors.",
                    "type": "boolean",
                    "x-nullable": true
                },
                "epsg": {
                    "title": "Epsg",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "description": {
                    "title": "Description",
                    "description": "Please describe the model here...",
                    "type": "string",
                    "x-nullable": true
                },
                "storage_space": {
                    "title": "Storage space",
                    "description": "Automatically filled after threedimodel generation.",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808
                },
                "storage_space_humanized": {
                    "title": "Storage space humanized",
                    "type": "string",
                    "readOnly": true
                },
                "model_ini": {
                    "title": "Model ini",
                    "type": "string",
                    "maxLength": 512,
                    "x-nullable": true
                },
                "extent_two_d": {
                    "title": "Extent",
                    "type": "object",
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "extent_one_d": {
                    "title": "Extent",
                    "type": "object",
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "extent_zero_d": {
                    "title": "Extent",
                    "type": "object",
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "nodes_count": {
                    "title": "Nodes count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "lines_count": {
                    "title": "Lines count",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "inpy_version": {
                    "title": "Inpy version",
                    "type": "string"
                },
                "inp_success": {
                    "title": "Inp success",
                    "type": "boolean"
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "Role": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "Schematisation": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "owner": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "description": "The unique_id of an organisation"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "slug": {
                    "title": "Slug",
                    "description": "The internal name (only superusers can modify)",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "maxLength": 256,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "meta": {
                    "title": "Meta",
                    "type": "object",
                    "x-nullable": true
                },
                "created_by": {
                    "title": "User.username",
                    "description": "The username of a user",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$"
                },
                "created_by_first_name": {
                    "title": "Created by first name",
                    "type": "string",
                    "readOnly": true
                },
                "created_by_last_name": {
                    "title": "Created by last name",
                    "type": "string",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "description": "The creation date and time (only superusers can modify)",
                    "type": "string",
                    "format": "date-time"
                },
                "archived": {
                    "title": "Archived",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "last_updated": {
                    "title": "Last updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "storage_usage": {
                    "title": "Storage usage",
                    "description": "Automatically calculated.",
                    "type": "integer",
                    "readOnly": true
                },
                "threedimodel_limit": {
                    "title": "Threedimodel limit",
                    "description": "Maximum amount of ThreediModels per Schematisation",
                    "type": "integer",
                    "maximum": 32767,
                    "minimum": 0
                }
            }
        },
        "Sqlite": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "revision_id": {
                    "title": "Revision id",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "RevisionRaster": {
            "required": [
                "type",
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "dem_file",
                        "equilibrium_infiltration_rate_file",
                        "frict_coef_file",
                        "initial_groundwater_level_file",
                        "initial_waterlevel_file",
                        "groundwater_hydro_connectivity_file",
                        "groundwater_impervious_layer_level_file",
                        "infiltration_decay_period_file",
                        "initial_infiltration_rate_file",
                        "leakage_file",
                        "phreatic_storage_capacity_file",
                        "hydraulic_conductivity_file",
                        "porosity_file",
                        "infiltration_rate_file",
                        "max_infiltration_capacity_file",
                        "interception_file",
                        "vegetation_height_file",
                        "vegetation_drag_coefficient_file",
                        "vegetation_stem_count_file",
                        "vegetation_stem_diameter_file",
                        "initial_groundwater_concentration_file"
                    ]
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "extent": {
                    "title": "Extent",
                    "type": "object",
                    "readOnly": true,
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "readOnly": true,
                    "x-nullable": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "enum": [
                        "meters"
                    ],
                    "x-nullable": true
                }
            }
        },
        "SchematisationRevision": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "schematisation": {
                    "title": "Schematisation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "schematisation_id": {
                    "title": "Schematisation id",
                    "type": "integer",
                    "readOnly": true
                },
                "number": {
                    "title": "Number",
                    "type": "integer",
                    "readOnly": true
                },
                "sqlite": {
                    "$ref": "#/definitions/Sqlite"
                },
                "rasters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RevisionRaster"
                    },
                    "readOnly": true
                },
                "archived": {
                    "title": "Archived",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "commit_date": {
                    "title": "Commit date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "commit_user": {
                    "title": "User.username",
                    "description": "The username of a user",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "readOnly": true
                },
                "commit_first_name": {
                    "title": "Commit first name",
                    "type": "string",
                    "readOnly": true
                },
                "commit_last_name": {
                    "title": "Commit last name",
                    "type": "string",
                    "readOnly": true
                },
                "commit_message": {
                    "title": "Commit message",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1,
                    "x-nullable": true
                },
                "is_valid": {
                    "title": "Is valid",
                    "type": "boolean",
                    "readOnly": true,
                    "x-nullable": true
                },
                "has_threedimodel": {
                    "title": "Has threedimodel",
                    "type": "boolean",
                    "readOnly": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                }
            }
        },
        "CreateRevision": {
            "type": "object",
            "properties": {
                "empty": {
                    "title": "Empty",
                    "description": "Create an empty revision",
                    "type": "boolean",
                    "default": false
                },
                "number": {
                    "title": "Number",
                    "description": "An optional revision number (only superusers can modify)",
                    "type": "integer"
                },
                "created": {
                    "title": "Created",
                    "description": "An optional creation datetime (only superusers can modify)",
                    "type": "string",
                    "format": "date-time"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                }
            }
        },
        "UpdateRevision": {
            "type": "object",
            "properties": {
                "commit_message": {
                    "title": "Commit message",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                }
            }
        },
        "DestroyRevision": {
            "required": [
                "number"
            ],
            "type": "object",
            "properties": {
                "number": {
                    "title": "Number",
                    "description": "Provide revision number as verification",
                    "type": "integer"
                }
            }
        },
        "RevisionTask": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "enum": [
                        "modelchecker"
                    ]
                },
                "params": {
                    "title": "Params",
                    "type": "object",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_updated": {
                    "title": "Last updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "pending",
                        "sent",
                        "received",
                        "started",
                        "success",
                        "failure",
                        "revoked"
                    ]
                },
                "detail": {
                    "title": "Detail",
                    "type": "object"
                },
                "revision": {
                    "title": "Revision",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Commit": {
            "type": "object",
            "properties": {
                "commit_message": {
                    "title": "Commit message",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "force_as": {
                    "title": "Force as",
                    "type": "string",
                    "enum": [
                        "default",
                        "new_revision",
                        "new_schematisation"
                    ]
                },
                "schematisation_name": {
                    "title": "Schematisation name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "commit_date": {
                    "title": "Commit date",
                    "description": "The datetime of the commit (only superusers can modify)",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "commit_user": {
                    "title": "User.username",
                    "description": "The username of a user",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$"
                },
                "user": {
                    "title": "User",
                    "description": "User that committed the revision on models.lizard.net (only superusers can modify)",
                    "type": "string",
                    "maxLength": 128,
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                }
            }
        },
        "CreateThreedimodel": {
            "type": "object",
            "properties": {
                "inherit_from_previous_threedimodel": {
                    "title": "Inherit from previous threedimodel",
                    "description": "Try to inherit simulation templates from previous threedimodel (in case of regenerate)",
                    "type": "boolean",
                    "default": true
                },
                "inherit_from_previous_revision": {
                    "title": "Inherit from previous revision",
                    "description": "Try to inherit simulation templates from previous revision",
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "SqliteFileUpload": {
            "required": [
                "filename"
            ],
            "type": "object",
            "properties": {
                "put_url": {
                    "title": "Put url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "minLength": 1
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "md5sum": {
                    "title": "md5sum (hash) of the (compressed) sqlite file",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "RasterCreate": {
            "required": [
                "type",
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "dem_file",
                        "equilibrium_infiltration_rate_file",
                        "frict_coef_file",
                        "initial_groundwater_level_file",
                        "initial_waterlevel_file",
                        "groundwater_hydro_connectivity_file",
                        "groundwater_impervious_layer_level_file",
                        "infiltration_decay_period_file",
                        "initial_infiltration_rate_file",
                        "leakage_file",
                        "phreatic_storage_capacity_file",
                        "hydraulic_conductivity_file",
                        "porosity_file",
                        "infiltration_rate_file",
                        "max_infiltration_capacity_file",
                        "interception_file",
                        "vegetation_height_file",
                        "vegetation_drag_coefficient_file",
                        "vegetation_stem_count_file",
                        "vegetation_stem_diameter_file",
                        "initial_groundwater_concentration_file"
                    ]
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "extent": {
                    "title": "Extent",
                    "type": "object",
                    "readOnly": true,
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "readOnly": true,
                    "x-nullable": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "enum": [
                        "meters"
                    ],
                    "x-nullable": true
                },
                "md5sum": {
                    "title": "md5sum (hash) of the geotiff file",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            }
        },
        "CreateTemplate": {
            "required": [
                "name",
                "simulation"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri"
                },
                "include_events": {
                    "title": "Include events",
                    "type": "boolean",
                    "default": true
                },
                "include_initials": {
                    "title": "Include initials",
                    "type": "boolean",
                    "default": true
                },
                "include_settings": {
                    "title": "Include settings",
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "UpdateTemplate": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "FromTemplate": {
            "required": [
                "template",
                "name",
                "organisation",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "template": {
                    "title": "Template",
                    "description": "source simulation template id",
                    "type": "string",
                    "format": "uri"
                },
                "threedimodel": {
                    "title": "Threedimodel.id",
                    "description": "The id of a threedimodel",
                    "type": "string",
                    "format": "uri"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    }
                },
                "organisation": {
                    "title": "Organisation",
                    "type": "string",
                    "minLength": 1
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "end_datetime": {
                    "title": "End datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer"
                },
                "clone_events": {
                    "title": "Clone events",
                    "type": "boolean",
                    "default": true
                },
                "clone_initials": {
                    "title": "Clone initials",
                    "type": "boolean",
                    "default": true
                },
                "clone_settings": {
                    "title": "Clone settings",
                    "type": "boolean",
                    "default": true
                },
                "started_from": {
                    "title": "Started from",
                    "type": "string"
                }
            }
        },
        "PostProcessingQueue": {
            "required": [
                "simulation",
                "status"
            ],
            "type": "object",
            "properties": {
                "simulation": {
                    "title": "Simulation",
                    "type": "integer"
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "created",
                        "requested",
                        "archiving",
                        "archiving_failed",
                        "archived"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "SimulationUpdate": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "slug": {
                    "title": "Slug",
                    "type": "string",
                    "format": "slug",
                    "pattern": "^[-a-zA-Z0-9_]+$",
                    "readOnly": true,
                    "minLength": 1
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel": {
                    "title": "Threedimodel.id",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "description": "The id of a threedimodel"
                },
                "organisation": {
                    "title": "Organisation.unique_id",
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique_id of an organisation"
                },
                "organisation_name": {
                    "title": "Organisation name",
                    "type": "string",
                    "readOnly": true
                },
                "user": {
                    "title": "User.username",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "readOnly": true,
                    "description": "The username of a user"
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "end_datetime": {
                    "title": "End datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer"
                },
                "duration_humanized": {
                    "title": "Duration humanized",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel_id": {
                    "title": "Threedimodel id",
                    "type": "integer",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "threedicore_version": {
                    "title": "Threedicore version",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "x-nullable": true
                },
                "cloned_from": {
                    "title": "Cloned from",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "compute_cluster": {
                    "title": "ComputeCluster.name",
                    "type": "string",
                    "readOnly": true,
                    "description": "The name of the compute cluster that runs/has run the simulation."
                },
                "started_from": {
                    "title": "Started from",
                    "type": "string",
                    "enum": [
                        "",
                        "3Di Live",
                        "3Di Modeller Interface"
                    ]
                }
            }
        },
        "ForcingSubstance": {
            "required": [
                "substance",
                "concentrations"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substance": {
                    "title": "Substance",
                    "type": "string",
                    "format": "uri"
                },
                "substance_id": {
                    "title": "Substance id",
                    "type": "integer",
                    "readOnly": true
                },
                "substance_name": {
                    "title": "Substance name",
                    "type": "string",
                    "readOnly": true
                },
                "concentrations": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                }
            }
        },
        "LizardRasterRain": {
            "required": [
                "offset",
                "reference_uuid",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm/duration",
                        "mm/h",
                        "m/s"
                    ]
                },
                "reference_uuid": {
                    "title": "Reference uuid",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number",
                    "default": 1.0
                },
                "interval": {
                    "title": "Interval",
                    "type": "integer",
                    "readOnly": true
                },
                "user": {
                    "title": "User",
                    "type": "string",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User id",
                    "type": "integer",
                    "readOnly": true
                },
                "origin_offset": {
                    "title": "Origin offset",
                    "type": "integer",
                    "readOnly": true
                },
                "store_path": {
                    "title": "Store path",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "LizardTimeseriesRain": {
            "required": [
                "offset",
                "duration",
                "reference_uuid",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "reference_uuid": {
                    "title": "Reference uuid",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "readOnly": true,
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm/duration",
                        "mm/h",
                        "m/s"
                    ]
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "ForcingSubstanceWithZone": {
            "required": [
                "substance",
                "concentrations"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substance": {
                    "title": "Substance",
                    "type": "string",
                    "format": "uri"
                },
                "substance_id": {
                    "title": "Substance id",
                    "type": "integer",
                    "readOnly": true
                },
                "substance_name": {
                    "title": "Substance name",
                    "type": "string",
                    "readOnly": true
                },
                "concentrations": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "zone": {
                    "title": "Polygon",
                    "type": "object",
                    "description": "Polygon specified in wkt or geojson, interior rings are not allowed. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Polygon'",
                            "type": "string",
                            "default": "Polygon"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of coordinates (longitude, latitude order) in SRID 4326.",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    },
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 3
                            },
                            "minItems": 1,
                            "maxItems": 1
                        }
                    },
                    "example": {
                        "type": "Polygon",
                        "coordinates": [
                            [
                                [
                                    4.695281,
                                    52.656047
                                ],
                                [
                                    4.683754,
                                    52.655824
                                ],
                                [
                                    4.683253,
                                    52.639063
                                ],
                                [
                                    4.695281,
                                    52.656047
                                ]
                            ]
                        ]
                    }
                }
            }
        },
        "TimeseriesRainOverview": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "constant": {
                    "title": "Constant",
                    "type": "boolean",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "Breach": {
            "required": [
                "duration_till_max_depth",
                "initial_width",
                "offset"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "potential_breach": {
                    "title": "Potential breach",
                    "type": "string",
                    "format": "uri"
                },
                "line_id": {
                    "title": "Line id",
                    "description": "The id of the flowline ('levl' in the geojson)",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration_till_max_depth": {
                    "title": "Duration till max depth",
                    "description": "Duration till maximum depth, in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "maximum_breach_depth": {
                    "title": "Maximum breach depth",
                    "description": "The maximum breach depth relative to the crest level, in meters",
                    "type": "number"
                },
                "levee_material": {
                    "title": "Levee material",
                    "type": "string",
                    "enum": [
                        "sand",
                        "clay"
                    ]
                },
                "initial_width": {
                    "title": "Initial width",
                    "description": "initial width in meters",
                    "type": "number"
                },
                "discharge_coefficient_positive": {
                    "title": "Discharge coefficient positive",
                    "type": "number",
                    "x-nullable": true
                },
                "discharge_coefficient_negative": {
                    "title": "Discharge coefficient negative",
                    "type": "number",
                    "x-nullable": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                }
            }
        },
        "LizardRasterSourcesSinks": {
            "required": [
                "offset",
                "duration",
                "reference_uuid",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "reference_uuid": {
                    "title": "Reference uuid",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "interval": {
                    "title": "Interval",
                    "type": "integer",
                    "readOnly": true
                },
                "origin_offset": {
                    "title": "Origin offset",
                    "type": "integer",
                    "readOnly": true
                },
                "store_path": {
                    "title": "Store path",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "user": {
                    "title": "User",
                    "type": "string",
                    "readOnly": true
                },
                "user_id": {
                    "title": "User id",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm/duration",
                        "mm/h",
                        "m/s"
                    ]
                }
            }
        },
        "LizardTimeseriesSourcesSinks": {
            "required": [
                "offset",
                "reference_uuid",
                "start_datetime"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "reference_uuid": {
                    "title": "Reference uuid",
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 1
                },
                "start_datetime": {
                    "title": "Start datetime",
                    "type": "string",
                    "format": "date-time"
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm/duration",
                        "mm/h",
                        "m/s"
                    ]
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "readOnly": true,
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                }
            }
        },
        "FileRasterSourcesSinks": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "FileTimeseriesSourcesSinks": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "TimeseriesSourcesSinksOverview": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "constant": {
                    "title": "Constant",
                    "type": "boolean",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "TimeseriesLeakageOverview": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "constant": {
                    "title": "Constant",
                    "type": "boolean",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "FileTimeseriesLeakage": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "FileRasterLeakage": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "TwoDWaterLevel": {
            "required": [
                "value"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "OneDWaterLevelPredefined": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "GroundWaterLevel": {
            "required": [
                "value"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "GroundWaterRaster": {
            "required": [
                "aggregation_method",
                "initial_waterlevel"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "aggregation_method": {
                    "title": "Aggregation method",
                    "type": "string",
                    "enum": [
                        "mean",
                        "max",
                        "min"
                    ]
                },
                "initial_waterlevel": {
                    "title": "Initial waterlevel",
                    "type": "string",
                    "format": "uri"
                },
                "initial_waterlevel_id": {
                    "title": "Initial waterlevel id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "OneDWaterLevel": {
            "required": [
                "value"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "OneDWaterLevelFile": {
            "required": [
                "initial_waterlevel"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "initial_waterlevel": {
                    "title": "Initial waterlevel",
                    "type": "string",
                    "format": "uri"
                },
                "initial_waterlevel_id": {
                    "title": "Initial waterlevel id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "TwoDWaterRaster": {
            "required": [
                "aggregation_method",
                "initial_waterlevel"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "aggregation_method": {
                    "title": "Aggregation method",
                    "type": "string",
                    "enum": [
                        "mean",
                        "max",
                        "min"
                    ]
                },
                "initial_waterlevel": {
                    "title": "Initial waterlevel",
                    "type": "string",
                    "format": "uri"
                },
                "initial_waterlevel_id": {
                    "title": "Initial waterlevel id",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "FileRasterRain": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "FileTimeseriesRain": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "netcdf4"
                    ],
                    "readOnly": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "Threshold": {
            "required": [
                "variable",
                "value"
            ],
            "type": "object",
            "properties": {
                "variable": {
                    "title": "Variable",
                    "type": "string",
                    "enum": [
                        "s1",
                        "u1"
                    ]
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                }
            }
        },
        "SavedStateOverview": {
            "required": [
                "type",
                "thresholds"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "stable_threshold",
                        "timed"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created_time": {
                    "title": "Time in simulation (in seconds)",
                    "description": "Time in simulation the savedstate has been created",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "expiry": {
                    "title": "Expiry",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "time": {
                    "title": "Time in simulation (in seconds)",
                    "description": "Time in simulation to create savedstate",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Threshold"
                    }
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "InitialSavedStateOverview": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "saved_state": {
                    "$ref": "#/definitions/SavedStateOverview"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Lateral": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m3/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m3/s"
                    ]
                },
                "constant": {
                    "title": "Constant",
                    "type": "boolean"
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "connection_node": {
                    "title": "Connection node",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "FileLateral": {
            "required": [
                "offset"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "periodic": {
                    "title": "Periodic",
                    "type": "string",
                    "enum": [
                        "daily"
                    ],
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "FileBoundaryCondition": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "MeasureLocation": {
            "required": [
                "weight",
                "content_type",
                "content_pk"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "weight": {
                    "title": "Weight",
                    "type": "string",
                    "format": "decimal"
                },
                "content_type": {
                    "title": "Content type",
                    "description": "e.g. ",
                    "type": "string",
                    "enum": [
                        "v2_connection_node",
                        "v2_pipe",
                        "v2_orifice",
                        "v2_culvert",
                        "v2_channel",
                        "v2_weir"
                    ]
                },
                "content_pk": {
                    "title": "Content pk",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "MeasureSpecification": {
            "required": [
                "locations",
                "variable",
                "operator"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50
                },
                "locations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MeasureLocation"
                    }
                },
                "variable": {
                    "title": "Variable",
                    "description": "measurement variable, one of the following options:\n s1 (waterlevel)\nvol1 (volume)\nq (discharge)\nu1 (velocity)\n",
                    "type": "string",
                    "enum": [
                        "s1",
                        "vol1",
                        "q",
                        "u1"
                    ]
                },
                "operator": {
                    "title": "Operator",
                    "description": "e.g. >, <, >=, <=",
                    "type": "string",
                    "enum": [
                        ">",
                        ">=",
                        "<",
                        "<="
                    ]
                }
            }
        },
        "TableStructureControl": {
            "required": [
                "offset",
                "duration",
                "measure_specification",
                "structure_type",
                "type",
                "values"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "measure_specification": {
                    "$ref": "#/definitions/MeasureSpecification"
                },
                "structure_id": {
                    "title": "Structure id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "structure_type": {
                    "title": "Structure type",
                    "type": "string",
                    "enum": [
                        "v2_pumpstation",
                        "v2_pipe",
                        "v2_orifice",
                        "v2_culvert",
                        "v2_weir",
                        "v2_channel"
                    ]
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "set_discharge_coefficients",
                        "set_crest_level",
                        "set_pump_capacity",
                        "set_gate_level"
                    ]
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "title": "Values",
                            "type": "number"
                        },
                        "maxItems": 3
                    },
                    "maxItems": 150
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                }
            }
        },
        "MemoryStructureControl": {
            "required": [
                "offset",
                "duration",
                "measure_specification",
                "structure_type",
                "type",
                "value"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "measure_specification": {
                    "$ref": "#/definitions/MeasureSpecification"
                },
                "structure_id": {
                    "title": "Structure id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "structure_type": {
                    "title": "Structure type",
                    "type": "string",
                    "enum": [
                        "v2_pumpstation",
                        "v2_pipe",
                        "v2_orifice",
                        "v2_culvert",
                        "v2_weir",
                        "v2_channel"
                    ]
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "set_discharge_coefficients",
                        "set_crest_level",
                        "set_pump_capacity",
                        "set_gate_level"
                    ]
                },
                "value": {
                    "description": "list containing a single action values, e.g. [*action_value*]. For type set_discharge_coefficients two action values need to be provided, e.g. [*action_value*, *action_value*]. ",
                    "type": "array",
                    "items": {
                        "title": "Value",
                        "type": "number"
                    },
                    "maxItems": 2
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "upper_threshold": {
                    "title": "Upper threshold",
                    "description": "e.g. 0.3",
                    "type": "number",
                    "x-nullable": true
                },
                "lower_threshold": {
                    "title": "Lower threshold",
                    "description": "e.g. 0.3",
                    "type": "number",
                    "x-nullable": true
                },
                "is_active": {
                    "title": "Is active",
                    "description": "when True the initial state of the target is active",
                    "type": "boolean"
                },
                "is_inverse": {
                    "title": "Is inverse",
                    "description": "when True the target will become active when the lower threshold has been reached",
                    "type": "boolean"
                }
            }
        },
        "TimedStructureControl": {
            "required": [
                "offset",
                "duration",
                "value",
                "type",
                "structure_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer",
                    "minimum": 1
                },
                "value": {
                    "type": "array",
                    "items": {
                        "title": "Value",
                        "type": "number"
                    },
                    "maxItems": 2
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "set_discharge_coefficients",
                        "set_crest_level",
                        "set_pump_capacity",
                        "set_gate_level"
                    ]
                },
                "structure_id": {
                    "title": "Structure id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "structure_type": {
                    "title": "Structure type",
                    "type": "string",
                    "enum": [
                        "v2_pumpstation",
                        "v2_pipe",
                        "v2_orifice",
                        "v2_culvert",
                        "v2_weir",
                        "v2_channel"
                    ]
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                }
            }
        },
        "FileStructureControl": {
            "required": [
                "offset"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "file": {
                    "$ref": "#/definitions/File"
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                }
            }
        },
        "RasterEdit": {
            "required": [
                "raster",
                "offset",
                "value",
                "polygon"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "raster": {
                    "title": "Raster",
                    "type": "string",
                    "format": "uri"
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "value": {
                    "title": "Value",
                    "description": "Absolute or relative height (in meters)  to use for the polygon",
                    "type": "number"
                },
                "polygon": {
                    "title": "Polygon",
                    "type": "object",
                    "description": "Polygon specified in wkt or geojson, interior rings are not allowed. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Polygon'",
                            "type": "string",
                            "default": "Polygon"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of coordinates (longitude, latitude order) in SRID 4326.",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "number"
                                    },
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 3
                            },
                            "minItems": 1,
                            "maxItems": 1
                        }
                    },
                    "example": {
                        "type": "Polygon",
                        "coordinates": [
                            [
                                [
                                    4.695281,
                                    52.656047
                                ],
                                [
                                    4.683754,
                                    52.655824
                                ],
                                [
                                    4.683253,
                                    52.639063
                                ],
                                [
                                    4.695281,
                                    52.656047
                                ]
                            ]
                        ]
                    }
                },
                "relative": {
                    "title": "Relative",
                    "description": "Process the value as a relative height, default is absolute",
                    "type": "boolean"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "LocalRain": {
            "required": [
                "offset",
                "values",
                "point",
                "diameter"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm/h",
                        "mm/min"
                    ]
                },
                "constant": {
                    "title": "Constant",
                    "type": "boolean"
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "diameter": {
                    "title": "Diameter",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "Wind": {
            "required": [
                "offset"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "values": {
                    "description": "[time, speed, direction]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "title": "Values",
                            "type": "number"
                        }
                    },
                    "maxItems": 300
                },
                "units": {
                    "title": "Units",
                    "description": "wind speed unit (default 'm/s')",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "km/h"
                    ]
                },
                "speed_interpolate": {
                    "title": "Speed interpolate",
                    "description": "interpolate wind speed",
                    "type": "boolean",
                    "readOnly": true
                },
                "speed_constant": {
                    "title": "Speed constant",
                    "description": "constant wind speed",
                    "type": "boolean",
                    "readOnly": true
                },
                "direction_interpolate": {
                    "title": "Direction interpolate",
                    "description": "interpolate wind direction",
                    "type": "boolean",
                    "readOnly": true
                },
                "direction_constant": {
                    "title": "Direction constant",
                    "description": "constant wind direction",
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "WindDragCoefficient": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "value": {
                    "title": "Value",
                    "description": "global drag coefficient (0-100)",
                    "type": "number",
                    "maximum": 100,
                    "minimum": 0
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Event": {
            "type": "object",
            "properties": {
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Substance"
                    },
                    "readOnly": true
                },
                "lizardrasterrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LizardRasterRain"
                    },
                    "readOnly": true
                },
                "lizardtimeseriesrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LizardTimeseriesRain"
                    },
                    "readOnly": true
                },
                "timeseriesrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeseriesRainOverview"
                    },
                    "readOnly": true
                },
                "breach": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Breach"
                    },
                    "readOnly": true
                },
                "lizardrastersourcessinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LizardRasterSourcesSinks"
                    },
                    "readOnly": true
                },
                "lizardtimeseriessourcessinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LizardTimeseriesSourcesSinks"
                    },
                    "readOnly": true
                },
                "filerastersourcessinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileRasterSourcesSinks"
                    },
                    "readOnly": true
                },
                "filetimeseriessourcessinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileTimeseriesSourcesSinks"
                    },
                    "readOnly": true
                },
                "timeseriessourcessinks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeseriesSourcesSinksOverview"
                    },
                    "readOnly": true
                },
                "leakage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimeseriesLeakageOverview"
                    },
                    "readOnly": true
                },
                "filetimeseriesleakage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileTimeseriesLeakage"
                    },
                    "readOnly": true
                },
                "filerasterleakage": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileRasterLeakage"
                    },
                    "readOnly": true
                },
                "initial_twodwaterlevel": {
                    "$ref": "#/definitions/TwoDWaterLevel"
                },
                "initial_onedwaterlevelpredefined": {
                    "$ref": "#/definitions/OneDWaterLevelPredefined"
                },
                "initial_groundwaterlevel": {
                    "$ref": "#/definitions/GroundWaterLevel"
                },
                "initial_groundwaterraster": {
                    "$ref": "#/definitions/GroundWaterRaster"
                },
                "initial_onedwaterlevel": {
                    "$ref": "#/definitions/OneDWaterLevel"
                },
                "initial_onedwaterlevelfile": {
                    "$ref": "#/definitions/OneDWaterLevelFile"
                },
                "initial_twodwaterraster": {
                    "$ref": "#/definitions/TwoDWaterRaster"
                },
                "initial_oned_substance_concentrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OneDSubstanceConcentration"
                    },
                    "readOnly": true
                },
                "initial_twod_substance_concentrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TwoDSubstanceConcentration"
                    },
                    "readOnly": true
                },
                "initial_groundwater_substance_concentrations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroundWaterSubstanceConcentration"
                    },
                    "readOnly": true
                },
                "filerasterrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileRasterRain"
                    },
                    "readOnly": true
                },
                "filetimeseriesrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileTimeseriesRain"
                    },
                    "readOnly": true
                },
                "initial_savedstate": {
                    "$ref": "#/definitions/InitialSavedStateOverview"
                },
                "savedstates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SavedStateOverview"
                    },
                    "readOnly": true
                },
                "laterals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Lateral"
                    },
                    "readOnly": true
                },
                "filelaterals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileLateral"
                    },
                    "readOnly": true
                },
                "fileboundaryconditions": {
                    "$ref": "#/definitions/FileBoundaryCondition"
                },
                "tablestructurecontrols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TableStructureControl"
                    },
                    "readOnly": true
                },
                "memorystructurecontrols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MemoryStructureControl"
                    },
                    "readOnly": true
                },
                "timedstructurecontrols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimedStructureControl"
                    },
                    "readOnly": true
                },
                "filestructurecontrols": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FileStructureControl"
                    },
                    "readOnly": true
                },
                "rasteredits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RasterEdit"
                    },
                    "readOnly": true
                },
                "obstacleedits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ObstacleEdit"
                    },
                    "readOnly": true
                },
                "localrain": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocalRain"
                    },
                    "readOnly": true
                },
                "wind": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Wind"
                    },
                    "readOnly": true
                },
                "initial_winddragcoefficient": {
                    "$ref": "#/definitions/WindDragCoefficient"
                }
            }
        },
        "Action": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "enum": [
                        "initialize",
                        "start",
                        "pause",
                        "shutdown",
                        "queue",
                        "dequeue"
                    ]
                },
                "duration": {
                    "title": "Duration",
                    "description": "Only valid for name='start'. Run simulation for given duration (in seconds) and pause",
                    "type": "integer",
                    "minimum": 1
                },
                "timeout": {
                    "title": "Timeout",
                    "description": "Only valid for name='pause'. Remove simulation after given timeout (in seconds). Defaults to 300 seconds",
                    "type": "integer",
                    "default": 300,
                    "minimum": 30
                },
                "max_rate": {
                    "title": "Max rate",
                    "description": "Only valid for name='start'. Limit maximum speed of the simulation. The max_rate is a multiplier relative to real time For example max_rate '60' means max 60 simulation seconds in 1 real second ",
                    "type": "number",
                    "minimum": 1
                },
                "compute_cluster": {
                    "title": "ComputeCluster.name",
                    "description": "The name of the compute cluster that runs/has run the simulation.",
                    "type": "string"
                },
                "simulation_runner": {
                    "title": "Simulation runner",
                    "description": "Only allowed for name values: 'start', 'initialize' or 'queue Simulation runner version used to execute the simulation. If not filled in the default version is used. (Note: used for testing new calccore releases on the staging environment. On production only the default version can be picked)",
                    "type": "string",
                    "enum": [
                        "3.4.71-3.6.10"
                    ]
                }
            }
        },
        "Timeout": {
            "required": [
                "timeout"
            ],
            "type": "object",
            "properties": {
                "timeout": {
                    "title": "Timeout",
                    "description": "Only valid for when the simulation is paused. Reset the simulation timeout to the given value. Defaults to 300 seconds",
                    "type": "integer",
                    "minimum": 30
                }
            }
        },
        "StableThresholdSavedState": {
            "required": [
                "thresholds"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "expiry": {
                    "title": "Expiry",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Threshold"
                    }
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "TimedSavedStateUpdate": {
            "required": [
                "time"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created_time": {
                    "title": "Time in simulation (in seconds)",
                    "description": "Time in simulation the savedstate has been created",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "expiry": {
                    "title": "Expiry",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "time": {
                    "title": "Time in simulation (in seconds)",
                    "description": "Time in simulation to create savedstate",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "ConstantLateral": {
            "required": [
                "offset",
                "duration",
                "value",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "description": "'m3/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m3/s"
                    ]
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "connection_node": {
                    "title": "Connection node",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "GridEventState": {
            "required": [
                "state",
                "state_detail"
            ],
            "type": "object",
            "properties": {
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ]
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object"
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "x-nullable": true
                }
            }
        },
        "UploadEventFile": {
            "required": [
                "filename",
                "offset"
            ],
            "type": "object",
            "properties": {
                "put_url": {
                    "title": "Put url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "minLength": 1
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "offset": {
                    "title": "Offset",
                    "type": "integer",
                    "minimum": 0
                },
                "periodic": {
                    "title": "Periodic",
                    "type": "string",
                    "enum": [
                        "daily"
                    ]
                }
            }
        },
        "TimeseriesLateral": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m3/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m3/s"
                    ]
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "connection_node": {
                    "title": "Connection node",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "ConstantLeakage": {
            "required": [
                "offset",
                "duration",
                "value",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer"
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "NetCDFRasterLeakage": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "UploadWithSubstances": {
            "required": [
                "filename"
            ],
            "type": "object",
            "properties": {
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                },
                "put_url": {
                    "title": "Put url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "minLength": 1
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                }
            }
        },
        "TimeseriesLeakage": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "NetCDFTimeseriesLeakage": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "ConstantRain": {
            "required": [
                "offset",
                "duration",
                "value",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "value": {
                    "title": "Value",
                    "description": "Rain intensity",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "ConstantLocalRain": {
            "required": [
                "offset",
                "value",
                "diameter",
                "point"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm/h",
                        "mm/min"
                    ]
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "diameter": {
                    "title": "Diameter",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "TimeseriesLocalRain": {
            "required": [
                "offset",
                "values",
                "diameter",
                "point"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm/h",
                        "mm/min"
                    ]
                },
                "diameter": {
                    "title": "Diameter",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "point": {
                    "title": "Point",
                    "type": "object",
                    "description": "Point specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Point'",
                            "type": "string",
                            "default": "Point"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of exactly one coordinate (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "number"
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "Point",
                        "coordinates": [
                            4.695281,
                            52.656047
                        ]
                    }
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "NetCDFRasterRain": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "TimeseriesRain": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "m/s is only option for now",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstanceWithZone"
                    }
                }
            }
        },
        "NetCDFTimeseriesRain": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "ConstantSourcesSinks": {
            "required": [
                "offset",
                "duration",
                "value",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration",
                    "type": "integer"
                },
                "value": {
                    "title": "Value",
                    "type": "number"
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "NetCDFRasterSourcesSinks": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "mm",
                        "mm/h",
                        "mm/hr"
                    ],
                    "x-nullable": true
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "TimeseriesSourcesSinks": {
            "required": [
                "offset",
                "values",
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "interpolate": {
                    "title": "Interpolate",
                    "type": "boolean"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "description": "Timestamp + value pair",
                        "example": [
                            100,
                            0.5
                        ],
                        "maxItems": 2,
                        "minItems": 2
                    },
                    "maxItems": 300,
                    "title": "Timeseries",
                    "description": "Timeseries provided as a nested list. The inner list consists of exactly 2 values: timestamp, value",
                    "example": [
                        [
                            0,
                            0.1
                        ],
                        [
                            100,
                            0.5
                        ],
                        [
                            200,
                            0
                        ]
                    ],
                    "minItems": 1
                },
                "units": {
                    "title": "Units",
                    "description": "'m/s' (only option for now)",
                    "type": "string",
                    "enum": [
                        "m/s"
                    ]
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "NetCDFTimeseriesSourcesSinks": {
            "required": [
                "units"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "multiplier": {
                    "title": "Multiplier",
                    "type": "number"
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "duration": {
                    "title": "Duration",
                    "description": "Duration of event in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "timestamps": {
                    "description": "in simulation in seconds",
                    "type": "array",
                    "items": {
                        "title": "Timestamps",
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "x-nullable": true
                },
                "interval": {
                    "title": "Interval",
                    "description": "interval in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "values_reference": {
                    "title": "Values reference",
                    "type": "string",
                    "maxLength": 255,
                    "x-nullable": true
                },
                "units": {
                    "title": "Units",
                    "type": "string",
                    "enum": [
                        "mm",
                        "mm/h"
                    ]
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "fill_value": {
                    "title": "Fill value",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForcingSubstance"
                    }
                }
            }
        },
        "MeasureLocationGridEventState": {
            "required": [
                "state",
                "state_detail"
            ],
            "type": "object",
            "properties": {
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ]
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object"
                },
                "grid_id": {
                    "title": "Grid id",
                    "type": "integer",
                    "x-nullable": true
                },
                "location_grid_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "location_resource_ids": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "location_resource_states": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "minLength": 1,
                        "x-nullable": true
                    },
                    "x-nullable": true
                },
                "location_resource_state_details": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "x-nullable": true
                    },
                    "x-nullable": true
                }
            }
        },
        "ConstantWind": {
            "required": [
                "offset"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "duration": {
                    "title": "Duration (in seconds)",
                    "description": "event duration in seconds. -9999 is the 'infinite duration' value (only allowed in conjunction with infinite simulations",
                    "type": "integer",
                    "maximum": 9223372036854775807,
                    "minimum": -9223372036854775808,
                    "x-nullable": true
                },
                "values": {
                    "description": "[time, speed, direction]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "title": "Values",
                            "type": "number"
                        }
                    },
                    "readOnly": true
                },
                "units": {
                    "title": "Units",
                    "description": "wind speed unit (default 'm/s')",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "km/h"
                    ]
                },
                "speed_interpolate": {
                    "title": "Speed interpolate",
                    "description": "interpolate wind speed",
                    "type": "boolean",
                    "readOnly": true
                },
                "speed_constant": {
                    "title": "Speed constant",
                    "description": "constant wind speed",
                    "type": "boolean",
                    "readOnly": true
                },
                "direction_interpolate": {
                    "title": "Direction interpolate",
                    "description": "interpolate wind direction",
                    "type": "boolean",
                    "readOnly": true
                },
                "direction_constant": {
                    "title": "Direction constant",
                    "description": "constant wind direction",
                    "type": "boolean",
                    "readOnly": true
                },
                "speed_value": {
                    "title": "Speed value",
                    "description": "constant wind speed",
                    "type": "number",
                    "minimum": 0
                },
                "direction_value": {
                    "title": "Direction value",
                    "description": "constant wind direction in degrees (0-360) from north - meteorological standard (thus, 180 is a southern wind)",
                    "type": "integer",
                    "maximum": 360,
                    "minimum": 0
                }
            }
        },
        "TimeseriesWind": {
            "required": [
                "offset"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uid": {
                    "title": "Uid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "offset": {
                    "title": "Offset",
                    "description": "offset of event in simulation in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0
                },
                "values": {
                    "description": "[time, speed, direction]",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "title": "Values",
                            "type": "number"
                        }
                    },
                    "maxItems": 300
                },
                "units": {
                    "title": "Units",
                    "description": "wind speed unit (default 'm/s')",
                    "type": "string",
                    "enum": [
                        "m/s",
                        "km/h"
                    ]
                },
                "speed_interpolate": {
                    "title": "Speed interpolate",
                    "description": "interpolate wind speed",
                    "type": "boolean"
                },
                "speed_constant": {
                    "title": "Speed constant",
                    "description": "constant wind speed",
                    "type": "boolean",
                    "readOnly": true
                },
                "direction_interpolate": {
                    "title": "Direction interpolate",
                    "description": "interpolate wind direction",
                    "type": "boolean"
                },
                "direction_constant": {
                    "title": "Direction constant",
                    "description": "constant wind direction",
                    "type": "boolean",
                    "readOnly": true
                }
            }
        },
        "InitialSavedState": {
            "required": [
                "saved_state"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "saved_state": {
                    "title": "Saved state",
                    "type": "string",
                    "format": "uri"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "uuid": {
                    "title": "Uuid",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Progress": {
            "required": [
                "time",
                "percentage"
            ],
            "type": "object",
            "properties": {
                "time": {
                    "title": "Time",
                    "type": "number"
                },
                "percentage": {
                    "title": "Percentage",
                    "type": "integer"
                }
            }
        },
        "ResultFile": {
            "required": [
                "filename",
                "created"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "filename": {
                    "title": "Filename",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "description": {
                    "title": "Description",
                    "type": "string",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time"
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "ArrivalTimePostProcessing": {
            "type": "object",
            "properties": {
                "basic_post_processing": {
                    "title": "Basic post processing",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "BasicPostProcessing": {
            "type": "object",
            "properties": {
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "scenario_name": {
                    "title": "Scenario name",
                    "description": "Scenario name for saving the results",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1
                },
                "process_basic_results": {
                    "title": "Process basic results",
                    "type": "boolean"
                },
                "result_uuid": {
                    "title": "Result uuid",
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "DamagePostProcessing": {
            "required": [
                "cost_type",
                "flood_month",
                "inundation_period",
                "repair_time_infrastructure",
                "repair_time_buildings"
            ],
            "type": "object",
            "properties": {
                "basic_post_processing": {
                    "title": "Basic post processing",
                    "type": "integer",
                    "readOnly": true
                },
                "cost_type": {
                    "title": "Cost type",
                    "description": "'min', 'avg', or 'max'",
                    "type": "string",
                    "enum": [
                        "min",
                        "avg",
                        "max"
                    ]
                },
                "flood_month": {
                    "title": "Flood month",
                    "type": "string",
                    "enum": [
                        "jan",
                        "feb",
                        "mar",
                        "apr",
                        "may",
                        "jun",
                        "jul",
                        "aug",
                        "sep",
                        "oct",
                        "nov",
                        "dec"
                    ]
                },
                "inundation_period": {
                    "title": "Inundation period",
                    "description": "time in hours",
                    "type": "number",
                    "minimum": 1.0
                },
                "repair_time_infrastructure": {
                    "title": "Repair time infrastructure",
                    "description": "time in hours",
                    "type": "integer",
                    "maximum": 240,
                    "minimum": 1
                },
                "repair_time_buildings": {
                    "title": "Repair time buildings",
                    "description": "time in hours",
                    "type": "integer",
                    "maximum": 240,
                    "minimum": 1
                }
            }
        },
        "Result": {
            "required": [
                "basic",
                "damage_estimation",
                "arrival_time"
            ],
            "type": "object",
            "properties": {
                "basic": {
                    "title": "Basic",
                    "type": "boolean"
                },
                "damage_estimation": {
                    "title": "Damage estimation",
                    "type": "boolean"
                },
                "arrival_time": {
                    "title": "Arrival time",
                    "type": "boolean"
                }
            }
        },
        "DamageEstimation": {
            "type": "object",
            "properties": {
                "damage_table": {
                    "title": "Damage table",
                    "type": "string",
                    "readOnly": true,
                    "default": "3Di-V1"
                },
                "elevation_raster_uuid": {
                    "title": "Elevation raster uuid",
                    "type": "string",
                    "readOnly": true,
                    "default": "36588275-f3e3-4120-8c1e-602f7ae85386"
                },
                "landcover_raster_uuid": {
                    "title": "Landcover raster uuid",
                    "type": "string",
                    "readOnly": true,
                    "default": "717478ef-099d-41d8-971d-8b4309e59d92"
                },
                "road_rail_raster_uuid": {
                    "title": "Road rail raster uuid",
                    "type": "string",
                    "readOnly": true,
                    "default": "e40c1b96-e71f-462c-8acb-59a3a8b7db89"
                },
                "cost_type": {
                    "title": "Cost type",
                    "type": "integer",
                    "readOnly": true
                },
                "flood_month": {
                    "title": "Flood month",
                    "type": "integer",
                    "readOnly": true
                },
                "inundation_period": {
                    "title": "Inundation period",
                    "type": "integer",
                    "readOnly": true
                },
                "repair_time_infrastructure": {
                    "title": "Repair time infrastructure",
                    "type": "integer",
                    "readOnly": true
                },
                "repair_time_buildings": {
                    "title": "Repair time buildings",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Settings": {
            "type": "object",
            "properties": {
                "damage_estimation": {
                    "$ref": "#/definitions/DamageEstimation"
                }
            }
        },
        "PostProcessingOverview": {
            "required": [
                "results",
                "settings"
            ],
            "type": "object",
            "properties": {
                "username": {
                    "title": "Username",
                    "type": "string",
                    "readOnly": true
                },
                "external_user_id": {
                    "title": "External user id",
                    "type": "string",
                    "readOnly": true
                },
                "metadata_version": {
                    "title": "Metadata version",
                    "type": "string",
                    "readOnly": true,
                    "default": 1.2
                },
                "start_time_sim": {
                    "title": "Start time sim",
                    "type": "string",
                    "readOnly": true
                },
                "end_time_sim": {
                    "title": "End time sim",
                    "type": "string",
                    "readOnly": true
                },
                "results": {
                    "$ref": "#/definitions/Result"
                },
                "settings": {
                    "$ref": "#/definitions/Settings"
                },
                "model_name": {
                    "title": "Model name",
                    "type": "string",
                    "readOnly": true
                },
                "simulation_name": {
                    "title": "Simulation name",
                    "type": "string",
                    "readOnly": true
                },
                "scenario_name": {
                    "title": "Scenario name",
                    "description": "Scenario name for saving the results",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "model_id": {
                    "title": "Model id",
                    "type": "integer",
                    "readOnly": true
                },
                "model_revision_id": {
                    "title": "Model revision id",
                    "type": "string",
                    "readOnly": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "readOnly": true
                },
                "result_uuid": {
                    "title": "Result uuid",
                    "type": "string",
                    "format": "uuid",
                    "readOnly": true
                },
                "organisation_uuid": {
                    "title": "Organisation uuid",
                    "type": "string",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "PostProcessingStart": {
            "type": "object",
            "properties": {}
        },
        "PostProcessingStatus": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "created",
                        "requested",
                        "archiving",
                        "archiving_failed",
                        "archived"
                    ]
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                }
            }
        },
        "AggregationSettings": {
            "required": [
                "flow_variable",
                "method",
                "interval"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Give your aggregation setting a name to be able to find it back in the results file.",
                    "type": "string",
                    "maxLength": 120,
                    "x-nullable": true
                },
                "flow_variable": {
                    "title": "Flow variable",
                    "description": "Options: \nwater_level = Water Level\nflow_velocity = Flow Velocity\ndischarge = Discharge\nvolume = Volume\npump_discharge = Pump Discharge\nwet_cross_section = Wet Cross Section\nlateral_discharge = Lateral Discharge\nwet_surface = Wet Surface\nrain = Rain\nsimple_infiltration = Simple Infiltration\nleakage = Leakage\ninterception = Interception\nsurface_source_sink_discharge = Surface Source Sink Discharge\n",
                    "type": "string",
                    "enum": [
                        "water_level",
                        "flow_velocity",
                        "discharge",
                        "volume",
                        "pump_discharge",
                        "wet_cross_section",
                        "lateral_discharge",
                        "wet_surface",
                        "rain",
                        "simple_infiltration",
                        "leakage",
                        "interception",
                        "surface_source_sink_discharge"
                    ]
                },
                "method": {
                    "title": "Method",
                    "description": "Options: \nmin = minimum value of the variable in the configured interval\nmax = maximum value of the variable in the configured interval\navg = average value of the variable in the configured interval\ncum = variable integration over time [dt * variable]\ncum_positive = variable integration over time [dt * variable] in positive direction\ncum_negative = variable integration over time [dt * variable] in negative direction\ncurrent = current value of a variable\nsum = variable summation over configured interval\n\nNote: 'current' is required in case one checks the water balance for variables that are the result of the processes. Only valid for flow_variable 'volume' and 'intercepted_volume'",
                    "type": "string",
                    "enum": [
                        "min",
                        "max",
                        "avg",
                        "cum",
                        "cum_positive",
                        "cum_negative",
                        "current",
                        "sum"
                    ]
                },
                "interval": {
                    "title": "Interval",
                    "description": "aggregation interval in seconds",
                    "type": "number"
                }
            }
        },
        "CustomizedResultArea": {
            "required": [
                "name",
                "subsets",
                "geometry"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Name of the customized results area.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "subsets": {
                    "description": "The subsets for which the customized results area is defined.",
                    "type": "array",
                    "items": {
                        "title": "Subsets",
                        "type": "string",
                        "enum": [
                            "1D",
                            "2D",
                            "1D2D",
                            "GW"
                        ]
                    }
                },
                "geometry": {
                    "title": "Geometry",
                    "description": "The polygon of the customized results area in WKT format, must be WGS84.",
                    "type": "string"
                }
            }
        },
        "NumericalSettings": {
            "required": [
                "pump_implicit_ratio",
                "cfl_strictness_factor_1d",
                "cfl_strictness_factor_2d",
                "convergence_eps",
                "convergence_cg",
                "flow_direction_threshold",
                "friction_shallow_water_depth_correction",
                "general_numerical_threshold",
                "limiter_waterlevel_gradient_1d",
                "limiter_waterlevel_gradient_2d",
                "limiter_slope_crossectional_area_2d",
                "limiter_slope_friction_2d",
                "max_non_linear_newton_iterations",
                "max_degree_gauss_seidel",
                "min_friction_velocity",
                "min_surface_area",
                "use_preconditioner_cg",
                "preissmann_slot",
                "limiter_slope_thin_water_layer",
                "use_of_cg",
                "use_nested_newton",
                "flooding_threshold"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "pump_implicit_ratio": {
                    "title": "Pump implicit ratio",
                    "type": "number",
                    "maximum": 1.0,
                    "minimum": 0.0
                },
                "cfl_strictness_factor_1d": {
                    "title": "Cfl strictness factor 1d",
                    "description": "Strictness of CFL (Courant–Friedrichs–Lewy) condition for 1D.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "cfl_strictness_factor_2d": {
                    "title": "Cfl strictness factor 2d",
                    "description": "Strictness of CFL (Courant–Friedrichs–Lewy) condition for 2D.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "convergence_eps": {
                    "title": "Convergence eps",
                    "description": "Minimal convergence criterion for Newton's method, suitable default is 1.0e-5, due to numerical precision.",
                    "type": "number",
                    "maximum": 0.0001,
                    "minimum": 1e-07
                },
                "convergence_cg": {
                    "title": "Convergence cg",
                    "description": "Convergence criterion of cg-method, suitable default is 1.0e-9, due to numerical precision.",
                    "type": "number",
                    "maximum": 1e-07,
                    "minimum": 1e-12
                },
                "flow_direction_threshold": {
                    "title": "Flow direction threshold",
                    "description": "Threshold value for upwind scheme based on flow velocity, suitable default is 1e-06.",
                    "type": "number",
                    "maximum": 0.01,
                    "minimum": 1e-13
                },
                "friction_shallow_water_depth_correction": {
                    "title": "Friction shallow water depth correction",
                    "description": "In case the friction assumptions based on the dominant friction balance gives a structurally underestimation of the friction, you can switch this setting on.\n Options: \n0 = off\n1 = max between avg and divided channel based friction\n2 = always linearized\n3 = linearizes the depth based on a weighed averaged\n\n If options 3 is used the maximum depth of a thin layer needs to be defined. Do not use in combination with interflow. Suitable default is 0 (OFF).",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                },
                "general_numerical_threshold": {
                    "title": "General numerical threshold",
                    "description": "Suitable default is 1.0e-8",
                    "type": "number",
                    "maximum": 1e-07,
                    "minimum": 1e-13
                },
                "time_integration_method": {
                    "title": "Time integration method",
                    "description": "There are various methods to discretize the equations. At the moment only the first-order, semi-implicit method is supported and tested.\nOptions: \n0 = euler implicit\n",
                    "type": "integer",
                    "enum": [
                        0
                    ]
                },
                "limiter_waterlevel_gradient_1d": {
                    "title": "Limiter waterlevel gradient 1d",
                    "description": "The limiter on the water level gradient allows the model to deal with unrealistically steep gradients. Suitable default is 1.",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "limiter_waterlevel_gradient_2d": {
                    "title": "Limiter waterlevel gradient 2d",
                    "description": "The limiter on the water level gradient allows the model to deal with unrealistically steep gradients. Suitable default is 1.",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "limiter_slope_crossectional_area_2d": {
                    "title": "Limiter slope crossectional area 2d",
                    "description": "This limiter starts working in case the depth based on the downstream water level is zero and may be useful in sloping areas.\nOptions: \n0 = off\n1 = higher order scheme (might be sensitive to instabilities)\n2 = cross-sections treated as upwind method volume/surface area\n3 = combination traditional method thin layer approach\n If option 3 is used the maximum depth of a thin layer needs to be defined. Do not use in combination with interflow.",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                },
                "limiter_slope_friction_2d": {
                    "title": "Limiter slope friction 2d",
                    "description": "This limiter starts working in case the depth based on the downstream water level is zero and may be useful in sloping areas. This limiter is mandatory if the limiter_slope_crossectional_area_2d setting is greater than 0. Do not use in combination with interflow. Suitable default is 0 (OFF)\n Options: \n0 = off\n1 = standard\n",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "max_non_linear_newton_iterations": {
                    "title": "Max non linear newton iterations",
                    "description": "Maximum number of non-linear newton iterations in single time step. Suitable default is 20.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "max_degree_gauss_seidel": {
                    "title": "Max degree gauss seidel",
                    "description": "Values below are advised for different model types: \n700 for 1D flow \n7 for 1D and 2D flow \n5 for surface 2D flow only \n7 for surface and groundwater flow \n70 for 1D, 2D surface and groundwater flow or higher. \nPlay around with this value, can speed up your model significantly, especially in case of ground water flow. Suitable default is 0.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "min_friction_velocity": {
                    "title": "Min friction velocity",
                    "description": "To guarantee some initial friction only in flooded areas and for large time steps, it is wise to assume a minimum velocity for computing the friction. Suitable default is 0.01.",
                    "type": "number",
                    "maximum": 1,
                    "minimum": 0
                },
                "min_surface_area": {
                    "title": "Min surface area",
                    "description": "Suitable default is 1.0e-8.",
                    "type": "number",
                    "maximum": 1e-07,
                    "minimum": 1e-13
                },
                "use_preconditioner_cg": {
                    "title": "Use preconditioner cg",
                    "description": "Use pre-conditioner for matrix solver. Increases simulation speed in most cases. \nOptions: \n0 = off\n1 = standard\n. Suitable default is 1 (STANDARD).",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                },
                "preissmann_slot": {
                    "title": "Preissmann slot",
                    "description": "A conceptual vertical narrow slot providing a conceptual free surface condition for the flow when the water level is above the top of a closed conduit. Often used to guarantee stability. Not necessary in 3Di even for pressurized pipe flow. Note: Works only for circular profiles. Suitable default is 0.0. Unit: m2.",
                    "type": "number",
                    "minimum": 0
                },
                "limiter_slope_thin_water_layer": {
                    "title": "Limiter slope thin water layer",
                    "description": "Mandatory when using friction_shallow_water_depth_correction option 3 or limiter_slope_crossectional_area_2d option 3. Unit: m",
                    "type": "number",
                    "minimum": 0
                },
                "use_of_cg": {
                    "title": "Use of cg",
                    "description": "Number of conjugate gradient method iterations, before switching to another method. Suitable default is 20.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1
                },
                "use_nested_newton": {
                    "title": "Use nested newton",
                    "description": "Set to 'True' for 1D calculations with closed profiles to handle non-linearity in volume-water level relation. When set to 'False' it will be used if calculations become non-linear. For sewerage systems it is advised to set this setting to 'True'. Otherwise a suitable default is 'False'",
                    "type": "boolean"
                },
                "flooding_threshold": {
                    "title": "Flooding threshold",
                    "description": "Water depth threshold for flow between 2D cells. Depth relative to lowest bathymetry pixel at the edge between two 2D cells. Suitable default is 0.000001.",
                    "type": "number",
                    "maximum": 0.05,
                    "minimum": 0
                }
            }
        },
        "OutputSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "create_hydro_results": {
                    "title": "Create hydro results",
                    "description": "Create domain wide results file.",
                    "type": "boolean"
                },
                "create_structure_control_results": {
                    "title": "Create structure control results",
                    "description": "Create structure control results file.",
                    "type": "boolean"
                },
                "hydro_output_time_step": {
                    "title": "Hydro output time step",
                    "description": "Output time step in seconds.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "hydro_output_start_time": {
                    "title": "Hydro output start time",
                    "description": "Output start time in seconds.",
                    "type": "number",
                    "minimum": 0.0
                },
                "hydro_output_end_time": {
                    "title": "Hydro output end time",
                    "description": "Output end time in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "hydro_output_precision": {
                    "title": "Hydro output precision",
                    "description": "Single or double precision output.",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "aggregation_output_precision": {
                    "title": "Aggregation output precision",
                    "description": "Single or double precision output for aggregation results.",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "customized_hydro_output_time_step": {
                    "title": "Customized hydro output time step",
                    "description": "Customized hydro output time step in seconds.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "customized_hydro_output_start_time": {
                    "title": "Customized hydro output start time",
                    "description": "Customized hydro output start time in seconds.",
                    "type": "number",
                    "minimum": 0.0
                },
                "customized_hydro_output_end_time": {
                    "title": "Customized hydro output end time",
                    "description": "Customized hydro output end time in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "customized_hydro_output_precision": {
                    "title": "Customized hydro output precision",
                    "description": "Single or double precision output for customized hydro results.",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "customized_hydro_output_variables": {
                    "description": "The output variables for the customized results area.",
                    "type": "array",
                    "items": {
                        "title": "Customized hydro output variables",
                        "type": "string",
                        "enum": [
                            "s1",
                            "vol",
                            "su",
                            "infiltration_rate_simple",
                            "rain",
                            "q_lat",
                            "q_sss",
                            "ucx",
                            "ucy",
                            "leak",
                            "intecepted_volume",
                            "u1",
                            "q",
                            "au",
                            "up1",
                            "qp",
                            "breach_depth",
                            "breach_width",
                            "q_pump"
                        ]
                    }
                }
            }
        },
        "PhysicalSettings": {
            "required": [
                "use_advection_1d",
                "use_advection_2d"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "use_advection_1d": {
                    "title": "Use advection 1d",
                    "description": "Options: \n0 = off\n1 = momentum conservative\n2 = energy conservative\n3 = combined momentum and energy conservative\n",
                    "type": "integer",
                    "enum": [
                        0,
                        1,
                        2,
                        3
                    ]
                },
                "use_advection_2d": {
                    "title": "Use advection 2d",
                    "description": "Options: \n0 = off\n1 = standard\n",
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                }
            }
        },
        "TimeStepSettings": {
            "required": [
                "time_step",
                "min_time_step",
                "use_time_step_stretch"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "time_step": {
                    "title": "Time step",
                    "description": "Size of the simulation time step in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "min_time_step": {
                    "title": "Min time step",
                    "description": "Minimum size of the simulation time step in seconds. Suitable default is 0.001.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "max_time_step": {
                    "title": "Max time step",
                    "description": "Only in combination with use_time_step_stretch=True.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "use_time_step_stretch": {
                    "title": "Use time step stretch",
                    "description": "Permit the time step to increase automatically, when the flow allows it.",
                    "type": "boolean"
                },
                "output_time_step": {
                    "title": "Output time step",
                    "description": "The interval in seconds in which results are saved to disk.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                }
            }
        },
        "WaterQualitySettings": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "time_step": {
                    "title": "Time step",
                    "description": "Size of the water quality timestep in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "min_time_step": {
                    "title": "Min time step",
                    "description": "Minimum size of the water quality timestep in seconds. Suitable default is 0.001. Cannot be greater than hydrodynamic minimum timestep.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "max_time_step": {
                    "title": "Max time step",
                    "description": "Maximum size of the water quality timestep in seconds. Cannot be greater than hydrodynamic maximum timestep.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "general_numerical_threshold": {
                    "title": "General numerical threshold",
                    "description": "The numerical threshold for the water quality simulation.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "max_number_of_multi_step": {
                    "title": "Max number of multi step",
                    "description": "The maximum number of steps used by the multi-step method.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1e-14
                },
                "max_gs_sweep_iterations": {
                    "title": "Max gs sweep iterations",
                    "description": "The maximum number of iterations used by the Gauss-Seidel sweep method.",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 1e-14
                },
                "convergence_eps": {
                    "title": "Convergence eps",
                    "description": "The convergence epsilon for the water quality simulation.",
                    "type": "number",
                    "minimum": 1e-14
                }
            }
        },
        "WaterQualityOutputSettings": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "create_results": {
                    "title": "Create results",
                    "description": "Create domain wide results file.",
                    "type": "boolean"
                },
                "output_time_step": {
                    "title": "Output time step",
                    "description": "Output time step in seconds.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "output_start_time": {
                    "title": "Output start time",
                    "description": "Output start time in seconds.",
                    "type": "number",
                    "minimum": 0.0
                },
                "output_end_time": {
                    "title": "Output end time",
                    "description": "Output end time in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "output_precision": {
                    "title": "Output precision",
                    "description": "Single or double precision output.",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                },
                "customized_output_time_step": {
                    "title": "Customized output time step",
                    "description": "Customized output time step in seconds.",
                    "type": "number",
                    "minimum": 1e-14,
                    "x-nullable": true
                },
                "customized_output_start_time": {
                    "title": "Customized output start time",
                    "description": "Customized output start time in seconds.",
                    "type": "number",
                    "minimum": 0.0
                },
                "customized_output_end_time": {
                    "title": "Customized output end time",
                    "description": "Customized output end time in seconds.",
                    "type": "number",
                    "minimum": 1e-14
                },
                "customized_output_precision": {
                    "title": "Customized output precision",
                    "description": "Single or double precision output for customized results.",
                    "type": "integer",
                    "enum": [
                        1,
                        2
                    ]
                }
            }
        },
        "WaterQualityCustomizedResultArea": {
            "required": [
                "name",
                "subsets",
                "geometry"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Name of the customized results area.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "subsets": {
                    "description": "Subsets of the customized results area. Valid subsets are: 1D, 2D, 1D2D, GW.",
                    "type": "array",
                    "items": {
                        "title": "Subsets",
                        "type": "string",
                        "enum": [
                            "1D",
                            "2D",
                            "1D2D",
                            "GW"
                        ]
                    },
                    "maxItems": 4
                },
                "geometry": {
                    "title": "Geometry",
                    "description": "Geometry of the customized results area, WKT format, must be WGS84.",
                    "type": "string"
                }
            }
        },
        "SimulationSettingsOverview": {
            "type": "object",
            "properties": {
                "physical_settings": {
                    "$ref": "#/definitions/PhysicalSettings"
                },
                "numerical_settings": {
                    "$ref": "#/definitions/NumericalSettings"
                },
                "time_step_settings": {
                    "$ref": "#/definitions/TimeStepSettings"
                },
                "aggregation_settings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AggregationSettings"
                    },
                    "readOnly": true
                },
                "output_settings": {
                    "$ref": "#/definitions/OutputSettings"
                },
                "customized_result_areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomizedResultArea"
                    },
                    "readOnly": true
                },
                "water_quality_settings": {
                    "$ref": "#/definitions/WaterQualitySettings"
                },
                "water_quality_output_settings": {
                    "$ref": "#/definitions/WaterQualityOutputSettings"
                },
                "water_quality_customized_result_areas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WaterQualityCustomizedResultArea"
                    },
                    "readOnly": true
                }
            }
        },
        "CurrentStatus": {
            "required": [
                "id",
                "name",
                "created"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer"
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time"
                },
                "time": {
                    "title": "Time",
                    "type": "number"
                },
                "paused": {
                    "title": "Paused",
                    "type": "boolean"
                },
                "exit_code": {
                    "title": "Exit code",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "SimulationStatus": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "enum": [
                        "created",
                        "starting",
                        "initialized",
                        "queued",
                        "ended",
                        "postprocessing",
                        "finished",
                        "crashed"
                    ]
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "simulation_id": {
                    "title": "Simulation id",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation_name": {
                    "title": "Simulation name",
                    "type": "string",
                    "readOnly": true
                },
                "simulation_user_email": {
                    "title": "Simulation user email",
                    "type": "string",
                    "readOnly": true,
                    "x-nullable": true
                },
                "simulation_organisation_unique_id": {
                    "title": "Simulation organisation unique id",
                    "type": "string",
                    "readOnly": true
                },
                "simulation_tags": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "x-nullable": true
                    },
                    "readOnly": true
                },
                "simulation_user_first_name": {
                    "title": "Simulation user first name",
                    "type": "string",
                    "readOnly": true
                },
                "simulation_user_last_name": {
                    "title": "Simulation user last name",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel_slug": {
                    "title": "Threedimodel slug",
                    "type": "string",
                    "readOnly": true
                },
                "threedimodel_id": {
                    "title": "Threedimodel id",
                    "type": "integer",
                    "readOnly": true
                },
                "has_results": {
                    "title": "Has results",
                    "type": "boolean",
                    "readOnly": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "expiry": {
                    "title": "Expiry",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "x-nullable": true
                },
                "time": {
                    "title": "Time (in seconds)",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "paused": {
                    "title": "True if simulation is paused, only valid in initialized state",
                    "type": "boolean",
                    "x-nullable": true
                },
                "detail": {
                    "title": "Detail",
                    "type": "object",
                    "x-nullable": true
                },
                "exit_code": {
                    "title": "Exit code",
                    "description": "only available for final statuses like 'finished' or 'crashed'. Gives detailed insight to the application state when the simulation finished",
                    "type": "integer",
                    "enum": [
                        1110,
                        1210,
                        1240,
                        4161,
                        4262,
                        4263,
                        4264,
                        4265,
                        4120,
                        4220,
                        4150,
                        4280,
                        4240,
                        4270,
                        4230,
                        4231,
                        4232,
                        2150,
                        2110,
                        2210,
                        2120,
                        2220,
                        2230,
                        2240
                    ],
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "BreachGraphRequest": {
            "required": [
                "start_time",
                "subscribe",
                "line_id"
            ],
            "type": "object",
            "properties": {
                "start_time": {
                    "title": "Start time",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "history_points_limit": {
                    "title": "History points limit",
                    "description": "Maximum number of points of history to return",
                    "type": "integer",
                    "default": 200,
                    "maximum": 500,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 2,
                    "minimum": 0.25
                },
                "line_id": {
                    "title": "Line id",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "BreachGraph": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "PumpDischargeGraphRequest": {
            "required": [
                "start_time",
                "subscribe",
                "pump_id"
            ],
            "type": "object",
            "properties": {
                "start_time": {
                    "title": "Start time",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "history_points_limit": {
                    "title": "History points limit",
                    "description": "Maximum number of points of history to return",
                    "type": "integer",
                    "default": 200,
                    "maximum": 500,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 2,
                    "minimum": 0.25
                },
                "pump_id": {
                    "title": "Pump id",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "PumpDischargeGraph": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "RainGraphRequest": {
            "required": [
                "start_time",
                "subscribe",
                "node_id"
            ],
            "type": "object",
            "properties": {
                "start_time": {
                    "title": "Start time",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "history_points_limit": {
                    "title": "History points limit",
                    "description": "Maximum number of points of history to return",
                    "type": "integer",
                    "default": 200,
                    "maximum": 500,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 2,
                    "minimum": 0.25
                },
                "node_id": {
                    "title": "Node id",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "RainGraph": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "WaterFlowGraphRequest": {
            "required": [
                "start_time",
                "subscribe",
                "line_id"
            ],
            "type": "object",
            "properties": {
                "start_time": {
                    "title": "Start time",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "history_points_limit": {
                    "title": "History points limit",
                    "description": "Maximum number of points of history to return",
                    "type": "integer",
                    "default": 200,
                    "maximum": 500,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 2,
                    "minimum": 0.25
                },
                "line_id": {
                    "title": "Line id",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "WaterGraph": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "WaterLevelGraphRequest": {
            "required": [
                "start_time",
                "subscribe",
                "node_id"
            ],
            "type": "object",
            "properties": {
                "start_time": {
                    "title": "Start time",
                    "description": "simulation time in seconds",
                    "type": "integer",
                    "minimum": 0
                },
                "history_points_limit": {
                    "title": "History points limit",
                    "description": "Maximum number of points of history to return",
                    "type": "integer",
                    "default": 200,
                    "maximum": 500,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 2,
                    "minimum": 0.25
                },
                "node_id": {
                    "title": "Node id",
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "WaterLevelProfileRequest": {
            "required": [
                "geometry",
                "subscribe"
            ],
            "type": "object",
            "properties": {
                "geometry": {
                    "title": "Linestring",
                    "description": "Linestring (epsg:4326) specified in wkt or geojson. Coordinates in longitude, latitude order.",
                    "type": "object",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'linestring' or 'LINESTRING'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "List of coordinates. (longitude, latitude order)",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number"
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "points_limit": {
                    "title": "Points limit",
                    "description": "Maximum number of points to return",
                    "type": "integer",
                    "default": 100,
                    "maximum": 200,
                    "minimum": 1
                },
                "subscribe": {
                    "title": "Subscribe",
                    "description": "Subscribe for new results during simulation",
                    "type": "boolean"
                },
                "subscribe_rate_limit": {
                    "title": "Subscribe rate limit",
                    "description": "Max number of items per second for subscription",
                    "type": "number",
                    "default": 0.5,
                    "maximum": 1,
                    "minimum": 0.25
                }
            }
        },
        "WaterLevelProfile": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "Waterdepth": {
            "required": [
                "websocket_url"
            ],
            "type": "object",
            "properties": {
                "websocket_url": {
                    "title": "Websocket url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "Profile": {
            "required": [
                "url"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "TMS": {
            "required": [
                "tms_url",
                "minmax_url"
            ],
            "type": "object",
            "properties": {
                "tms_url": {
                    "title": "Tms url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                },
                "minmax_url": {
                    "title": "Minmax url",
                    "type": "string",
                    "format": "uri",
                    "minLength": 1
                }
            }
        },
        "SimulationChannel": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation": {
                    "title": "Simulation",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "channel_name": {
                    "title": "Channel name",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "pending",
                        "confirmed",
                        "timeout"
                    ],
                    "readOnly": true
                }
            }
        },
        "SimulationStatusStatistics": {
            "required": [
                "name",
                "total"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                },
                "total": {
                    "title": "Total",
                    "type": "integer"
                }
            }
        },
        "RasterOptions": {
            "type": "object",
            "properties": {
                "dem_file": {
                    "title": "Dem file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "dem_raw_file": {
                    "title": "Dem raw file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "equilibrium_infiltration_rate_file": {
                    "title": "Equilibrium infiltration rate file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "frict_coef_file": {
                    "title": "Frict coef file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "initial_groundwater_level_file": {
                    "title": "Initial groundwater level file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "initial_waterlevel_file": {
                    "title": "Initial waterlevel file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "groundwater_hydro_connectivity_file": {
                    "title": "Groundwater hydro connectivity file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "groundwater_impervious_layer_level_file": {
                    "title": "Groundwater impervious layer level file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "infiltration_decay_period_file": {
                    "title": "Infiltration decay period file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "initial_infiltration_rate_file": {
                    "title": "Initial infiltration rate file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "leakage_file": {
                    "title": "Leakage file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "phreatic_storage_capacity_file": {
                    "title": "Phreatic storage capacity file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "hydraulic_conductivity_file": {
                    "title": "Hydraulic conductivity file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "porosity_file": {
                    "title": "Porosity file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "infiltration_rate_file": {
                    "title": "Infiltration rate file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "max_infiltration_capacity_file": {
                    "title": "Max infiltration capacity file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "interception_file": {
                    "title": "Interception file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "vegetation_height_file": {
                    "title": "Vegetation height file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "vegetation_drag_coefficient_file": {
                    "title": "Vegetation drag coefficient file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "vegetation_stem_count_file": {
                    "title": "Vegetation stem count file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "vegetation_stem_diameter_file": {
                    "title": "Vegetation stem diameter file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "initial_concentration_file": {
                    "title": "Initial concentration file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "initial_groundwater_concentration_file": {
                    "title": "Initial groundwater concentration file",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                }
            }
        },
        "BoundaryCondition": {
            "required": [
                "boundary_id",
                "type",
                "dimension"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "boundary_id": {
                    "title": "Boundary id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "velocity",
                        "sommerfeldt",
                        "riemann",
                        "water_level",
                        "discharge"
                    ]
                },
                "dimension": {
                    "title": "Dimension",
                    "type": "string",
                    "enum": [
                        "one_d",
                        "two_d"
                    ]
                }
            }
        },
        "Raster": {
            "required": [
                "type",
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "dem_file",
                        "dem_raw_file",
                        "equilibrium_infiltration_rate_file",
                        "frict_coef_file",
                        "initial_groundwater_level_file",
                        "initial_waterlevel_file",
                        "groundwater_hydro_connectivity_file",
                        "groundwater_impervious_layer_level_file",
                        "infiltration_decay_period_file",
                        "initial_infiltration_rate_file",
                        "leakage_file",
                        "phreatic_storage_capacity_file",
                        "hydraulic_conductivity_file",
                        "porosity_file",
                        "infiltration_rate_file",
                        "max_infiltration_capacity_file",
                        "interception_file",
                        "vegetation_height_file",
                        "vegetation_drag_coefficient_file",
                        "vegetation_stem_count_file",
                        "vegetation_stem_diameter_file",
                        "initial_concentration_file",
                        "initial_groundwater_concentration_file"
                    ]
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true,
                    "x-nullable": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 60,
                    "minLength": 1
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "epsg_code": {
                    "title": "Epsg code",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648,
                    "x-nullable": true
                },
                "extent": {
                    "title": "Extent",
                    "type": "object",
                    "description": "Extent specified either in geojson, wkt or ewkt. Coordinates in longitude, latitude order.",
                    "required": [
                        "type",
                        "coordinates"
                    ],
                    "properties": {
                        "type": {
                            "title": "type",
                            "description": "Type should always be 'Linestring'",
                            "type": "string",
                            "default": "Linestring"
                        },
                        "coordinates": {
                            "title": "coordinates",
                            "description": "Exactly 2 coordinates, specifying the bottom left (longitude, latitude order)and upper right respectively",
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "minItems": 2,
                                    "maxItems": 2
                                },
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "minItems": 2,
                            "maxItems": 2
                        }
                    },
                    "example": {
                        "type": "LineString",
                        "coordinates": [
                            [
                                4.668275805499175,
                                52.619558913867856
                            ],
                            [
                                4.73849433310911,
                                52.66453976184968
                            ]
                        ]
                    }
                },
                "geotransform": {
                    "type": "array",
                    "items": {
                        "title": "Geotransform",
                        "type": "number"
                    },
                    "maxItems": 6,
                    "x-nullable": true
                },
                "unit": {
                    "title": "Unit",
                    "type": "string",
                    "enum": [
                        "meters"
                    ],
                    "x-nullable": true
                }
            }
        },
        "InitialWaterlevel": {
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "user_generated": {
                    "title": "User generated",
                    "type": "boolean"
                },
                "file": {
                    "$ref": "#/definitions/FileReadOnly"
                },
                "source_raster": {
                    "title": "Source raster",
                    "type": "string",
                    "format": "uri"
                },
                "state": {
                    "title": "State",
                    "type": "string",
                    "enum": [
                        "processing",
                        "valid",
                        "invalid"
                    ],
                    "readOnly": true
                },
                "state_detail": {
                    "title": "State detail",
                    "type": "object",
                    "readOnly": true,
                    "x-nullable": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "source_raster_id": {
                    "title": "Source raster id",
                    "type": "integer",
                    "readOnly": true,
                    "x-nullable": true
                },
                "dimension": {
                    "title": "Dimension",
                    "type": "string",
                    "enum": [
                        "one_d",
                        "two_d"
                    ]
                }
            }
        },
        "PotentialBreach": {
            "required": [
                "connected_pnt_id",
                "levee_material",
                "line_id",
                "maximum_breach_depth"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "connected_pnt_id": {
                    "title": "Connected pnt id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "levee_material": {
                    "title": "Levee material",
                    "type": "string",
                    "enum": [
                        "sand",
                        "clay"
                    ]
                },
                "line_id": {
                    "title": "Line id",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": -2147483648
                },
                "maximum_breach_depth": {
                    "title": "Maximum breach depth",
                    "type": "number"
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "ThreediModelSavedState": {
            "required": [
                "name",
                "type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 80,
                    "minLength": 1
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "enum": [
                        "stable_threshold",
                        "timed"
                    ]
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "title": "tags",
                    "description": "tags provided as a list of strings",
                    "example": [
                        "tag_1",
                        "tag_2"
                    ]
                },
                "used_in_simulation": {
                    "title": "Used in simulation",
                    "type": "string",
                    "readOnly": true
                },
                "expiry": {
                    "title": "Expiry",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "time": {
                    "title": "Time in simulation (in seconds)",
                    "description": "Time in simulation to create savedstate",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "title": "Variables",
                        "type": "string",
                        "enum": [
                            "s1",
                            "u1"
                        ]
                    },
                    "maxItems": 2,
                    "x-nullable": true
                },
                "thresholds": {
                    "type": "array",
                    "items": {
                        "title": "Thresholds",
                        "type": "number"
                    },
                    "maxItems": 2,
                    "x-nullable": true
                }
            }
        },
        "ThreediModelTask": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "url": {
                    "title": "Url",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "enum": [
                        "make_gridadmin",
                        "make_tables",
                        "make_cog",
                        "make_geojson",
                        "make_simulation_templates",
                        "inherit_simulation_templates",
                        "make_aggregations"
                    ]
                },
                "params": {
                    "title": "Params",
                    "type": "object",
                    "x-nullable": true
                },
                "created": {
                    "title": "Created",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "last_updated": {
                    "title": "Last updated",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "enum": [
                        "created",
                        "pending",
                        "sent",
                        "received",
                        "started",
                        "success",
                        "failure",
                        "revoked"
                    ]
                },
                "detail": {
                    "title": "Detail",
                    "type": "object"
                },
                "threedimodel": {
                    "title": "Threedimodel",
                    "type": "string",
                    "format": "uri",
                    "readOnly": true
                },
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                }
            }
        },
        "Usage": {
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "simulation": {
                    "$ref": "#/definitions/Simulation"
                },
                "started": {
                    "title": "Started",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "finished": {
                    "title": "Finished",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "total_time": {
                    "title": "Total time",
                    "type": "integer",
                    "maximum": 2147483647,
                    "minimum": 0,
                    "x-nullable": true
                },
                "status": {
                    "title": "Status",
                    "type": "string",
                    "readOnly": true
                },
                "simulation_type": {
                    "title": "Simulation type",
                    "type": "string",
                    "readOnly": true
                },
                "user_name": {
                    "title": "User name",
                    "type": "string",
                    "readOnly": true
                },
                "organisation_uuid": {
                    "title": "Organisation uuid",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "UsageStatistics": {
            "required": [
                "total_sessions",
                "total_duration",
                "avg_duration",
                "min_duration",
                "max_duration",
                "duration_humanized",
                "min_started",
                "max_started"
            ],
            "type": "object",
            "properties": {
                "total_sessions": {
                    "title": "Total sessions",
                    "type": "integer"
                },
                "total_duration": {
                    "title": "Total duration",
                    "type": "integer"
                },
                "avg_duration": {
                    "title": "Avg duration",
                    "type": "number"
                },
                "min_duration": {
                    "title": "Min duration",
                    "type": "integer"
                },
                "max_duration": {
                    "title": "Max duration",
                    "type": "integer"
                },
                "duration_humanized": {
                    "title": "Duration humanized",
                    "type": "string",
                    "minLength": 1
                },
                "min_started": {
                    "title": "Min started",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "max_started": {
                    "title": "Max started",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                }
            }
        }
    }
}
